<codestructure version="5.14">
<phptree>
<treenode node="../../../../examples/server_side/scripts/ssp.class.php;PHP:PHP Include;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Scroller\examples\data\ssp.php;f10;52;64;52;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Scroller\examples\data\ssp.php;f10;52;64;52;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="../../php/DataTables.php;PHP:PHP Include;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\examples\simple\test.php;f14;2;38;2;;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\examples\php\todo.php;f10;10;34;10;;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\examples\php\tableOnlyData.php;f10;7;34;7;;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\examples\php\tableFormatting.php;f10;10;34;10;;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\examples\php\staff.php;f10;7;34;7;;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\examples\php\staff-array.php;f10;7;34;7;;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\examples\php\jsonId.php;f10;7;34;7;;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\examples\php\joinSelf.php;f10;3;34;3;;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\examples\php\joinLinkTable.php;f10;3;34;3;;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\examples\php\joinArray.php;f10;3;34;3;;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\examples\php\join.php;f10;3;34;3;;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\examples\php\formOnlyData.php;f10;7;34;7;;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\examples\php\fieldTypes.php;f10;7;34;7;;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\examples\php\dates.php;f10;7;34;7;;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\examples\php\browsers_array.php;f10;10;34;10;;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\examples\php\browsers.php;f10;7;34;7;;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\examples\advanced\test.php;f10;3;34;3;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\examples\simple\test.php;f14;2;38;2;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\examples\php\todo.php;f10;10;34;10;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\examples\php\tableOnlyData.php;f10;7;34;7;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\examples\php\tableFormatting.php;f10;10;34;10;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\examples\php\staff.php;f10;7;34;7;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\examples\php\staff-array.php;f10;7;34;7;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\examples\php\jsonId.php;f10;7;34;7;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\examples\php\joinSelf.php;f10;3;34;3;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\examples\php\joinLinkTable.php;f10;3;34;3;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\examples\php\joinArray.php;f10;3;34;3;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\examples\php\join.php;f10;3;34;3;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\examples\php\formOnlyData.php;f10;7;34;7;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\examples\php\fieldTypes.php;f10;7;34;7;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\examples\php\dates.php;f10;7;34;7;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\examples\php\browsers_array.php;f10;10;34;10;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\examples\php\browsers.php;f10;7;34;7;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\examples\advanced\test.php;f10;3;34;3;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="DATATABLES;PHP:PHP Word;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\DataTables.php;f8;12;18;12;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\DataTables.php;f8;12;18;12;;;;vpos;;v;;r&#10;Description&#10;     DataTables PHP libraries.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="ssp.class.php;PHP:PHP Include;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\examples\server_side\scripts\server_processing.php;f10;65;23;65;;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\examples\server_side\scripts\post.php;f10;65;23;65;;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\examples\server_side\scripts\objects.php;f10;51;23;51;;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\examples\server_side\scripts\jsonp.php;f10;63;23;63;;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\examples\server_side\scripts\ids-objects.php;f10;74;23;74;;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\examples\server_side\scripts\ids-arrays.php;f10;75;23;75;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\examples\server_side\scripts\server_processing.php;f10;65;23;65;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\examples\server_side\scripts\post.php;f10;65;23;65;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\examples\server_side\scripts\objects.php;f10;51;23;51;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\examples\server_side\scripts\jsonp.php;f10;63;23;63;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\examples\server_side\scripts\ids-objects.php;f10;74;23;74;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\examples\server_side\scripts\ids-arrays.php;f10;75;23;75;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="staff-rest.php;PHP:PHP Include;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\examples\php\rest\remove.php;f10;6;24;6;;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\examples\php\rest\get.php;f10;6;24;6;;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\examples\php\rest\edit.php;f10;6;24;6;;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\examples\php\rest\create.php;f10;6;24;6;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\examples\php\rest\remove.php;f10;6;24;6;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\examples\php\rest\get.php;f10;6;24;6;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\examples\php\rest\edit.php;f10;6;24;6;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\examples\php\rest\create.php;f10;6;24;6;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="vendor/autoload.php;PHP:PHP Include;C:\xampp\htdocs\claims-fab\index.php;f9;20;28;20;;;;vpos;;v;;r&#10;Description&#10;     __       _           _ / _| __ _| |__  _   _| | ___   __ _ | |_ / _` | &apos;_ \| | | | |/ _ \ / _` | |  _| (_| | |_) | |_| | | (_) | (_| | |_|  \__,_|_.__/ \__,_|_|\___/ \__, | |___/;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="Agent;PHP:Class Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\cli\ws.php;f0;354;1;515;;;;vpos;;v;;r;;d12,354;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\cli\ws.php;f1;501;2;513;;;;vpos;;vobject;;r&#10;Definition&#10;    __construct($server,$socket,$verb,$uri,array $hdrs)&#10;&#10;Description&#10;     Instantiate object&#10;&#10;Parameters:&#10;     $server - object&#10;     $socket - resource&#10;     $verb - string&#10;     $uri - string&#10;     $hdrs - array;;d62,501;;b0,0;;m $server;;p $socket;;p $verb;;p $uri;;p $hdrs;;p">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\cli\ws.php;f1;486;2;490;;;;vpos;;vNULL;;r&#10;Definition&#10;    __destruct()&#10;&#10;Description&#10;     Destroy object;;d23,486;;b0,0;;m">
</treenode>
<treenode node="fetch;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\cli\ws.php;f1;442;2;472;;;;vpos;;varray;;r&#10;Definition&#10;    fetch()&#10;&#10;Description&#10;     Retrieve and unmask payload&#10;&#10;Return:&#10;   |FALSE;;d18,442;;b0,0;;m">
</treenode>
<treenode node="free;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\cli\ws.php;f1;478;2;480;;;;vpos;;vNULL;;r&#10;Definition&#10;    free()&#10;&#10;Description&#10;     Free stream socket;;d17,478;;b0,0;;m">
</treenode>
<treenode node="headers;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\cli\ws.php;f1;403;2;405;;;;vpos;;vstring;;r&#10;Definition&#10;    headers()&#10;&#10;Description&#10;     Return socket headers;;d20,403;;b0,0;;m">
</treenode>
<treenode node="id;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\cli\ws.php;f1;379;2;381;;;;vpos;;vstring;;r&#10;Definition&#10;    id()&#10;&#10;Description&#10;     Return socket ID;;d15,379;;b0,0;;m">
</treenode>
<treenode node="send;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\cli\ws.php;f1;414;2;436;;;;vpos;;vstring;;r&#10;Definition&#10;    send($op,$data=&apos;&apos;)&#10;&#10;Description&#10;     Frame and transmit payload&#10;&#10;Parameters:&#10;     $socket - resource&#10;     $op - int&#10;     $payload - string&#10;&#10;Return:&#10;   |FALSE;;d29,414;;b0,0;;mop;;pdata;;p">
</treenode>
<treenode node="server;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\cli\ws.php;f1;371;2;373;;;;vpos;;vobject;;r&#10;Definition&#10;    server()&#10;&#10;Description&#10;     Return server instance;;d19,371;;b0,0;;m">
</treenode>
<treenode node="uri;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\cli\ws.php;f1;395;2;397;;;;vpos;;vstring;;r&#10;Definition&#10;    uri()&#10;&#10;Description&#10;     Return request URI;;d16,395;;b0,0;;m">
</treenode>
<treenode node="verb;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\cli\ws.php;f1;387;2;389;;;;vpos;;vstring;;r&#10;Definition&#10;    verb()&#10;&#10;Description&#10;     Return request method;;d17,387;;b0,0;;m">
</treenode>
</treenode>
<treenode node="Assets;PHP:Class Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-assets\lib\assets.php;f0;18;1;832;;;;vpos;;vPrefab;;c;;r&#10;Definition&#10;    class Assets extends Prefab&#10;&#10;Description&#10;     Asset manager for the PHP Fat-Free Framework;;d28,18;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-assets\lib\assets.php;f8;35;2;133;;;;vpos;;v;;r;;d31,35;;b1,0;;m">
</treenode>
<treenode node="_body;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-assets\lib\assets.php;f8;819;2;831;;;;vpos;;vstring;;r&#10;Definition&#10;    _body($node)&#10;&#10;Description&#10;     auto-append footer slot marker into &lt;body&gt;&#10;&#10;Parameters:&#10;     $node;;d30,819;;b1,0;;m $node;;p">
</treenode>
<treenode node="_head;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-assets\lib\assets.php;f8;793;2;801;;;;vpos;;vstring;;r&#10;Definition&#10;    _head($node)&#10;&#10;Description&#10;     auto-append slot marker into &lt;head&gt;&#10;&#10;Parameters:&#10;     $node;;d30,793;;b1,0;;m $node;;p">
</treenode>
<treenode node="add;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-assets\lib\assets.php;f8;518;2;546;;;;vpos;;v;;r&#10;Definition&#10;    add($path,$type,$group=&apos;head&apos;,$priority=5,$slot=null,$params=null)&#10;&#10;Description&#10;     add an asset&#10;&#10;Parameters:&#10;    string $path&#10;    string $type&#10;    string $group&#10;    int $priority&#10;    string $slot&#10;    array $params;;d84,518;;b1,0;;mstring $path;;pstring $type;;pstring $group;;pint $priority;;pstring $slot;;parray $params;;p">
</treenode>
<treenode node="addCss;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-assets\lib\assets.php;f8;566;2;568;;;;vpos;;v;;r&#10;Definition&#10;    addCss($path,$priority=5,$group=&apos;head&apos;,$slot=null)&#10;&#10;Description&#10;     add a css asset&#10;&#10;Parameters:&#10;    string $path&#10;    int $priority&#10;    string $group&#10;    null $slot;;d68,566;;b1,0;;mstring $path;;pint $priority;;pstring $group;;pnull $slot;;p">
</treenode>
<treenode node="addInline;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-assets\lib\assets.php;f8;577;2;588;;;;vpos;;v;;r&#10;Definition&#10;    addInline($content,$type,$group=&apos;head&apos;,$slot=&apos;inline&apos;)&#10;&#10;Description&#10;     add inline script or styles&#10;&#10;Parameters:&#10;    string $content&#10;    string $type&#10;    string $group&#10;    string $slot;;d72,577;;b1,0;;mstring $content;;pstring $type;;pstring $group;;pstring $slot;;p">
</treenode>
<treenode node="addJs;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-assets\lib\assets.php;f8;555;2;557;;;;vpos;;v;;r&#10;Definition&#10;    addJs($path,$priority=5,$group=&apos;footer&apos;,$slot=null)&#10;&#10;Description&#10;     add a javascript asset&#10;&#10;Parameters:&#10;    string $path&#10;    int $priority&#10;    string $group&#10;    null $slot;;d69,555;;b1,0;;mstring $path;;pint $priority;;pstring $group;;pnull $slot;;p">
</treenode>
<treenode node="addNode;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-assets\lib\assets.php;f8;595;2;631;;;;vpos;;vstring;;r&#10;Definition&#10;    addNode($node)&#10;&#10;Description&#10;     push new asset during template execution&#10;&#10;Parameters:&#10;     $node;;d32,595;;b1,0;;m $node;;p">
</treenode>
<treenode node="clear;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-assets\lib\assets.php;f8;164;2;173;;;;vpos;;vinteger;;r&#10;Definition&#10;    clear()&#10;&#10;Description&#10;     reset the temporary public path;;d25,164;;b1,0;;m">
</treenode>
<treenode node="combine;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-assets\lib\assets.php;f8;253;2;359;;;;vpos;;varray;;r&#10;Definition&#10;    combine($collection)&#10;&#10;Description&#10;     combine a whole asset group&#10;&#10;Parameters:&#10;     $collection;;d38,253;;b1,0;;m $collection;;p">
</treenode>
<treenode node="filter;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-assets\lib\assets.php;f8;149;2;151;;;;vpos;;v;;r&#10;Definition&#10;    filter($name,$func)&#10;&#10;Description&#10;     set custom group filter&#10;&#10;Parameters:&#10;    string $name&#10;     $func;;d37,149;;b1,0;;mstring $name;;p $func;;p">
</treenode>
<treenode node="fixRelativePaths;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-assets\lib\assets.php;f8;448;2;481;;;;vpos;;vstring;;r&#10;Definition&#10;    fixRelativePaths($content,$path,$targetDir=null)&#10;&#10;Description&#10;     Rewrite relative URLs in CSS&#10;&#10;Parameters:&#10;    string $content&#10;    string $path&#10;    string $targetDir;;d66,448;;b1,0;;mstring $content;;pstring $path;;pstring $targetDir;;p">
</treenode>
<treenode node="formatter;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-assets\lib\assets.php;f8;140;2;142;;;;vpos;;v;;r&#10;Definition&#10;    formatter($type,$func)&#10;&#10;Description&#10;     set custom type formatter&#10;&#10;Parameters:&#10;    string $type&#10;     $func;;d40,140;;b1,0;;mstring $type;;p $func;;p">
</treenode>
<treenode node="getAssets;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-assets\lib\assets.php;f8;189;2;208;;;;vpos;;varray;;r&#10;Definition&#10;    getAssets($group=&apos;head&apos;,$type=null)&#10;&#10;Description&#10;     get sorted, unique assets from group&#10;&#10;Parameters:&#10;    string $group - which group to render&#10;    string $type - which type to render, or all;;d53,189;;b1,0;;mstring $group;;pstring $type;;p">
</treenode>
<treenode node="getGroups;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-assets\lib\assets.php;f8;179;2;181;;;;vpos;;varray;;r&#10;Definition&#10;    getGroups()&#10;&#10;Description&#10;     get all defined groups;;d29,179;;b1,0;;m">
</treenode>
<treenode node="minify;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-assets\lib\assets.php;f8;366;2;438;;;;vpos;;vmixed;;r&#10;Definition&#10;    minify($collection)&#10;&#10;Description&#10;     minify each file in a collection&#10;&#10;Parameters:&#10;     $collection;;d37,366;;b1,0;;m $collection;;p">
</treenode>
<treenode node="parseNode;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-assets\lib\assets.php;f1;638;2;679;;;;vpos;;vstring;;r&#10;Definition&#10;    parseNode($node)&#10;&#10;Description&#10;     parse node data on template compiling&#10;&#10;Parameters:&#10;     $node;;d27,638;;b0,0;;m $node;;p">
</treenode>
<treenode node="relPath;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-assets\lib\assets.php;f8;489;2;507;;;;vpos;;vstring;;r&#10;Definition&#10;    relPath($from,$to)&#10;&#10;Description&#10;     assemble relative path to go from A to B&#10;&#10;Parameters:&#10;     $from&#10;     $to;;d36,489;;b1,0;;m $from;;p $to;;p">
</treenode>
<treenode node="render;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-assets\lib\assets.php;f8;712;2;714;;;;vpos;;vstring;;r&#10;Definition&#10;    render($group=&apos;head&apos;)&#10;&#10;Description&#10;     return placeholder for pending afterrender event&#10;&#10;Parameters:&#10;    string $group;;d39,712;;b1,0;;mstring $group;;p">
</treenode>
<treenode node="renderAssetTag;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-assets\lib\assets.php;f15;721;2;725;;;;vpos;;vmixed;;r&#10;Definition&#10;    renderAssetTag(array $node)&#10;&#10;Description&#10;     handle &lt;asset&gt; template tag&#10;&#10;Parameters:&#10;     $node;;d52,721;;b1,5;;m $node;;p">
</treenode>
<treenode node="renderBodyTag;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-assets\lib\assets.php;f15;808;2;812;;;;vpos;;vmixed;;r&#10;Definition&#10;    renderBodyTag(array $node)&#10;&#10;Description&#10;     handle &lt;head&gt; template tag&#10;&#10;Parameters:&#10;     $node;;d51,808;;b1,5;;m $node;;p">
</treenode>
<treenode node="renderGroup;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-assets\lib\assets.php;f8;215;2;246;;;;vpos;;vstring;;r&#10;Definition&#10;    renderGroup($assets)&#10;&#10;Description&#10;     render asset group&#10;&#10;Parameters:&#10;    array $assets;;d38,215;;b1,0;;marray $assets;;p">
</treenode>
<treenode node="renderHeadTag;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-assets\lib\assets.php;f15;782;2;786;;;;vpos;;vmixed;;r&#10;Definition&#10;    renderHeadTag(array $node)&#10;&#10;Description&#10;     handle &lt;head&gt; template tag&#10;&#10;Parameters:&#10;     $node;;d51,782;;b1,5;;m $node;;p">
</treenode>
<treenode node="renderLinkCSSTag;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-assets\lib\assets.php;f15;756;2;775;;;;vpos;;vmixed;;r&#10;Definition&#10;    renderLinkCSSTag(array $node)&#10;&#10;Description&#10;     crawl &lt;link&gt; tags in greedy mode&#10;&#10;Parameters:&#10;    array $node&#10;&#10;Return:&#10;   |string;;d54,756;;b1,5;;marray $node;;p">
</treenode>
<treenode node="renderScriptTag;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-assets\lib\assets.php;f15;732;2;737;;;;vpos;;vmixed;;r&#10;Definition&#10;    renderScriptTag(array $node)&#10;&#10;Description&#10;     crawl &lt;script&gt; tags in greedy mode&#10;&#10;Parameters:&#10;    array $node;;d53,732;;b1,5;;marray $node;;p">
</treenode>
<treenode node="renderStyleTag;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-assets\lib\assets.php;f15;744;2;749;;;;vpos;;vmixed;;r&#10;Definition&#10;    renderStyleTag(array $node)&#10;&#10;Description&#10;     crawl &lt;style&gt; tags in greedy mode&#10;&#10;Parameters:&#10;    array $node;;d52,744;;b1,5;;marray $node;;p">
</treenode>
<treenode node="reset;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-assets\lib\assets.php;f8;156;2;158;;;;vpos;;v;;r&#10;Definition&#10;    reset()&#10;&#10;Description&#10;     reset file groups;;d25,156;;b1,0;;m">
</treenode>
<treenode node="resolveAttr;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-assets\lib\assets.php;f1;686;2;705;;;;vpos;;vstring;;r&#10;Definition&#10;    resolveAttr(array $attr)&#10;&#10;Description&#10;     general bypass for unhandled tag attributes&#10;&#10;Parameters:&#10;    array $attr;;d35,686;;b0,0;;marray $attr;;p">
</treenode>
</treenode>
<treenode node="Audit;PHP:Class Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\audit.php;f0;23;11;23;;;;vpos;;vPrefab;;c;;r;;d27,23;;b0,0;;m">
<treenode node="UA_Mobile;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\audit.php;f0;27;11;27;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="FILTER_VALIDATE_EMAIL;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\audit.php;f35;50;56;50;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="FILTER_VALIDATE_IP;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\audit.php;f32;60;50;60;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="FILTER_FLAG_IPV4;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\audit.php;f51;60;67;60;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="FILTER_VALIDATE_IP;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\audit.php;f32;69;50;69;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="FILTER_FLAG_IPV6;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\audit.php;f51;69;67;69;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="FILTER_VALIDATE_IP;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\audit.php;f33;78;51;78;;;;vpos;;v;;rstrlen($str);;d-1,-1;;b0,0;;m">
<treenode node="FILTER_FLAG_IPV4;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\audit.php;f0;79;19;79;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="FILTER_FLAG_IPV6;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\audit.php;f20;79;36;79;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="FILTER_FLAG_NO_PRIV_RANGE;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\audit.php;f37;79;62;79;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="FILTER_VALIDATE_IP;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\audit.php;f33;88;51;88;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="FILTER_FLAG_IPV4;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\audit.php;f0;89;19;89;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="FILTER_FLAG_IPV6;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\audit.php;f20;89;36;89;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="FILTER_FLAG_NO_RES_RANGE;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\audit.php;f37;89;61;89;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="FILTER_VALIDATE_IP;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\audit.php;f32;98;50;98;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="FILTER_FLAG_IPV4;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\audit.php;f0;99;19;99;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="FILTER_FLAG_IPV6;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\audit.php;f20;99;36;99;;;;vpos;;v;;rpreg_replace(&apos;/[^\d]/&apos;,&apos;&apos;,$id);;d-1,-1;;b0,0;;m">
<treenode node="FILTER_FLAG_NO_PRIV_RANGE;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\audit.php;f0;100;28;100;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="Base;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\audit.php;f10;110;14;110;;;;vpos;;v;;r$id[$i]+$i%2*(($id[$i]&gt;4)*-4+$id[$i]%5);;d-1,-1;;b0,0;;m">
<treenode node="AGENT;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\audit.php;f28;110;33;110;;;;vpos;;v;;rBase::instance()-&gt;AGENT;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="self;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\audit.php;f31;111;35;111;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="Base;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\audit.php;f10;122;14;122;;;;vpos;;v;;rstrlen($id);;d-1,-1;;b0,0;;m">
<treenode node="AGENT;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\audit.php;f28;122;33;122;;;;vpos;;v;;rBase::instance()-&gt;AGENT;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="self;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\audit.php;f31;123;35;123;;;;vpos;;v;;r0;;d-1,-1;;b0,0;;m">
<treenode node="Base;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\audit.php;f10;133;14;133;;;;vpos;;v;;rstrrev($id);;d-1,-1;;b0,0;;m">
<treenode node="AGENT;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\audit.php;f28;133;33;133;;;;vpos;;v;;rBase::instance()-&gt;AGENT;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="self;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\audit.php;f31;134;35;134;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="UA_Bot;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\audit.php;f37;134;43;134;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
</treenode>
<treenode node="UA_Mobile;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\audit.php;f37;123;46;123;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
</treenode>
<treenode node="UA_Desktop;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\audit.php;f37;111;47;111;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
</treenode>
<treenode node="FILTER_FLAG_NO_RES_RANGE;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\audit.php;f29;100;53;100;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
<treenode node="UA_Desktop;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\audit.php;f0;28;12;28;;;;vpos;;v;;r[];;d-1,-1;;b0,0;;m">
<treenode node="FILTER_VALIDATE_URL;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\audit.php;f35;38;54;38;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="UA_Bot;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\audit.php;f0;29;8;29;;;;vpos;;v;;r&apos;bot|crawl|slurp|spider&apos;;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
</treenode>
</treenode>
<treenode node="Auth;PHP:Class Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\auth.php;f0;23;1;248;;C:\xampp\htdocs\claims-fab\app\controller\auth.php;f0;5;1;115;;;;vpos;;vBase;;c;;r;;d24,5;;b0,0;;m">
<treenode node="E_LDAP;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\auth.php;f0;27;8;27;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="E_SMTP;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\auth.php;f0;28;8;28;;;;vpos;;v;;r&apos;SMTP connection failure&apos;;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\auth.php;f1;237;2;246;;;;vpos;;vobject;;r&#10;Definition&#10;    __construct($storage,array $args=NULL)&#10;&#10;Description&#10;     Instantiate class&#10;&#10;Parameters:&#10;     $storage - string|object&#10;     $args - array;;d49,237;;b0,0;;m $storage;;p $args;;p">
</treenode>
<treenode node="_jig;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\auth.php;f11;46;2;63;;;;vpos;;vbool;;r&#10;Definition&#10;    _jig($id,$pw,$realm)&#10;&#10;Description&#10;     Jig storage handler&#10;&#10;Parameters:&#10;     $id - string&#10;     $pw - string&#10;     $realm - string;;d41,46;;b2,0;;m $id;;p $pw;;p $realm;;p">
</treenode>
<treenode node="_ldap;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\auth.php;f11;116;2;140;;;;vpos;;vbool;;r&#10;Definition&#10;    _ldap($id,$pw)&#10;&#10;Description&#10;     LDAP storage handler&#10;&#10;Parameters:&#10;     $id - string&#10;     $pw - string;;d35,116;;b2,0;;m $id;;p $pw;;p">
</treenode>
<treenode node="_mongo;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\auth.php;f11;72;2;82;;;;vpos;;vbool;;r&#10;Definition&#10;    _mongo($id,$pw,$realm)&#10;&#10;Description&#10;     MongoDB storage handler&#10;&#10;Parameters:&#10;     $id - string&#10;     $pw - string&#10;     $realm - string;;d43,72;;b2,0;;m $id;;p $pw;;p $realm;;p">
</treenode>
<treenode node="_smtp;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\auth.php;f11;148;2;187;;;;vpos;;vbool;;r&#10;Definition&#10;    _smtp($id,$pw)&#10;&#10;Description&#10;     SMTP storage handler&#10;&#10;Parameters:&#10;     $id - string&#10;     $pw - string;;d35,148;;b2,0;;m $id;;p $pw;;p">
</treenode>
<treenode node="_sql;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\auth.php;f11;91;2;108;;;;vpos;;vbool;;r&#10;Definition&#10;    _sql($id,$pw,$realm)&#10;&#10;Description&#10;     SQL storage handler&#10;&#10;Parameters:&#10;     $id - string&#10;     $pw - string&#10;     $realm - string;;d41,91;;b2,0;;m $id;;p $pw;;p $realm;;p">
</treenode>
<treenode node="basic;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\auth.php;f1;205;2;229;;;;vpos;;vbool;;r&#10;Definition&#10;    basic($func=NULL)&#10;&#10;Description&#10;     HTTP basic auth mechanism&#10;&#10;Parameters:&#10;     $func - callback;;d28,205;;b0,0;;m $func;;p">
</treenode>
<treenode node="beforeroute;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\controller\auth.php;f11;17;5;19;;;;vpos;;v;;r;;d37,17;;b1,0;;mf3;;p">
</treenode>
<treenode node="forgot;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\controller\auth.php;f11;100;5;103;;;;vpos;;v;;r;;d40,100;;b1,0;;mf3;;pparams;;p">
</treenode>
<treenode node="index;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\controller\auth.php;f11;13;5;15;;;;vpos;;v;;r&#10;Definition&#10;    index($f3)&#10;&#10;Description&#10;     init the View;;d31,13;;b1,0;;mf3;;p">
</treenode>
<treenode node="isLoggedIn;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\controller\auth.php;f18;25;5;37;;;;vpos;;vbool;;r&#10;Definition&#10;    isLoggedIn()&#10;&#10;Description&#10;     check login state;;d40,25;;b1,5;;m">
</treenode>
<treenode node="login;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\auth.php;f1;196;2;198;;C:\xampp\htdocs\claims-fab\app\controller\auth.php;f11;42;5;67;;;;vpos;;v;;r&#10;Definition&#10;    login($f3,$params)&#10;&#10;Description&#10;     login procedure;;d39,42;;b1,0;;mf3;;pparams;;p">
</treenode>
<treenode node="logout;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\controller\auth.php;f11;110;5;113;;;;vpos;;v;;r;;d40,110;;b1,0;;mf3;;pparams;;p">
</treenode>
<treenode node="register;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\controller\auth.php;f11;69;5;98;;;;vpos;;v;;r;;d42,69;;b1,0;;mf3;;pparams;;p">
</treenode>
<treenode node="verification;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\controller\auth.php;f11;105;5;108;;;;vpos;;v;;r;;d46,105;;b1,0;;mf3;;pparams;;p">
</treenode>
</treenode>
<treenode node="AuthorModel;PHP:Class Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\test\authormodel.php;f0;2;1;29;;;;vpos;;vCortex;;c;;r;;d37,2;;b0,0;;m">
</treenode>
<treenode node="Backend;PHP:Class Name;C:\xampp\htdocs\claims-fab\app\view\backend.php;f0;4;1;38;;C:\xampp\htdocs\claims-fab\app\controller\backend.php;f0;5;1;53;;;;vpos;;vBase;;c;;r;;d27,4;;b0,0;;m">
<treenode node="__call;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\controller\backend.php;f8;42;2;44;;;;vpos;;vmixed;;r&#10;Definition&#10;    __call($name,$args)&#10;&#10;Description&#10;     pass method calls to module&#10;&#10;Parameters:&#10;     $name&#10;     $args;;d37,42;;b1,0;;m $name;;p $args;;p">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\view\backend.php;f8;9;2;24;;;;vpos;;v;;r;;d31,9;;b1,0;;m">
</treenode>
<treenode node="afterroute;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\controller\backend.php;f8;49;2;51;;;;vpos;;v;;r&#10;Definition&#10;    afterroute()&#10;&#10;Description&#10;     give the module control about the view;;d30,49;;b1,0;;m">
</treenode>
<treenode node="beforeroute;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\controller\backend.php;f8;13;2;19;;;;vpos;;v;;r&#10;Definition&#10;    beforeroute($f3)&#10;&#10;Description&#10;     init the backend view, so the module controller can care about it;;d34,13;;b1,0;;mf3;;p">
</treenode>
<treenode node="loadModule;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\controller\backend.php;f11;26;2;34;;;;vpos;;vbool;;r&#10;Definition&#10;    loadModule($name)&#10;&#10;Description&#10;     load module controller class&#10;&#10;Parameters:&#10;     $name;;d38,26;;b2,0;;m $name;;p">
</treenode>
<treenode node="render;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\view\backend.php;f9;30;5;36;;;;vpos;;v;;r;;d27,30;;b1,0;;m">
</treenode>
<treenode node="setTemplate;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\view\backend.php;f8;26;2;28;;;;vpos;;v;;r;;d40,26;;b1,0;;mfilepath;;p">
</treenode>
</treenode>
<treenode node="Base;PHP:Class Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f6;42;1;2424;;C:\xampp\htdocs\claims-fab\app\view\base.php;f9;4;1;14;;C:\xampp\htdocs\claims-fab\app\model\base.php;f0;4;1;61;;C:\xampp\htdocs\claims-fab\app\controller\base.php;f9;4;1;37;;;;vpos;;vPrefab;;cArrayAccess;;c;;r;;d55,42;;b0,0;;m">
<treenode node="PACKAGE;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;46;9;46;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="HTTP_100;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;52;10;52;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="HTTP_101;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;53;10;53;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="Cache;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f8;367;13;367;;;;vpos;;v;;rCache::instance()-&gt;load($val);;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="HTTP_103;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;54;10;54;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="HTTP_200;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;55;10;55;;;;vpos;;v;;r$val;;d-1,-1;;b0,0;;m">
<treenode node="HTTP_201;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;56;10;56;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="HTTP_202;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;57;10;57;;;;vpos;;v;;r$time+$ttl;;d-1,-1;;b0,0;;m">
<treenode node="HTTP_203;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;58;10;58;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="HTTP_204;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;59;10;59;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="hive;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f52;353;56;353;;;;vpos;;v;;r$this-&gt;unserialize($this-&gt;serialize($this-&gt;hive[&apos;JAR&apos;]));;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="HTTP_205;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;60;10;60;;;;vpos;;v;;r$this-&gt;cut($key);;d-1,-1;;b0,0;;m">
<treenode node="HTTP_206;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;61;10;61;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="Cache;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f5;336;10;336;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="hive;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f20;348;24;348;;;;vpos;;v;;r(int)$this-&gt;hive[&apos;TIME&apos;];;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="HTTP_300;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;62;10;62;;;;vpos;;v;;r$this-&gt;ref($key,FALSE);;d-1,-1;;b0,0;;m">
<treenode node="Cache;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f4;324;9;324;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="HTTP_301;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;63;10;63;;;;vpos;;v;;r$this-&gt;ref($key,FALSE);;d-1,-1;;b0,0;;m">
<treenode node="HTTP_302;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;64;10;64;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="HTTP_303;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;65;10;65;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="HTTP_304;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;66;10;66;;;;vpos;;v;;r&amp;$null;;d-1,-1;;b0,0;;m">
<treenode node="HTTP_305;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;67;10;67;;;;vpos;;v;;r&amp;$var[$part];;d-1,-1;;b0,0;;m">
<treenode node="HTTP_307;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;68;10;68;;;;vpos;;v;;r[];;d-1,-1;;b0,0;;m">
<treenode node="HTTP_400;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;69;10;69;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="HTTP_401;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;70;10;70;;;;vpos;;v;;r&amp;$null;;d-1,-1;;b0,0;;m">
<treenode node="HTTP_402;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;71;10;71;;;;vpos;;v;;r&amp;$var-&gt;$part;;d-1,-1;;b0,0;;m">
<treenode node="HTTP_403;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;72;10;72;;;;vpos;;v;;rFALSE;;d-1,-1;;b0,0;;m">
<treenode node="HTTP_404;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;73;10;73;;;;vpos;;v;;rTRUE;;d-1,-1;;b0,0;;m">
<treenode node="HTTP_405;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;74;10;74;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="HTTP_406;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;75;10;75;;;;vpos;;v;;r$this-&gt;cut($key);;d-1,-1;;b0,0;;m">
<treenode node="HTTP_407;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;76;10;76;;;;vpos;;v;;rNULL;;d-1,-1;;b0,0;;m">
<treenode node="HTTP_408;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;77;10;77;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="HTTP_409;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;78;10;78;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="HTTP_410;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;79;10;79;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="HTTP_411;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;80;10;80;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="HTTP_412;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;81;10;81;;;;vpos;;v;;rfunction_exists($sub[1])?&#10;									$sub[0]:&#10;									(&apos;[&apos;.var_export($sub[1],TRUE).&apos;]&apos;.$sub[2]);;d-1,-1;;b0,0;;m">
<treenode node="HTTP_413;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;82;10;82;;;;vpos;;v;;r&apos;[&apos;.&#10;									(isset($sub[3])?&#10;										$this-&gt;compile($sub[3]):&#10;										var_export($sub[1],TRUE)).&#10;								&apos;]&apos;;;d-1,-1;;b0,0;;m">
<treenode node="HTTP_414;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;83;10;83;;;;vpos;;v;;r(int)$sub[1];;d-1,-1;;b0,0;;m">
<treenode node="HTTP_415;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;84;10;84;;;;vpos;;v;;r&apos;$&apos;.$expr[1];;d-1,-1;;b0,0;;m">
<treenode node="HTTP_416;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;85;10;85;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="HTTP_417;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;86;10;86;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="HTTP_500;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;87;10;87;;;;vpos;;v;;rtrim($val);;d-1,-1;;b0,0;;m">
<treenode node="HTTP_501;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;88;10;88;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="HTTP_502;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;89;10;89;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="HTTP_503;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;90;10;90;;;;vpos;;v;;rtrim($pair[3]);;d-1,-1;;b0,0;;m">
<treenode node="HTTP_504;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;91;10;91;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="GLOBALS;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;97;9;97;;;;vpos;;v;;r[];;d-1,-1;;b0,0;;m">
<treenode node="VERBS;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;99;7;99;;;;vpos;;v;;r[];;d-1,-1;;b0,0;;m">
<treenode node="MODE;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;101;6;101;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CSS;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;103;5;103;;;;vpos;;v;;r&apos;code.css&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="REQ_SYNC;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;107;10;107;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="REQ_AJAX;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;108;10;108;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="E_Pattern;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;114;11;114;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="E_Named;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;115;9;115;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="E_Fatal;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;116;9;116;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="E_Open;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;117;8;117;;;;vpos;;v;;rpreg_replace_callback(&apos;/@(\w+)|(\*)/&apos;,&#10;				function($match) use(&amp;$i,$args) {&#10;					if (isset($match[1]) &amp;&amp;&#10;						array_key_exists($match[1],$args))&#10;						return $args[$match[1]];;d-1,-1;;b0,0;;m">
<treenode node="E_Routes;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;118;10;118;;;;vpos;;v;;r0;;d-1,-1;;b0,0;;m">
<treenode node="E_Class;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;119;9;119;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="E_Method;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;120;10;120;;;;vpos;;v;;r&apos;en&apos;;;d-1,-1;;b0,0;;m">
<treenode node="E_Hive;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;121;8;121;;;;vpos;;v;;r&apos;Invalid hive key %s&apos;;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
<treenode node="hive;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f16;142;20;142;;;;vpos;;v;;r&amp;$GLOBALS[&apos;_&apos;.$key];;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PREG_SPLIT_NO_EMPTY;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f13;152;32;152;;;;vpos;;v;;r$this-&gt;build($var,$args);;d-1,-1;;b0,0;;m">
<treenode node="hive;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f16;162;20;162;;;;vpos;;v;;r$this-&gt;hive[&apos;PARAMS&apos;];;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PREG_SPLIT_DELIM_CAPTURE;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f33;152;57;152;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
<treenode node="REQ_CLI;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;109;9;109;;;;vpos;;v;;r4;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
</treenode>
</treenode>
<treenode node="PREG_SET_ORDER;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f15;195;29;195;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
</treenode>
<treenode node="HTTP_505;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;92;10;92;;;;vpos;;v;;r&apos;HTTP Version Not Supported&apos;;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
<treenode node="PHP_SESSION_ACTIVE;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f44;272;62;272;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
<treenode node="self;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f22;277;26;277;;;;vpos;;v;;rFALSE;;d-1,-1;;b0,0;;m">
<treenode node="E_Hive;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f28;277;34;277;;;;vpos;;v;;r$this-&gt;hive;;d-1,-1;;b0,0;;m">
<treenode node="E_USER_ERROR;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;278;16;278;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="hive;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f17;281;21;281;;;;vpos;;v;;r&amp;$this-&gt;hive;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
<treenode node="stdclass;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f13;292;22;292;;;;vpos;;v;;rnew stdclass;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
<treenode node="VERSION;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;47;9;47;;;;vpos;;v;;r&apos;3.6.4-Release&apos;;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
<treenode node="__call;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;2184;2;2188;;;;vpos;;vmixed;;r&#10;Definition&#10;    __call($key,array $args)&#10;&#10;Description&#10;     Call function identified by hive key&#10;&#10;Parameters:&#10;     $key - string&#10;     $args - array;;d35,2184;;b0,0;;m $key;;p $args;;p">
</treenode>
<treenode node="__clone;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f9;2191;2;2192;;;;vpos;;v;;r;;d28,2191;;b3,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;2195;2;2422;;C:\xampp\htdocs\claims-fab\app\model\base.php;f8;12;2;38;;;;vpos;;v;;r;;d24,2195;;b0,0;;m">
</treenode>
<treenode node="__get;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;2164;2;2167;;;;vpos;;vmixed;;r&#10;Definition&#10;    &amp;__get($key)&#10;&#10;Description&#10;     Alias for offsetget()&#10;&#10;Parameters:&#10;     $key - string;;d23,2164;;b0,0;;m $key;;p">
</treenode>
<treenode node="__isset;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;2145;2;2147;;;;vpos;;vmixed;;r&#10;Definition&#10;    __isset($key)&#10;&#10;Description&#10;     Alias for offsetexists()&#10;&#10;Parameters:&#10;     $key - string;;d24,2145;;b0,0;;m $key;;p">
</treenode>
<treenode node="__set;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;2155;2;2157;;;;vpos;;vmixed;;r&#10;Definition&#10;    __set($key,$val)&#10;&#10;Description&#10;     Alias for offsetset()&#10;&#10;Parameters:&#10;     $key - string&#10;     $val - mixed;;d27,2155;;b0,0;;m $key;;p $val;;p">
</treenode>
<treenode node="__unset;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;2174;2;2176;;;;vpos;;vmixed;;r&#10;Definition&#10;    __unset($key)&#10;&#10;Description&#10;     Alias for offsetunset()&#10;&#10;Parameters:&#10;     $key - string;;d24,2174;;b0,0;;m $key;;p">
</treenode>
<treenode node="abort;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;1737;2;1751;;;;vpos;;v;;r&#10;Definition&#10;    abort()&#10;&#10;Description&#10;     Disconnect HTTP client;;d18,1737;;b0,0;;m">
</treenode>
<treenode node="afterroute;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\controller\base.php;f8;32;2;36;;;;vpos;;vstring;;r&#10;Definition&#10;    afterroute()&#10;&#10;Description&#10;     kick start the View, which creates the response based on our previously set content data. finally echo the response or overwrite this method and do something else with it.;;d30,32;;b1,0;;m">
</treenode>
<treenode node="agent;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;1144;2;1152;;;;vpos;;vstring;;r&#10;Definition&#10;    agent()&#10;&#10;Description&#10;     Return HTTP user agent;;d18,1144;;b0,0;;m">
</treenode>
<treenode node="ajax;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;1158;2;1162;;;;vpos;;vbool;;r&#10;Definition&#10;    ajax()&#10;&#10;Description&#10;     Return TRUE if XMLHttpRequest detected;;d17,1158;;b0,0;;m">
</treenode>
<treenode node="alias;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;1345;2;1354;;;;vpos;;vstring;;r&#10;Definition&#10;    alias($name,$params=[],$query=NULL)&#10;&#10;Description&#10;     Assemble url from alias name&#10;&#10;Parameters:&#10;     $name - string&#10;     $params - array|string&#10;     $query - string|array;;d46,1345;;b0,0;;m $name;;p $params;;p $query;;p">
</treenode>
<treenode node="autoload;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f11;2068;2;2080;;;;vpos;;vmixed;;r&#10;Definition&#10;    autoload($class)&#10;&#10;Description&#10;     Namespace-aware class autoloader&#10;&#10;Parameters:&#10;     $class - string;;d37,2068;;b2,0;;m $class;;p">
</treenode>
<treenode node="base64;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;785;2;787;;;;vpos;;vstring;;r&#10;Definition&#10;    base64($data,$mime)&#10;&#10;Description&#10;     Return Base64-encoded equivalent&#10;&#10;Parameters:&#10;     $data - string&#10;     $mime - string;;d30,785;;b0,0;;m $data;;p $mime;;p">
</treenode>
<treenode node="beforeroute;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\controller\base.php;f8;20;2;23;;;;vpos;;v;;r&#10;Definition&#10;    beforeroute($f3)&#10;&#10;Description&#10;     init the View;;d34,20;;b1,0;;mf3;;p">
</treenode>
<treenode node="blacklisted;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;1473;2;1489;;;;vpos;;vbool;;r&#10;Definition&#10;    blacklisted($ip)&#10;&#10;Description&#10;     Return TRUE if IPv4 address exists in DNSBL&#10;&#10;Parameters:&#10;     $ip - string;;d27,1473;;b0,0;;m $ip;;p">
</treenode>
<treenode node="call;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;1799;2;1842;;;;vpos;;vmixed;;r&#10;Definition&#10;    call($func,$args=NULL,$hooks=&apos;&apos;)&#10;&#10;Description&#10;     Execute callback/hooks (supports &apos;class-&gt;method&apos; format)&#10;&#10;Parameters:&#10;     $func - callback&#10;     $args - mixed&#10;     $hooks - string&#10;&#10;Return:&#10;   |FALSE;;d43,1799;;b0,0;;m $func;;p $args;;p $hooks;;p">
</treenode>
<treenode node="camelcase;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;715;2;723;;;;vpos;;vstring;;r&#10;Definition&#10;    camelcase($str)&#10;&#10;Description&#10;     Convert snakecase string to camelcase&#10;&#10;Parameters:&#10;     $str - string;;d26,715;;b0,0;;m $str;;p">
</treenode>
<treenode node="chain;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;1851;2;1856;;;;vpos;;varray;;r&#10;Definition&#10;    chain($funcs,$args=NULL)&#10;&#10;Description&#10;     Execute specified callbacks in succession;s Apply same arguments to all callbacks&#10;&#10;Parameters:&#10;     $funcs - array|string&#10;     $args - mixed;;d35,1851;;b0,0;;m $funcs;;p $args;;p">
</treenode>
<treenode node="checked;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;489;2;492;;;;vpos;;vbool;;r&#10;Definition&#10;    checked($key)&#10;&#10;Description&#10;     Return TRUE if hive variable is &apos;on&apos;&#10;&#10;Parameters:&#10;     $key - string;;d24,489;;b0,0;;m $key;;p">
</treenode>
<treenode node="clean;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;850;2;860;;;;vpos;;vmixed;;r&#10;Definition&#10;    clean($arg,$tags=NULL)&#10;&#10;Description&#10;     Remove HTML tags (except those enumerated) and non-printable characters to mitigate XSS/code injection attacks&#10;&#10;Parameters:&#10;     $arg - mixed&#10;     $tags - string;;d33,850;;b0,0;;m $arg;;p $tags;;p">
</treenode>
<treenode node="clear;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;439;2;482;;;;vpos;;vNULL;;r&#10;Definition&#10;    clear($key)&#10;&#10;Description&#10;     Unset hive key&#10;&#10;Parameters:&#10;     $key - string;;d22,439;;b0,0;;m $key;;p">
</treenode>
<treenode node="concat;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;547;2;551;;;;vpos;;vstring;;r&#10;Definition&#10;    concat($key,$val)&#10;&#10;Description&#10;     Concatenate string to hive string variable&#10;&#10;Parameters:&#10;     $key - string&#10;     $val - string;;d28,547;;b0,0;;m $key;;p $val;;p">
</treenode>
<treenode node="config;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;1878;2;1967;;;;vpos;;vobject;;r&#10;Definition&#10;    config($source,$allow=FALSE)&#10;&#10;Description&#10;     Configure framework according to .ini-style file settings;s If optional 2nd arg is provided, template strings are interpreted&#10;&#10;Parameters:&#10;     $source - string|array&#10;     $allow - bool;;d39,1878;;b0,0;;m $source;;p $allow;;p">
</treenode>
<treenode node="constants;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;764;2;767;;;;vpos;;varray;;r&#10;Definition&#10;    constants($class,$prefix=&apos;&apos;)&#10;&#10;Description&#10;     Convert class constants to array&#10;&#10;Parameters:&#10;     $class - object|string&#10;     $prefix - string;;d39,764;;b0,0;;m $class;;p $prefix;;p">
</treenode>
<treenode node="copy;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;536;2;539;;;;vpos;;vmixed;;r&#10;Definition&#10;    copy($src,$dst)&#10;&#10;Description&#10;     Copy contents of hive variable to another&#10;&#10;Parameters:&#10;     $src - string&#10;     $dst - string;;d26,536;;b0,0;;m $src;;p $dst;;p">
</treenode>
<treenode node="csv;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;705;2;708;;;;vpos;;vstring;;r&#10;Definition&#10;    csv(array $args)&#10;&#10;Description&#10;     Flatten array values and return as CSV string&#10;&#10;Parameters:&#10;     $args - array;;d27,705;;b0,0;;m $args;;p">
</treenode>
<treenode node="decode;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;804;2;806;;;;vpos;;vstring;;r&#10;Definition&#10;    decode($str)&#10;&#10;Description&#10;     Convert HTML entities back to characters&#10;&#10;Parameters:&#10;     $str - string;;d23,804;;b0,0;;m $str;;p">
</treenode>
<treenode node="dump;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;2049;2;2051;;;;vpos;;vNULL;;r&#10;Definition&#10;    dump($expr)&#10;&#10;Description&#10;     Dump expression with syntax highlighting&#10;&#10;Parameters:&#10;     $expr - mixed;;d22,2049;;b0,0;;m $expr;;p">
</treenode>
<treenode node="encode;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;794;2;797;;;;vpos;;vstring;;r&#10;Definition&#10;    encode($str)&#10;&#10;Description&#10;     Convert special characters to HTML entities&#10;&#10;Parameters:&#10;     $str - string;;d23,794;;b0,0;;m $str;;p">
</treenode>
<treenode node="error;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;1233;2;1288;;;;vpos;;vNULL;;r&#10;Definition&#10;    error($code,$text=&apos;&apos;,array $trace=NULL,$level=0)&#10;&#10;Description&#10;     Log error;s Execute ONERROR handler if defined, else display default error page (HTML for synchronous requests, JSON string for AJAX requests)&#10;&#10;Parameters:&#10;     $code - int&#10;     $text - string&#10;     $trace - array&#10;     $level - int;;d59,1233;;b0,0;;m $code;;p $text;;p $trace;;p $level;;p">
</treenode>
<treenode node="expire;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;1116;2;1138;;;;vpos;;vNULL;;r&#10;Definition&#10;    expire($secs=0)&#10;&#10;Description&#10;     Send cache metadata to HTTP client&#10;&#10;Parameters:&#10;     $secs - int;;d26,1116;;b0,0;;m $secs;;p">
</treenode>
<treenode node="extend;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;632;2;641;;;;vpos;;varray;;r&#10;Definition&#10;    extend($key,$src,$keep=FALSE)&#10;&#10;Description&#10;     Extend hive array variable with default values from $src&#10;&#10;Parameters:&#10;     $key - string&#10;     $src - string|array&#10;     $keep - bool;;d40,632;;b0,0;;m $key;;p $src;;p $keep;;p">
</treenode>
<treenode node="extract;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;750;2;756;;;;vpos;;varray;;r&#10;Definition&#10;    extract($arr,$prefix)&#10;&#10;Description&#10;     Extract values of array whose keys start with the given prefix&#10;&#10;Parameters:&#10;     $arr - array&#10;     $prefix - string;;d32,750;;b0,0;;m $arr;;p $prefix;;p">
</treenode>
<treenode node="fixslashes;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;648;2;650;;;;vpos;;vstring;;r&#10;Definition&#10;    fixslashes($str)&#10;&#10;Description&#10;     Convert backslashes to slashes&#10;&#10;Parameters:&#10;     $str - string;;d27,648;;b0,0;;m $str;;p">
</treenode>
<treenode node="flip;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;559;2;562;;;;vpos;;varray;;r&#10;Definition&#10;    flip($key)&#10;&#10;Description&#10;     Swap keys and values of hive array variable&#10;&#10;Parameters:&#10;     $key - string;;d21,559;;b0,0;;m $key;;p">
</treenode>
<treenode node="format;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;876;2;987;;;;vpos;;vstring;;r&#10;Definition&#10;    format()&#10;&#10;Description&#10;     Return locale-aware formatted string;;d19,876;;b0,0;;m">
</treenode>
<treenode node="get;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;420;2;432;;;;vpos;;vmixed;;r&#10;Definition&#10;    get($key,$args=NULL)&#10;&#10;Description&#10;     Retrieve contents of hive key&#10;&#10;Parameters:&#10;     $key - string&#10;     $args - string|array;;d31,420;;b0,0;;m $key;;p $args;;p">
</treenode>
<treenode node="grab;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;1759;2;1790;;;;vpos;;vstring;;r&#10;Definition&#10;    grab($func,$args=NULL)&#10;&#10;Description&#10;     Grab the real route handler behind the string expression&#10;&#10;Parameters:&#10;     $func - string&#10;     $args - array&#10;&#10;Return:&#10;   |array;;d33,1759;;b0,0;;m $func;;p $args;;p">
</treenode>
<treenode node="hash;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;774;2;777;;;;vpos;;vstring;;r&#10;Definition&#10;    hash($str)&#10;&#10;Description&#10;     Generate 64bit/base36 hash&#10;&#10;Parameters:&#10;     $str;;d21,774;;b0,0;;m $str;;p">
</treenode>
<treenode node="highlight;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;2022;2;2042;;;;vpos;;vstring;;r&#10;Definition&#10;    highlight($text)&#10;&#10;Description&#10;     Apply syntax highlighting&#10;&#10;Parameters:&#10;     $text - string;;d27,2022;;b0,0;;m $text;;p">
</treenode>
<treenode node="hive;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;526;2;528;;;;vpos;;varray;;r&#10;Definition&#10;    hive()&#10;&#10;Description&#10;     Publish hive contents;;d17,526;;b0,0;;m">
</treenode>
<treenode node="ip;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;1168;2;1176;;;;vpos;;vstring;;r&#10;Definition&#10;    ip()&#10;&#10;Description&#10;     Sniff IP address;;d15,1168;;b0,0;;m">
</treenode>
<treenode node="language;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;994;2;1026;;;;vpos;;vstring;;r&#10;Definition&#10;    language($code)&#10;&#10;Description&#10;     Assign/auto-detect language&#10;&#10;Parameters:&#10;     $code - string;;d26,994;;b0,0;;m $code;;p">
</treenode>
<treenode node="lexicon;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;1034;2;1069;;;;vpos;;varray;;r&#10;Definition&#10;    lexicon($path,$ttl=0)&#10;&#10;Description&#10;     Return lexicon entries&#10;&#10;Parameters:&#10;     $path - string&#10;     $ttl - int;;d32,1034;;b0,0;;m $path;;p $ttl;;p">
</treenode>
<treenode node="map;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;1437;2;1448;;;;vpos;;vNULL;;r&#10;Definition&#10;    map($url,$class,$ttl=0,$kbps=0)&#10;&#10;Description&#10;     Provide ReST interface by mapping HTTP verb to class method&#10;&#10;Parameters:&#10;     $url - string&#10;     $class - string|object&#10;     $ttl - int&#10;     $kbps - int;;d42,1437;;b0,0;;m $url;;p $class;;p $ttl;;p $kbps;;p">
</treenode>
<treenode node="mask;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;1497;2;1527;;;;vpos;;v;;r&#10;Definition&#10;    mask($pattern,$url=NULL)&#10;&#10;Description&#10;     Applies the specified URL mask and returns parameterized matches&#10;&#10;Parameters:&#10;     $pattern - string&#10;     $url - string|NULL;;d35,1497;;b0,0;;m $pattern;;p $url;;p">
</treenode>
<treenode node="merge;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;615;2;623;;;;vpos;;varray;;r&#10;Definition&#10;    merge($key,$src,$keep=FALSE)&#10;&#10;Description&#10;     Merge array with hive array variable&#10;&#10;Parameters:&#10;     $key - string&#10;     $src - string|array&#10;     $keep - bool;;d39,615;;b0,0;;m $key;;p $src;;p $keep;;p">
</treenode>
<treenode node="mock;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;1298;2;1336;;;;vpos;;vmixed;;r&#10;Definition&#10;    mock($pattern,&#10;		array $args=NULL,array $headers=NULL,$body=NULL)&#10;&#10;Description&#10;     Mock HTTP request&#10;&#10;Parameters:&#10;     $pattern - string&#10;     $args - array&#10;     $headers - array&#10;     $body - string;;d51,1299;;b0,0;;m $pattern;;p $args;;p $headers;;p $body;;p">
</treenode>
<treenode node="mset;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;517;2;520;;;;vpos;;vNULL;;r&#10;Definition&#10;    mset(array $vars,$prefix=&apos;&apos;,$ttl=0)&#10;&#10;Description&#10;     Multi-variable assignment using associative array&#10;&#10;Parameters:&#10;     $vars - array&#10;     $prefix - string&#10;     $ttl - int;;d46,517;;b0,0;;m $vars;;p $prefix;;p $ttl;;p">
</treenode>
<treenode node="mutex;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;1976;2;1993;;;;vpos;;vmixed;;r&#10;Definition&#10;    mutex($id,$func,$args=NULL)&#10;&#10;Description&#10;     Create mutex, invoke callback then drop ownership when done&#10;&#10;Parameters:&#10;     $id - string&#10;     $func - callback&#10;     $args - mixed;;d38,1976;;b0,0;;m $id;;p $func;;p $args;;p">
</treenode>
<treenode node="offsetexists;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;2107;2;2109;;;;vpos;;vmixed;;r&#10;Definition&#10;    offsetexists($key)&#10;&#10;Description&#10;     Convenience method for checking hive key&#10;&#10;Parameters:&#10;     $key - string;;d29,2107;;b0,0;;m $key;;p">
</treenode>
<treenode node="offsetget;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;2126;2;2129;;;;vpos;;vmixed;;r&#10;Definition&#10;    &amp;offsetget($key)&#10;&#10;Description&#10;     Convenience method for retrieving hive value&#10;&#10;Parameters:&#10;     $key - string;;d27,2126;;b0,0;;m $key;;p">
</treenode>
<treenode node="offsetset;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;2117;2;2119;;;;vpos;;vmixed;;r&#10;Definition&#10;    offsetset($key,$val)&#10;&#10;Description&#10;     Convenience method for assigning hive value&#10;&#10;Parameters:&#10;     $key - string&#10;     $val - scalar;;d31,2117;;b0,0;;m $key;;p $val;;p">
</treenode>
<treenode node="offsetunset;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;2136;2;2138;;;;vpos;;vNULL;;r&#10;Definition&#10;    offsetunset($key)&#10;&#10;Description&#10;     Convenience method for removing hive key&#10;&#10;Parameters:&#10;     $key - string;;d28,2136;;b0,0;;m $key;;p">
</treenode>
<treenode node="pop;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;581;2;584;;;;vpos;;vmixed;;r&#10;Definition&#10;    pop($key)&#10;&#10;Description&#10;     Remove last element of hive array variable&#10;&#10;Parameters:&#10;     $key - string;;d20,581;;b0,0;;m $key;;p">
</treenode>
<treenode node="push;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;570;2;574;;;;vpos;;vmixed;;r&#10;Definition&#10;    push($key,$val)&#10;&#10;Description&#10;     Add element to the end of hive array variable&#10;&#10;Parameters:&#10;     $key - string&#10;     $val - mixed;;d26,570;;b0,0;;m $key;;p $val;;p">
</treenode>
<treenode node="read;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;2001;2;2004;;;;vpos;;vstring;;r&#10;Definition&#10;    read($file,$lf=FALSE)&#10;&#10;Description&#10;     Read file (with option to apply Unix LF as standard line ending)&#10;&#10;Parameters:&#10;     $file - string&#10;     $lf - bool;;d32,2001;;b0,0;;m $file;;p $lf;;p">
</treenode>
<treenode node="recursive;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;815;2;841;;;;vpos;;vmixed;;r&#10;Definition&#10;    recursive($arg,$func,$stack=[])&#10;&#10;Description&#10;     Invoke callback recursively for all data types&#10;&#10;Parameters:&#10;     $arg - mixed&#10;     $func - callback&#10;     $stack - array;;d42,815;;b0,0;;m $arg;;p $func;;p $stack;;p">
</treenode>
<treenode node="redirect;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;1457;2;1466;;;;vpos;;vNULL;;r&#10;Definition&#10;    redirect($pattern,$url,$permanent=TRUE)&#10;&#10;Description&#10;     Redirect a route to another URL&#10;&#10;Parameters:&#10;     $pattern - string|array&#10;     $url - string&#10;     $permanent - bool;;d50,1457;;b0,0;;m $pattern;;p $url;;p $permanent;;p">
</treenode>
<treenode node="rel;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;2058;2;2061;;;;vpos;;vstring;;r&#10;Definition&#10;    rel($url)&#10;&#10;Description&#10;     Return path (and query parameters) relative to the base directory&#10;&#10;Parameters:&#10;     $url - string;;d20,2058;;b0,0;;m $url;;p">
</treenode>
<treenode node="relay;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;1865;2;1869;;;;vpos;;varray;;r&#10;Definition&#10;    relay($funcs,$args=NULL)&#10;&#10;Description&#10;     Execute specified callbacks in succession;s Relay result of previous callback as argument to the next callback&#10;&#10;Parameters:&#10;     $funcs - array|string&#10;     $args - mixed;;d35,1865;;b0,0;;m $funcs;;p $args;;p">
</treenode>
<treenode node="render;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\view\base.php;f20;12;37;12;;;;vpos;;vmixed;;r&#10;Description&#10;     create and return response content;;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="reroute;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;1399;2;1427;;;;vpos;;vNULL;;r&#10;Definition&#10;    reroute($url=NULL,$permanent=FALSE,$die=TRUE)&#10;&#10;Description&#10;     Reroute to specified URI&#10;&#10;Parameters:&#10;     $url - array|string&#10;     $permanent - bool&#10;     $die - bool;;d56,1399;;b0,0;;m $url;;p $permanent;;p $die;;p">
</treenode>
<treenode node="route;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;1364;2;1390;;;;vpos;;vNULL;;r&#10;Definition&#10;    route($pattern,$handler,$ttl=0,$kbps=0)&#10;&#10;Description&#10;     Bind handler to route pattern&#10;&#10;Parameters:&#10;     $pattern - string|array&#10;     $handler - callback&#10;     $ttl - int&#10;     $kbps - int;;d50,1364;;b0,0;;m $pattern;;p $handler;;p $ttl;;p $kbps;;p">
</treenode>
<treenode node="run;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;1533;2;1693;;;;vpos;;vmixed;;r&#10;Definition&#10;    run()&#10;&#10;Description&#10;     Match routes against incoming URI;;d16,1533;;b0,0;;m">
</treenode>
<treenode node="scrub;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;868;2;870;;;;vpos;;vmixed;;r&#10;Definition&#10;    scrub(&amp;$var,$tags=NULL)&#10;&#10;Description&#10;     Similar to clean(), except that variable is passed by reference&#10;&#10;Parameters:&#10;     $var - mixed&#10;     $tags - string;;d34,868;;b0,0;;m $var;;p $tags;;p">
</treenode>
<treenode node="serialize;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;1076;2;1083;;;;vpos;;vstring;;r&#10;Definition&#10;    serialize($arg)&#10;&#10;Description&#10;     Return string representation of PHP value&#10;&#10;Parameters:&#10;     $arg - mixed;;d26,1076;;b0,0;;m $arg;;p">
</treenode>
<treenode node="setView;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\controller\base.php;f8;13;2;15;;;;vpos;;v;;r&#10;Definition&#10;    setView(\View\Base $view)&#10;&#10;Description&#10;     set a new view&#10;&#10;Parameters:&#10;    \View\Base $view;;d43,13;;b1,0;;m\View\Base $view;;p">
</treenode>
<treenode node="shift;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;603;2;606;;;;vpos;;vmixed;;r&#10;Definition&#10;    shift($key)&#10;&#10;Description&#10;     Remove first element of hive array variable&#10;&#10;Parameters:&#10;     $key - string;;d22,603;;b0,0;;m $key;;p">
</treenode>
<treenode node="sign;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;740;2;742;;;;vpos;;vint;;r&#10;Definition&#10;    sign($num)&#10;&#10;Description&#10;     Return -1 if specified number is negative, 0 if zero, or 1 if the number is positive&#10;&#10;Parameters:&#10;     $num - mixed;;d21,740;;b0,0;;m $num;;p">
</treenode>
<treenode node="snakecase;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;730;2;732;;;;vpos;;vstring;;r&#10;Definition&#10;    snakecase($str)&#10;&#10;Description&#10;     Convert camelcase string to snakecase&#10;&#10;Parameters:&#10;     $str - string;;d26,730;;b0,0;;m $str;;p">
</treenode>
<treenode node="split;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;658;2;661;;;;vpos;;varray;;r&#10;Definition&#10;    split($str,$noempty=TRUE)&#10;&#10;Description&#10;     Split comma-, semi-colon, or pipe-separated string&#10;&#10;Parameters:&#10;     $str - string&#10;     $noempty - bool;;d36,658;;b0,0;;m $str;;p $noempty;;p">
</treenode>
<treenode node="status;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;1104;2;1109;;;;vpos;;vstring;;r&#10;Definition&#10;    status($code)&#10;&#10;Description&#10;     Send HTTP status header;s Return text equivalent of status code&#10;&#10;Parameters:&#10;     $code - int;;d24,1104;;b0,0;;m $code;;p">
</treenode>
<treenode node="stringify;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;669;2;698;;;;vpos;;vstring;;r&#10;Definition&#10;    stringify($arg,array $stack=NULL)&#10;&#10;Description&#10;     Convert PHP expression/value to compressed exportable string&#10;&#10;Parameters:&#10;     $arg - mixed&#10;     $stack - array;;d44,669;;b0,0;;m $arg;;p $stack;;p">
</treenode>
<treenode node="trace;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;1184;2;1221;;;;vpos;;vstring;;r&#10;Definition&#10;    trace(array $trace=NULL,$format=TRUE)&#10;&#10;Description&#10;     Return filtered stack trace as a formatted string (or array)&#10;&#10;Parameters:&#10;     $trace - array|NULL&#10;     $format - bool&#10;&#10;Return:&#10;   |array;;d48,1184;;b0,0;;m $trace;;p $format;;p">
</treenode>
<treenode node="unload;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;2086;2;2100;;;;vpos;;v;;r&#10;Definition&#10;    unload($cwd)&#10;&#10;Description&#10;     Execute framework/application shutdown sequence&#10;&#10;Parameters:&#10;     $cwd - string;;d23,2086;;b0,0;;m $cwd;;p">
</treenode>
<treenode node="unserialize;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;1090;2;1097;;;;vpos;;vstring;;r&#10;Definition&#10;    unserialize($arg)&#10;&#10;Description&#10;     Return PHP value derived from string&#10;&#10;Parameters:&#10;     $arg - mixed;;d28,1090;;b0,0;;m $arg;;p">
</treenode>
<treenode node="unshift;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;592;2;596;;;;vpos;;vmixed;;r&#10;Definition&#10;    unshift($key,$val)&#10;&#10;Description&#10;     Add element to the beginning of hive array variable&#10;&#10;Parameters:&#10;     $key - string&#10;     $val - mixed;;d29,592;;b0,0;;m $key;;p $val;;p">
</treenode>
<treenode node="until;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;1702;2;1732;;;;vpos;;vmixed;;r&#10;Definition&#10;    until($func,$args=NULL,$timeout=60)&#10;&#10;Description&#10;     Loop until callback returns TRUE (for long polling)&#10;&#10;Parameters:&#10;     $func - callback&#10;     $args - array&#10;     $timeout - int;;d46,1702;;b0,0;;m $func;;p $args;;p $timeout;;p">
</treenode>
<treenode node="updateProperty;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\model\base.php;f8;47;2;59;;;;vpos;;vbool;;r&#10;Definition&#10;    updateProperty($filter, $key, $value)&#10;&#10;Description&#10;     just a little mass update shortcut&#10;&#10;Parameters:&#10;     $filter&#10;     $key&#10;     $value;;d55,47;;b1,0;;m $filter;;p $key;;p $value;;p">
</treenode>
<treenode node="visible;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;500;2;508;;;;vpos;;vbool;;r&#10;Definition&#10;    visible($obj,$key)&#10;&#10;Description&#10;     Return TRUE if property has public visibility&#10;&#10;Parameters:&#10;     $obj - object&#10;     $key - string;;d29,500;;b0,0;;m $obj;;p $key;;p">
</treenode>
<treenode node="write;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;2013;2;2015;;;;vpos;;vint;;r&#10;Definition&#10;    write($file,$data,$append=FALSE)&#10;&#10;Description&#10;     Exclusive file write&#10;&#10;Parameters:&#10;     $file - string&#10;     $data - mixed&#10;     $append - bool&#10;&#10;Return:&#10;   |FALSE;;d43,2013;;b0,0;;m $file;;p $data;;p $append;;p">
</treenode>
</treenode>
<treenode node="Basket;PHP:Class Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\basket.php;f0;23;1;237;;;;vpos;;vMagic;;c;;r;;d27,23;;b0,0;;m">
<treenode node="E_Field;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\basket.php;f0;27;9;27;;;;vpos;;v;;r&apos;Undefined field %s&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\basket.php;f1;229;2;235;;;;vpos;;vvoid;;r&#10;Definition&#10;    __construct($key=&apos;basket&apos;)&#10;&#10;Description&#10;     Instantiate class&#10;&#10;Parameters:&#10;     $key - string;;d37,229;;b0,0;;m $key;;p">
</treenode>
<treenode node="checkout;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\basket.php;f1;215;2;222;;;;vpos;;varray;;r&#10;Definition&#10;    checkout()&#10;&#10;Description&#10;     Check out basket contents;;d21,215;;b0,0;;m">
</treenode>
<treenode node="clear;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\basket.php;f1;76;2;78;;;;vpos;;vNULL;;r&#10;Definition&#10;    clear($key)&#10;&#10;Description&#10;     Delete field&#10;&#10;Parameters:&#10;     $key - string;;d22,76;;b0,0;;m $key;;p">
</treenode>
<treenode node="copyfrom;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\basket.php;f1;193;2;198;;;;vpos;;vNULL;;r&#10;Definition&#10;    copyfrom($var)&#10;&#10;Description&#10;     Hydrate item using hive array variable&#10;&#10;Parameters:&#10;     $var - array|string;;d25,193;;b0,0;;m $var;;p">
</treenode>
<treenode node="copyto;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\basket.php;f1;205;2;209;;;;vpos;;vNULL;;r&#10;Definition&#10;    copyto($key)&#10;&#10;Description&#10;     Populate hive array variable with item contents&#10;&#10;Parameters:&#10;     $key - string;;d23,205;;b0,0;;m $key;;p">
</treenode>
<treenode node="count;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\basket.php;f1;139;2;141;;;;vpos;;vint;;r&#10;Definition&#10;    count()&#10;&#10;Description&#10;     Return number of items in basket;;d18,139;;b0,0;;m">
</treenode>
<treenode node="drop;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\basket.php;f1;184;2;186;;;;vpos;;vNULL;;r&#10;Definition&#10;    drop()&#10;&#10;Description&#10;     Empty basket;;d17,184;;b0,0;;m">
</treenode>
<treenode node="dry;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\basket.php;f1;131;2;133;;;;vpos;;vbool;;r&#10;Definition&#10;    dry()&#10;&#10;Description&#10;     Return TRUE if current item is empty/undefined;;d16,131;;b0,0;;m">
</treenode>
<treenode node="erase;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\basket.php;f1;160;2;169;;;;vpos;;vbool;;r&#10;Definition&#10;    erase($key,$val)&#10;&#10;Description&#10;     Erase item matching key/value pair&#10;&#10;Parameters:&#10;     $key - string&#10;     $val - mixed;;d27,160;;b0,0;;m $key;;p $val;;p">
</treenode>
<treenode node="exists;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\basket.php;f1;43;2;45;;;;vpos;;vbool;;r&#10;Definition&#10;    exists($key)&#10;&#10;Description&#10;     Return TRUE if field is defined&#10;&#10;Parameters:&#10;     $key - string;;d23,43;;b0,0;;m $key;;p">
</treenode>
<treenode node="find;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\basket.php;f1;87;2;100;;;;vpos;;varray;;r&#10;Definition&#10;    find($key=NULL,$val=NULL)&#10;&#10;Description&#10;     Return items that match key/value pair;s If no key/value pair specified, return all items&#10;&#10;Parameters:&#10;     $key - string&#10;     $val - mixed;;d36,87;;b0,0;;m $key;;p $val;;p">
</treenode>
<treenode node="findone;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\basket.php;f1;108;2;110;;;;vpos;;vobject;;r&#10;Definition&#10;    findone($key,$val)&#10;&#10;Description&#10;     Return first item that matches key/value pair&#10;&#10;Parameters:&#10;     $key - string&#10;     $val - mixed&#10;&#10;Return:&#10;   |FALSE;;d29,108;;b0,0;;m $key;;p $val;;p">
</treenode>
<treenode node="get;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\basket.php;f1;62;2;69;;;;vpos;;vscalar;;r&#10;Definition&#10;    &amp;get($key)&#10;&#10;Description&#10;     Retrieve value of field&#10;&#10;Parameters:&#10;     $key - string&#10;&#10;Return:&#10;   |FALSE;;d21,62;;b0,0;;m $key;;p">
</treenode>
<treenode node="load;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\basket.php;f1;118;2;125;;;;vpos;;varray;;r&#10;Definition&#10;    load($key,$val)&#10;&#10;Description&#10;     Map current item to matching key/value pair&#10;&#10;Parameters:&#10;     $key - string&#10;     $val - mixed;;d26,118;;b0,0;;m $key;;p $val;;p">
</treenode>
<treenode node="reset;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\basket.php;f1;175;2;178;;;;vpos;;vNULL;;r&#10;Definition&#10;    reset()&#10;&#10;Description&#10;     Reset cursor;;d18,175;;b0,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\basket.php;f1;147;2;152;;;;vpos;;varray;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Save current item;;d17,147;;b0,0;;m">
</treenode>
<treenode node="set;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\basket.php;f1;53;2;55;;;;vpos;;vscalar;;r&#10;Definition&#10;    set($key,$val)&#10;&#10;Description&#10;     Assign value to field&#10;&#10;Parameters:&#10;     $key - string&#10;     $val - scalar&#10;&#10;Return:&#10;   |FALSE;;d25,53;;b0,0;;m $key;;p $val;;p">
</treenode>
</treenode>
<treenode node="Bcrypt;PHP:Class Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\bcrypt.php;f0;25;1;95;;;;vpos;;vPrefab;;c;;r&#10;Definition&#10;    class Bcrypt extends Prefab&#10;&#10;Description&#10;     Lightweight password hashing library (PHP 5.5+ only);;d28,25;;b0,0;;m">
<treenode node="E_CostArg;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\bcrypt.php;f0;29;11;29;;;;vpos;;v;;rchr(mt_rand(0,255));;d-1,-1;;b0,0;;m">
<treenode node="COST;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\bcrypt.php;f0;35;6;35;;;;vpos;;v;;r10;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="E_SaltArg;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\bcrypt.php;f0;30;11;30;;;;vpos;;v;;r&apos;Salt must be at least 22 alphanumeric characters&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="self;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\bcrypt.php;f36;44;40;44;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="COST;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\bcrypt.php;f42;44;46;44;;;;vpos;;v;;r0;;d-1,-1;;b0,0;;m">
<treenode node="self;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\bcrypt.php;f14;46;18;46;;;;vpos;;v;;ropenssl_random_pseudo_bytes($raw);;d-1,-1;;b0,0;;m">
<treenode node="E_CostArg;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\bcrypt.php;f20;46;29;46;;;;vpos;;v;;r22;;d-1,-1;;b0,0;;m">
<treenode node="E_USER_ERROR;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\bcrypt.php;f30;46;42;46;;;;vpos;;v;;rself::COST) {&#10;		if ($cost&lt;4 || $cost&gt;31)&#10;			user_error(self::E_CostArg,E_USER_ERROR);;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
<treenode node="self;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\bcrypt.php;f15;50;19;50;;;;vpos;;v;;r&apos;&apos;;;d-1,-1;;b0,0;;m">
<treenode node="E_SaltArg;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\bcrypt.php;f21;50;30;50;;;;vpos;;v;;r16;;d-1,-1;;b0,0;;m">
<treenode node="E_USER_ERROR;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\bcrypt.php;f31;50;43;50;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
<treenode node="needs_rehash;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\bcrypt.php;f1;73;2;76;;;;vpos;;vbool;;r&#10;Definition&#10;    needs_rehash($hash,$cost=self::COST)&#10;&#10;Description&#10;     Check if password is still strong enough&#10;&#10;Parameters:&#10;     $hash - string&#10;     $cost - int;;d47,73;;b0,0;;m $hash;;p $cost;;p">
</treenode>
<treenode node="verify;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\bcrypt.php;f1;84;2;93;;;;vpos;;vbool;;r&#10;Definition&#10;    verify($pw,$hash)&#10;&#10;Description&#10;     Verify password against hash using timing attack resistant approach&#10;&#10;Parameters:&#10;     $pw - string&#10;     $hash - string;;d28,84;;b0,0;;m $pw;;p $hash;;p">
</treenode>
</treenode>
<treenode node="BookModel;PHP:Class Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\test\bookmodel.php;f0;2;1;32;;;;vpos;;vCortex;;c;;r;;d35,2;;b0,0;;m">
</treenode>
<treenode node="Cache;PHP:Class Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;2427;1;2692;;;;vpos;;vPrefab;;c;;r;;d27,2427;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;2687;2;2690;;;;vpos;;v;;r&#10;Definition&#10;    __construct($dsn=FALSE)&#10;&#10;Description&#10;     Class constructor&#10;&#10;Parameters:&#10;     $dsn - bool|string;;d34,2687;;b0,0;;m $dsn;;p">
</treenode>
<treenode node="clear;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;2534;2;2557;;;;vpos;;vbool;;r&#10;Definition&#10;    clear($key)&#10;&#10;Description&#10;     Delete cache entry&#10;&#10;Parameters:&#10;     $key - string;;d22,2534;;b0,0;;m $key;;p">
</treenode>
<treenode node="exists;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;2443;2;2481;;;;vpos;;varray;;r&#10;Definition&#10;    exists($key,&amp;$val=NULL)&#10;&#10;Description&#10;     Return timestamp and TTL of cache entry or FALSE if not found&#10;&#10;Parameters:&#10;     $key - string&#10;     $val - mixed&#10;&#10;Return:&#10;   |FALSE;;d34,2443;;b0,0;;m $key;;p $val;;p">
</treenode>
<treenode node="get;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;2525;2;2527;;;;vpos;;vmixed;;r&#10;Definition&#10;    get($key)&#10;&#10;Description&#10;     Retrieve value of cache entry&#10;&#10;Parameters:&#10;     $key - string&#10;&#10;Return:&#10;   |FALSE;;d20,2525;;b0,0;;m $key;;p">
</treenode>
<treenode node="load;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;2639;2;2681;;;;vpos;;vstring;;r&#10;Definition&#10;    load($dsn,$seed=NULL)&#10;&#10;Description&#10;     Load/auto-detect cache backend&#10;&#10;Parameters:&#10;     $dsn - bool|string&#10;     $seed - bool|string;;d32,2639;;b0,0;;m $dsn;;p $seed;;p">
</treenode>
<treenode node="reset;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;2564;2;2631;;;;vpos;;vbool;;r&#10;Definition&#10;    reset($suffix=NULL)&#10;&#10;Description&#10;     Clear contents of cache backend&#10;&#10;Parameters:&#10;     $suffix - string;;d30,2564;;b0,0;;m $suffix;;p">
</treenode>
<treenode node="set;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;2490;2;2518;;;;vpos;;vmixed;;r&#10;Definition&#10;    set($key,$val,$ttl=0)&#10;&#10;Description&#10;     Store value in cache&#10;&#10;Parameters:&#10;     $key - string&#10;     $val - mixed&#10;     $ttl - int&#10;&#10;Return:&#10;   |FALSE;;d32,2490;;b0,0;;m $key;;p $val;;p $ttl;;p">
</treenode>
</treenode>
<treenode node="ClassLoader;PHP:Class Name;C:\xampp\htdocs\claims-fab\vendor\composer\ClassLoader.php;f0;42;1;434;;;;vpos;;v;;r&#10;Definition&#10;    class ClassLoader&#10;&#10;Description&#10;     ClassLoader implements a PSR-0, PSR-4 and classmap class loader.;;d0,43;;b0,0;;m">
<treenode node="add;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\composer\ClassLoader.php;f11;108;5;143;;;;vpos;;v;;r&#10;Definition&#10;    add($prefix, $paths, $prepend = false)&#10;&#10;Description&#10;     Registers a set of PSR-0 directories for a given prefix, either appending or prepending to the ones previously set for this prefix.&#10;&#10;Parameters:&#10;    string $prefix - The prefix&#10;    array|string $paths - The PSR-0 root directories&#10;    bool $prepend - Whether to prepend the directories;;d4,109;;b1,0;;mstring $prefix;;parray|string $paths;;pbool $prepend;;p">
</treenode>
<treenode node="addClassMap;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\composer\ClassLoader.php;f11;91;5;98;;;;vpos;;v;;r&#10;Definition&#10;    addClassMap(array $classMap)&#10;&#10;Description&#10;      Class to filename map&#10;&#10;Parameters:&#10;    array $classMap - Class to filename map;;d4,92;;b1,0;;marray $classMap;;p">
</treenode>
<treenode node="addPsr4;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\composer\ClassLoader.php;f11;155;5;191;;;;vpos;;v;;r&#10;Definition&#10;    addPsr4($prefix, $paths, $prepend = false)&#10;&#10;Description&#10;     Registers a set of PSR-4 directories for a given namespace, either appending or prepending to the ones previously set for this namespace.&#10;&#10;Parameters:&#10;    string $prefix - The prefix/namespace, with trailing &apos;\\&apos;&#10;    array|string $paths - The PSR-4 base directories&#10;    bool $prepend - Whether to prepend the directories;;d4,156;;b1,0;;mstring $prefix;;parray|string $paths;;pbool $prepend;;p">
</treenode>
<treenode node="findFile;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\composer\ClassLoader.php;f11;334;5;367;;;;vpos;;vstring;;r&#10;Definition&#10;    findFile($class)&#10;&#10;Description&#10;     Finds the path to the file where the class is defined.&#10;&#10;Parameters:&#10;    string $class - The name of the class&#10;&#10;Return:&#10;   |false The path if found, false otherwise;;d4,335;;b1,0;;mstring $class;;p">
</treenode>
<treenode node="findFileWithExtension;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\composer\ClassLoader.php;f12;369;5;433;;;;vpos;;v;;r;;d4,370;;b3,0;;mclass;;pext;;p">
</treenode>
<treenode node="getApcuPrefix;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\composer\ClassLoader.php;f11;289;5;292;;;;vpos;;vstring;;r&#10;Definition&#10;    getApcuPrefix()&#10;&#10;Description&#10;     The APCu prefix in use, or null if APCu caching is not enabled.&#10;&#10;Return:&#10;   |null;;d4,290;;b1,0;;m">
</treenode>
<treenode node="getClassMap;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\composer\ClassLoader.php;f11;83;5;86;;;;vpos;;v;;r;;d4,84;;b1,0;;m">
</treenode>
<treenode node="getFallbackDirs;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\composer\ClassLoader.php;f11;73;5;76;;;;vpos;;v;;r;;d4,74;;b1,0;;m">
</treenode>
<treenode node="getFallbackDirsPsr4;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\composer\ClassLoader.php;f11;78;5;81;;;;vpos;;v;;r;;d4,79;;b1,0;;m">
</treenode>
<treenode node="getPrefixes;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\composer\ClassLoader.php;f11;59;5;66;;;;vpos;;v;;r;;d4,60;;b1,0;;m">
</treenode>
<treenode node="getPrefixesPsr4;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\composer\ClassLoader.php;f11;68;5;71;;;;vpos;;v;;r;;d4,69;;b1,0;;m">
</treenode>
<treenode node="getUseIncludePath;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\composer\ClassLoader.php;f11;248;5;251;;;;vpos;;vbool;;r&#10;Definition&#10;    getUseIncludePath()&#10;&#10;Description&#10;     Can be used to check if the autoloader uses the include path to check for classes.;;d4,249;;b1,0;;m">
</treenode>
<treenode node="isClassMapAuthoritative;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\composer\ClassLoader.php;f11;269;5;272;;;;vpos;;vbool;;r&#10;Definition&#10;    isClassMapAuthoritative()&#10;&#10;Description&#10;     Should class lookup fail if not found in the current class map?;;d4,270;;b1,0;;m">
</treenode>
<treenode node="loadClass;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\composer\ClassLoader.php;f11;318;5;325;;;;vpos;;vbool;;r&#10;Definition&#10;    loadClass($class)&#10;&#10;Description&#10;     Loads the given class or interface.&#10;&#10;Parameters:&#10;    string $class - The name of the class&#10;&#10;Return:&#10;   |null True if loaded, null otherwise;;d4,319;;b1,0;;mstring $class;;p">
</treenode>
<treenode node="register;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\composer\ClassLoader.php;f11;299;5;302;;;;vpos;;v;;r&#10;Definition&#10;    register($prepend = false)&#10;&#10;Description&#10;     Registers this instance as an autoloader.&#10;&#10;Parameters:&#10;    bool $prepend - Whether to prepend the autoloader or not;;d4,300;;b1,0;;mbool $prepend;;p">
</treenode>
<treenode node="set;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\composer\ClassLoader.php;f11;200;5;207;;;;vpos;;v;;r&#10;Definition&#10;    set($prefix, $paths)&#10;&#10;Description&#10;     Registers a set of PSR-0 directories for a given prefix, replacing any others previously set for this prefix.&#10;&#10;Parameters:&#10;    string $prefix - The prefix&#10;    array|string $paths - The PSR-0 base directories;;d4,201;;b1,0;;mstring $prefix;;parray|string $paths;;p">
</treenode>
<treenode node="setApcuPrefix;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\composer\ClassLoader.php;f11;279;5;282;;;;vpos;;v;;r&#10;Definition&#10;    setApcuPrefix($apcuPrefix)&#10;&#10;Description&#10;     APCu prefix to use to cache found/not-found classes, if the extension is enabled.&#10;&#10;Parameters:&#10;    string|null $apcuPrefix;;d4,280;;b1,0;;mstring|null $apcuPrefix;;p">
</treenode>
<treenode node="setClassMapAuthoritative;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\composer\ClassLoader.php;f11;259;5;262;;;;vpos;;v;;r&#10;Definition&#10;    setClassMapAuthoritative($classMapAuthoritative)&#10;&#10;Description&#10;     Turns off searching the prefix and fallback directories for classes that have not been registered with the class map.&#10;&#10;Parameters:&#10;    bool $classMapAuthoritative;;d4,260;;b1,0;;mbool $classMapAuthoritative;;p">
</treenode>
<treenode node="setPsr4;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\composer\ClassLoader.php;f11;218;5;230;;;;vpos;;v;;r&#10;Definition&#10;    setPsr4($prefix, $paths)&#10;&#10;Description&#10;     Registers a set of PSR-4 directories for a given namespace, replacing any others previously set for this namespace.&#10;&#10;Parameters:&#10;    string $prefix - The prefix/namespace, with trailing &apos;\\&apos;&#10;    array|string $paths - The PSR-4 base directories;;d4,219;;b1,0;;mstring $prefix;;parray|string $paths;;p">
</treenode>
<treenode node="setUseIncludePath;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\composer\ClassLoader.php;f11;237;5;240;;;;vpos;;v;;r&#10;Definition&#10;    setUseIncludePath($useIncludePath)&#10;&#10;Description&#10;     Turns on searching the include path for class files.&#10;&#10;Parameters:&#10;    bool $useIncludePath;;d4,238;;b1,0;;mbool $useIncludePath;;p">
</treenode>
<treenode node="unregister;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\composer\ClassLoader.php;f11;307;5;310;;;;vpos;;v;;r&#10;Definition&#10;    unregister()&#10;&#10;Description&#10;     Unregisters this instance as an autoloader.;;d4,308;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Column;PHP:Class Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f0;1044;1;1299;;;;vpos;;vDB_Utils;;c;;r&#10;Definition&#10;    class Column&#10;&#10;Description&#10;     defines a table column configuration Class Column;;d13,1044;;b0,0;;m">
<treenode node="TEXT_NoDataType;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f0;1052;23;1052;;;;vpos;;v;;r$name;;d-1,-1;;b0,0;;m">
<treenode node="after;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f15;1063;20;1063;;;;vpos;;v;;rfalse;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="index;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f15;1064;20;1064;;;;vpos;;v;;rfalse;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="passThrough;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f15;1066;26;1066;;;;vpos;;v;;rfalse;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="pkey;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f15;1067;19;1067;;;;vpos;;v;;rfalse;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="schema;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f15;1070;21;1070;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="db;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f15;1071;17;1071;;;;vpos;;v;;r$default;;d-1,-1;;b0,0;;m">
<treenode node="schema;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f27;1071;33;1071;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="db;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f35;1071;37;1071;;;;vpos;;v;;r$this-&gt;schema-&gt;db;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="passThrough;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f15;1081;26;1081;;;;vpos;;v;;r$force;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="type;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f15;1080;19;1080;;;;vpos;;v;;r$datatype;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
<treenode node="type;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f15;1086;19;1086;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="nullable;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f15;1164;23;1164;;;;vpos;;v;;r$nullable;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="Schema;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f21;1086;28;1086;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="DT_INT1;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f30;1086;37;1086;;;;vpos;;v;;rSchema::DT_INT1;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
<treenode node="type;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f15;1091;19;1091;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="passThrough;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f15;1159;26;1159;;;;vpos;;v;;r$state;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="Schema;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f21;1091;28;1091;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="DT_INT2;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f30;1091;37;1091;;;;vpos;;v;;rSchema::DT_INT2;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
<treenode node="type;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f15;1096;19;1096;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="DT_BOOLEAN;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f30;1154;40;1154;;;;vpos;;v;;rSchema::DT_BOOLEAN;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="Schema;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f21;1096;28;1096;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="DT_INT4;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f30;1096;37;1096;;;;vpos;;v;;rSchema::DT_INT4;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
<treenode node="type;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f15;1101;19;1101;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="DT_BLOB;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f30;1149;37;1149;;;;vpos;;v;;rSchema::DT_BLOB;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="Schema;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f21;1101;28;1101;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="DT_INT8;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f30;1101;37;1101;;;;vpos;;v;;rSchema::DT_INT8;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
<treenode node="type;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f15;1106;19;1106;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="DF_CURRENT_TIMESTAMP;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f37;1144;57;1144;;;;vpos;;v;;rSchema::DF_CURRENT_TIMESTAMP;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="DT_TIMESTAMP;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f30;1142;42;1142;;;;vpos;;v;;rSchema::DT_TIMESTAMP;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="Schema;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f21;1106;28;1106;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="DT_FLOAT;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f30;1106;38;1106;;;;vpos;;v;;rSchema::DT_FLOAT;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
<treenode node="type;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f15;1111;19;1111;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="DT_DATETIME;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f30;1137;41;1137;;;;vpos;;v;;rSchema::DT_DATETIME;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="Schema;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f21;1111;28;1111;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="DT_DOUBLE;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f30;1111;39;1111;;;;vpos;;v;;rSchema::DT_DOUBLE;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
<treenode node="type;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f15;1116;19;1116;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="DT_DATE;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f30;1132;37;1132;;;;vpos;;v;;rSchema::DT_DATE;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="Schema;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f21;1116;28;1116;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="DT_TEXT;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f30;1116;37;1116;;;;vpos;;v;;rSchema::DT_TEXT;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
<treenode node="type;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f15;1121;19;1121;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="passThrough;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f15;1127;26;1127;;;;vpos;;v;;rtrue;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="Schema;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f21;1121;28;1121;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="DT_LONGTEXT;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f30;1121;41;1121;;;;vpos;;v;;rSchema::DT_LONGTEXT;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
<treenode node="type;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f15;1126;19;1126;;;;vpos;;v;;r&quot;varchar($length)&quot;;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
<treenode node="schema;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f32;1070;38;1070;;;;vpos;;v;;r$table-&gt;schema;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
<treenode node="table;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f15;1069;20;1069;;;;vpos;;v;;r$table;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TableBuilder;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f38;1059;51;1059;;;;vpos;;v;;rfalse;;d-1,-1;;b0,0;;m">
<treenode node="name;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f15;1060;19;1060;;;;vpos;;v;;r$name;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="nullable;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f15;1061;23;1061;;;;vpos;;v;;rtrue;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
<treenode node="TEXT_CurrentStampDataType;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f0;1053;33;1053;;;;vpos;;v;;r&apos;Current timestamp as column default is only possible for TIMESTAMP datatype&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="unique;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f15;1065;21;1065;;;;vpos;;v;;rfalse;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
<treenode node="copyfrom;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f11;1188;5;1193;;;;vpos;;v;;r&#10;Definition&#10;    copyfrom($args)&#10;&#10;Description&#10;     feed column from array or hive key&#10;&#10;Parameters:&#10;    string|array $args;;d36,1188;;b1,0;;mstring|array $args;;p">
</treenode>
<treenode node="getColumnArray;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f11;1199;5;1207;;;;vpos;;varray;;r&#10;Definition&#10;    getColumnArray()&#10;&#10;Description&#10;     returns an array of this column configuration;;d37,1199;;b1,0;;m">
</treenode>
<treenode node="getColumnQuery;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f11;1238;5;1265;;;;vpos;;vbool;;r&#10;Definition&#10;    getColumnQuery()&#10;&#10;Description&#10;     generate SQL column definition query&#10;&#10;Return:&#10;   |string;;d37,1238;;b1,0;;m">
</treenode>
<treenode node="getDefault;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f11;1279;5;1298;;;;vpos;;vstring;;r&#10;Definition&#10;    getDefault()&#10;&#10;Description&#10;     return query part for default value;;d33,1279;;b1,0;;m">
</treenode>
<treenode node="getNullable;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f11;1271;5;1273;;;;vpos;;vstring;;r&#10;Definition&#10;    getNullable()&#10;&#10;Description&#10;     return query part for nullable;;d34,1271;;b1,0;;m">
</treenode>
<treenode node="getTypeVal;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f11;1213;5;1232;;;;vpos;;vbool;;r&#10;Definition&#10;    getTypeVal()&#10;&#10;Description&#10;     return resolved column datatype&#10;&#10;Return:&#10;   |string;;d33,1213;;b1,0;;m">
</treenode>
<treenode node="index;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f11;1178;5;1182;;;;vpos;;v;;r;;d43,1178;;b1,0;;munique;;p">
</treenode>
</treenode>
<treenode node="Comment;PHP:Class Name;C:\xampp\htdocs\claims-fab\app\model\comment.php;f0;4;1;51;;C:\xampp\htdocs\claims-fab\app\controller\comment.php;f0;4;1;84;;;;vpos;;vBase;;c;;r;;d27,4;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\controller\comment.php;f8;6;2;9;;;;vpos;;v;;r;;d31,6;;b1,0;;m">
</treenode>
<treenode node="approve;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\controller\comment.php;f8;20;2;27;;;;vpos;;v;;r&#10;Definition&#10;    approve(\Base $f3, $params)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    \Base $f3&#10;     $params;;d45,20;;b1,0;;m\Base $f3;;p $params;;p">
</treenode>
<treenode node="beforeroute;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\controller\comment.php;f8;11;2;14;;;;vpos;;v;;r;;d34,11;;b1,0;;mf3;;p">
</treenode>
<treenode node="countNew;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\model\comment.php;f18;46;5;49;;;;vpos;;v;;r;;d38,46;;b1,5;;m">
</treenode>
<treenode node="getList;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\controller\comment.php;f8;64;2;82;;;;vpos;;v;;r&#10;Definition&#10;    getList(\Base $f3, $params)&#10;&#10;Description&#10;     display list of comments&#10;&#10;Parameters:&#10;    \Base $f3&#10;    array $params;;d45,64;;b1,0;;m\Base $f3;;parray $params;;p">
</treenode>
<treenode node="getSingle;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\controller\comment.php;f8;47;2;57;;;;vpos;;vbool;;r&#10;Definition&#10;    getSingle(\Base $f3,$params)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    \Base $f3&#10;    array $params;;d46,47;;b1,0;;m\Base $f3;;parray $params;;p">
</treenode>
<treenode node="reject;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\controller\comment.php;f8;33;2;40;;;;vpos;;v;;r&#10;Definition&#10;    reject(\Base $f3, $params)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    \Base $f3&#10;     $params;;d44,33;;b1,0;;m\Base $f3;;p $params;;p">
</treenode>
<treenode node="set_author_email;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\model\comment.php;f11;41;5;44;;;;vpos;;vnull;;r&#10;Definition&#10;    set_author_email($val)&#10;&#10;Description&#10;     validate email address&#10;&#10;Parameters:&#10;     $val;;d43,41;;b1,0;;m $val;;p">
</treenode>
</treenode>
<treenode node="ComposerAutoloaderInit7b19ee07188ecd5433b9837cfb80e84c;PHP:Class Name;C:\xampp\htdocs\claims-fab\vendor\composer\autoload_real.php;f0;4;1;51;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
<treenode node="getLoader;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\composer\autoload_real.php;f18;15;5;50;;;;vpos;;v;;r;;d4,16;;b1,5;;m">
</treenode>
<treenode node="loadClassLoader;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\composer\autoload_real.php;f18;8;5;13;;;;vpos;;v;;r;;d4,9;;b1,5;;mclass;;p">
</treenode>
</treenode>
<treenode node="ComposerStaticInit7b19ee07188ecd5433b9837cfb80e84c;PHP:Class Name;C:\xampp\htdocs\claims-fab\vendor\composer\autoload_static.php;f0;6;1;71;;;;vpos;;v;;r;;d0,7;;b0,0;;m">
<treenode node="getInitializer;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\composer\autoload_static.php;f18;64;5;70;;;;vpos;;v;;r;;d4,65;;b1,5;;mloader;;p">
</treenode>
</treenode>
<treenode node="Config;PHP:Class Name;C:\xampp\htdocs\claims-fab\app\inc\config.php;f0;16;1;39;;;;vpos;;vMapper;;c;;r&#10;Definition&#10;    class Config extends \DB\Jig\Mapper&#10;&#10;Description&#10;     Jig-based Config Wrapper The contents of this file are subject to the terms of the GNU General Public License Version 3.0. You may not use this file except in compliance with the license. Any of the license terms and conditions can be waived if you get permission from the copyright holder. Copyright (c) 2013 ~ ikkez Christian Knuth &lt;ikkez0n3 gmail.com&gt; version 0.2.0 date: 29.10.13;;d36,16;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\inc\config.php;f8;18;2;22;;;;vpos;;v;;r;;d31,18;;b1,0;;m">
</treenode>
<treenode node="expose;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\inc\config.php;f8;24;2;27;;;;vpos;;v;;r;;d26,24;;b1,0;;m">
</treenode>
<treenode node="instance;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\inc\config.php;f15;29;2;37;;;;vpos;;v;;r;;d35,29;;b1,5;;m">
</treenode>
</treenode>
<treenode node="Cortex;PHP:Class Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\test\app\cortex.php;f0;4;1;56;;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f0;28;1;2281;;;;vpos;;vController;;c;;r;;d0,5;;b0,0;;m">
<treenode node="DT_SERIALIZED;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f0;72;15;72;;;;vpos;;v;;r&apos;belongs-to-one&apos;;;d-1,-1;;b0,0;;m">
<treenode node="DT_JSON;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f0;73;9;73;;;;vpos;;v;;rtrue;;d-1,-1;;b0,0;;m">
<treenode node="E_ARRAY_DATATYPE;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f0;76;18;76;;;;vpos;;v;;r$fc[&apos;fieldConf&apos;][$relConf[1]][&apos;type&apos;];;d-1,-1;;b0,0;;m">
<treenode node="E_CONNECTION;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f0;77;14;77;;;;vpos;;v;;r$fc[&apos;primary&apos;];;d-1,-1;;b0,0;;m">
<treenode node="E_NO_TABLE;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f0;78;12;78;;;;vpos;;v;;rarray($relConf, &apos;_id&apos;);;d-1,-1;;b0,0;;m">
<treenode node="E_UNKNOWN_DB_ENGINE;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f0;79;21;79;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="E_FIELD_SETUP;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f0;80;15;80;;;;vpos;;v;;r$conf[&apos;refTable&apos;];;d-1,-1;;b0,0;;m">
<treenode node="E_UNKNOWN_FIELD;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f0;81;17;81;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="E_INVALID_RELATION_OBJECT;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f0;82;27;82;;;;vpos;;v;;rget_called_class();;d-1,-1;;b0,0;;m">
<treenode node="E_NULLABLE_COLLISION;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f0;83;22;83;;;;vpos;;v;;r$fConf;;d-1,-1;;b0,0;;m">
<treenode node="E_WRONG_RELATION_CLASS;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f0;84;24;84;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="E_MM_REL_VALUE;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f0;85;16;85;;;;vpos;;v;;r$schema-&gt;getTables();;d-1,-1;;b0,0;;m">
<treenode node="E_MM_REL_CLASS;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f0;86;16;86;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="E_MM_REL_FIELD;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f0;87;16;87;;;;vpos;;v;;risset($relConf[2]) ? $relConf[2] :&#10;						static::getMMTableName(&#10;							$rel[&apos;table&apos;], $relConf[1], $table, $key,&#10;							$rel[&apos;fieldConf&apos;][$relConf[1]][&apos;has-many&apos;]);;d-1,-1;;b0,0;;m">
<treenode node="E_REL_CONF_INC;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f0;88;16;88;;;;vpos;;v;;r$relConf[0]::resolveConfiguration();;d-1,-1;;b0,0;;m">
<treenode node="E_MISSING_REL_CONF;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f0;89;20;89;;;;vpos;;v;;r$field[&apos;has-many&apos;]))&#10;					continue;;d-1,-1;;b0,0;;m">
<treenode node="Base;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f55;422;59;422;;;;vpos;;v;;rstatic::resolveRelationConf($field);;d-1,-1;;b0,0;;m">
<treenode node="self;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f17;423;21;423;;;;vpos;;v;;r$table;;d-1,-1;;b0,0;;m">
<treenode node="E_CONNECTION;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f23;423;35;423;;;;vpos;;v;;rarray();;d-1,-1;;b0,0;;m">
<treenode node="E_USER_ERROR;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f36;423;48;423;;;;vpos;;v;;r($db?:$df[&apos;db&apos;]))?\Base::instance()-&gt;get($db):$db)))&#10;			trigger_error(self::E_CONNECTION,E_USER_ERROR);;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="self;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f17;425;21;425;;;;vpos;;v;;rarray();;d-1,-1;;b0,0;;m">
<treenode node="E_NO_TABLE;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f23;425;33;425;;;;vpos;;v;;r$df[&apos;fieldConf&apos;];;d-1,-1;;b0,0;;m">
<treenode node="E_USER_ERROR;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f34;425;46;425;;;;vpos;;v;;rstrtolower($table?:$df[&apos;table&apos;]))==0)&#10;			trigger_error(self::E_NO_TABLE,E_USER_ERROR);;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
<treenode node="db;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f24;102;26;102;;;;vpos;;v;;r$self::resolveConfiguration();;d-1,-1;;b0,0;;m">
<treenode node="db;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f55;102;57;102;;;;vpos;;v;;rget_called_class();;d-1,-1;;b0,0;;m">
<treenode node="Base;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f61;102;65;102;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="self;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f17;103;21;103;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="E_CONNECTION;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f23;103;35;103;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="db;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f13;104;15;104;;;;vpos;;v;;r$table-&gt;getCols();;d-1,-1;;b0,0;;m">
<treenode node="Jig;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f26;104;30;104;;;;vpos;;v;;r$schema-&gt;alterTable($table);;d-1,-1;;b0,0;;m">
<treenode node="db;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f17;106;19;106;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="SQL;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f30;106;34;106;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="db;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f17;108;19;108;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="Mongo;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f30;108;36;108;;;;vpos;;v;;r&apos;id&apos;;;d-1,-1;;b0,0;;m">
<treenode node="dbsType;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f10;109;17;109;;;;vpos;;v;;r&apos;mongo&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="primary;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f10;113;17;113;;;;vpos;;v;;r&apos;_id&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="table;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f10;111;15;111;;;;vpos;;v;;r$table;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
<treenode node="self;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f17;118;21;118;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="E_NO_TABLE;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f23;118;33;118;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="E_USER_ERROR;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f34;118;46;118;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="ttl;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f9;119;12;119;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="rel_ttl;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f14;120;21;120;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="_ttl;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f9;122;13;122;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="rel_ttl;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f23;122;30;122;;;;vpos;;v;;r$this-&gt;rel_ttl ?: 0;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
<treenode node="fluid;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f13;124;18;124;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="db;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f24;125;26;125;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="table;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f34;125;39;125;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
<treenode node="dbsType;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f17;133;24;133;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="mapper;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f11;135;17;135;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="Jig;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f23;135;27;135;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="db;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f42;135;44;135;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="table;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f53;135;58;135;;;;vpos;;v;;rnew Jig\Mapper($this-&gt;db, $this-&gt;table);;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
<treenode node="mapper;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f11;139;17;139;;;;vpos;;v;;rarray($relField,$key);;d-1,-1;;b0,0;;m">
<treenode node="SQL;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f23;139;27;139;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="db;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f42;139;44;139;;;;vpos;;v;;rarray_unique(array_merge($this-&gt;whitelist,$addInc));;d-1,-1;;b0,0;;m">
<treenode node="mapper;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f11;144;17;144;;;;vpos;;v;;rarray_unique($fields);;d-1,-1;;b0,0;;m">
<treenode node="Mongo;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f23;144;29;144;;;;vpos;;v;;r$key;;d-1,-1;;b0,0;;m">
<treenode node="db;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f44;144;46;144;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="table;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f55;144;60;144;;;;vpos;;v;;rnew Mongo\Mapper($this-&gt;db, $this-&gt;table);;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
<treenode node="self;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f26;147;30;147;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="E_UNKNOWN_DB_ENGINE;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f32;147;51;147;;;;vpos;;v;;rexplode(&apos;.&apos;,$val,2);;d-1,-1;;b0,0;;m">
<treenode node="Base;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f9;152;13;152;;;;vpos;;v;;r\Base::instance();;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="dbsType;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f59;147;66;147;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="E_USER_ERROR;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f68;147;80;147;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="queryParser;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f9;149;20;149;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CortexQueryParser;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f22;149;40;149;;;;vpos;;v;;rCortexQueryParser::instance();;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
</treenode>
<treenode node="fieldConf;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f19;157;28;157;;;;vpos;;v;;r[];;d-1,-1;;b0,0;;m">
<treenode node="fieldConf;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f18;158;27;158;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="primary;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f51;159;58;159;;;;vpos;;v;;rstatic::resolveRelationConf($conf,$this-&gt;primary);;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
<treenode node="mapper;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f16;169;22;169;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
<treenode node="smartLoading;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f9;153;21;153;;;;vpos;;v;;r$f3-&gt;exists(&apos;CORTEX.smartLoading&apos;) ?&#10;			$f3-&gt;get(&apos;CORTEX.smartLoading&apos;) : TRUE;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="standardiseID;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f9;155;22;155;;;;vpos;;v;;r$f3-&gt;exists(&apos;CORTEX.standardiseID&apos;) ?&#10;			$f3-&gt;get(&apos;CORTEX.standardiseID&apos;) : TRUE;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
<treenode node="relWhitelist;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f12;185;24;185;;;;vpos;;v;;r$relField;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
</treenode>
</treenode>
<treenode node="table;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f53;139;58;139;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="fluid;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f13;140;18;140;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="ttl;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f29;140;32;140;;;;vpos;;v;;rnew SQL\Mapper($this-&gt;db, $this-&gt;table, null,&#10;					($this-&gt;fluid)?0:$this-&gt;ttl);;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
</treenode>
<treenode node="whitelist;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f19;190;28;190;;;;vpos;;v;;rarray_unique(array_merge($fields,$addInc));;d-1,-1;;b0,0;;m">
<treenode node="dbsType;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f25;191;32;191;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="mapper;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f28;192;34;192;;;;vpos;;v;;r$this-&gt;load()-&gt;mapper-&gt;fields();;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
<treenode node="mapper;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f39;190;45;190;;;;vpos;;v;;r$this-&gt;whitelist ?: $this-&gt;mapper-&gt;fields();;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
</treenode>
<treenode node="whitelist;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f14;202;23;202;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="dbsType;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f13;212;20;212;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="primary;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f35;212;42;212;;;;vpos;;v;;r$this-&gt;dbsType==&apos;sql&apos;?$this-&gt;primary:&apos;_id&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="whitelist;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f27;213;36;213;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="whitelist;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f10;214;19;214;;;;vpos;;v;;r$id;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
</treenode>
<treenode node="fieldConf;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f34;202;43;202;;;;vpos;;v;;r$fields;;d-1,-1;;b0,0;;m">
<treenode node="fieldConf;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f22;204;31;204;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="vFields;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f51;204;58;204;;;;vpos;;v;;rarray_unique(array_merge($schema,&#10;				array_keys($this-&gt;fieldConf),array_keys($this-&gt;vFields?:[])));;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
<treenode node="whitelist;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f10;209;19;209;;;;vpos;;v;;rarray_diff($schema,$fields);;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
<treenode node="fluid;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f15;225;20;225;;;;vpos;;v;;r$relConf[&apos;relField&apos;].($relConf[&apos;isSelf&apos;]?&apos;_ref&apos;:&apos;&apos;);;d-1,-1;;b0,0;;m">
<treenode node="Base;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f55;325;59;325;;;;vpos;;v;;r$schema-&gt;createTable($mmTable);;d-1,-1;;b0,0;;m">
<treenode node="self;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f17;326;21;326;;;;vpos;;v;;risset($relConf[2]) ? $relConf[2] :&#10;								static::getMMTableName($rel[&apos;table&apos;], $relConf[&apos;relField&apos;],&#10;									$table, $key, $rel[&apos;fieldConf&apos;][$relConf[1]][&apos;has-many&apos;]);;d-1,-1;;b0,0;;m">
<treenode node="E_CONNECTION;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f23;326;35;326;;;;vpos;;v;;r$relConf[0]::resolveConfiguration();;d-1,-1;;b0,0;;m">
<treenode node="E_USER_ERROR;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f36;326;48;326;;;;vpos;;v;;r($db?:$df[&apos;db&apos;]))?\Base::instance()-&gt;get($db):$db)))&#10;			trigger_error(self::E_CONNECTION,E_USER_ERROR);;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="self;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f17;328;21;328;;;;vpos;;v;;rstatic::resolveRelationConf($field);;d-1,-1;;b0,0;;m">
<treenode node="E_NO_TABLE;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f23;328;33;328;;;;vpos;;v;;r$df[&apos;fieldConf&apos;];;d-1,-1;;b0,0;;m">
<treenode node="E_USER_ERROR;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f34;328;46;328;;;;vpos;;v;;r$table?:$df[&apos;table&apos;])==0)&#10;			trigger_error(self::E_NO_TABLE,E_USER_ERROR);;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
<treenode node="self;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f18;333;22;333;;;;vpos;;v;;rarray();;d-1,-1;;b0,0;;m">
<treenode node="E_FIELD_SETUP;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f24;333;37;333;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="E_USER_ERROR;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f38;333;50;333;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
</treenode>
<treenode node="SQL;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f20;337;24;337;;;;vpos;;v;;rnew Schema($db);;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
<treenode node="db;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f16;275;18;275;;;;vpos;;v;;r$self::resolveConfiguration();;d-1,-1;;b0,0;;m">
<treenode node="collection;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f9;289;19;289;;;;vpos;;v;;r$cx;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="fluid;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f19;276;24;276;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="primary;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f21;277;28;277;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="charset;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f21;278;28;278;;;;vpos;;v;;rarray (&#10;			&apos;table&apos;=&gt;$self-&gt;getTable(),&#10;			&apos;fieldConf&apos;=&gt;$self-&gt;getFieldConfiguration(),&#10;			&apos;db&apos;=&gt;$self-&gt;db,&#10;			&apos;fluid&apos;=&gt;$self-&gt;fluid,&#10;			&apos;primary&apos;=&gt;$self-&gt;primary,&#10;			&apos;charset&apos;=&gt;$self-&gt;charset,&#10;		);;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
</treenode>
<treenode node="smartLoading;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f38;297;50;297;;;;vpos;;v;;r[];;d-1,-1;;b0,0;;m">
<treenode node="collection;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f12;298;22;298;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="table;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f14;306;19;306;;;;vpos;;v;;rget_called_class();;d-1,-1;;b0,0;;m">
<treenode node="fluid;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f31;306;36;306;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="table;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f10;307;15;307;;;;vpos;;v;;rstrtolower(get_class($this));;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
<treenode node="self;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f30;225;34;225;;;;vpos;;v;;rfalse;;d-1,-1;;b0,0;;m">
<treenode node="table;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f57;225;62;225;;;;vpos;;v;;rnew static();;d-1,-1;;b0,0;;m">
<treenode node="self;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f13;226;18;226;;;;vpos;;v;;rtrue;;d-1,-1;;b0,0;;m">
<treenode node="fieldConf;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f16;261;25;261;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="mapper;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f21;228;27;228;;;;vpos;;v;;r$this-&gt;mapper-&gt;schema();;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="self;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f0;229;8;229;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="fieldConf;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f9;252;18;252;;;;vpos;;v;;r$config;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="table;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f31;229;36;229;;;;vpos;;v;;r$schema;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="whitelist;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f14;232;23;232;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="mapper;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f10;234;16;234;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="whitelist;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f61;233;70;233;;;;vpos;;v;;rarray_intersect_key($schema, array_flip($this-&gt;whitelist));;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
</treenode>
<treenode node="table;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f41;226;46;226;;;;vpos;;v;;rself::$schema_cache[$this-&gt;table];;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
<treenode node="rel_ttl;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f10;121;17;121;;;;vpos;;v;;r0;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
<treenode node="ttl;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f31;119;34;119;;;;vpos;;v;;r$ttl ?: ($this-&gt;ttl ?: 60);;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
</treenode>
<treenode node="self;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f39;377;43;377;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="DT_JSON;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f45;377;52;377;;;;vpos;;v;;r$schema-&gt;createTable($table);;d-1,-1;;b0,0;;m">
<treenode node="self;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f53;377;58;377;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="DT_SERIALIZED;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f60;377;73;377;;;;vpos;;v;;rtrue;;d-1,-1;;b0,0;;m">
<treenode node="DT_TEXT;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f29;378;36;378;;;;vpos;;v;;r$schema::DT_TEXT;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
<treenode node="table;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f9;116;14;116;;;;vpos;;v;;r$this-&gt;getTable();;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
<treenode node="dbsType;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f10;107;17;107;;;;vpos;;v;;r&apos;sql&apos;;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
</treenode>
<treenode node="dbsType;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f10;105;17;105;;;;vpos;;v;;r&apos;jig&apos;;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
</treenode>
<treenode node="E_USER_ERROR;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f36;103;48;103;;;;vpos;;v;;r($db?:$this-&gt;db))?\Base::instance()-&gt;get($db):$db)))&#10;			trigger_error(self::E_CONNECTION,E_USER_ERROR);;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
<treenode node="E_HAS_COND;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f0;90;12;90;;;;vpos;;v;;r&apos;Cannot use a &quot;has&quot;-filter on a non-bidirectional relation field&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="fluid;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f10;101;15;101;;;;vpos;;v;;r$fluid;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
</treenode>
</treenode>
<treenode node="Jig;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f19;450;23;450;;;;vpos;;v;;r$db-&gt;dir();;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
<treenode node="SQL;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f25;456;29;456;;;;vpos;;v;;rnew Schema($db);;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
</treenode>
<treenode node="Mongo;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f25;463;31;463;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
</treenode>
<treenode node="self;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f26;485;30;485;;;;vpos;;v;;rstrtolower(str_replace(&apos;\\&apos;, &apos;_&apos;, implode(&apos;_mm_&apos;, $mmTable)));;d-1,-1;;b0,0;;m">
<treenode node="E_MM_REL_CLASS;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f32;485;46;485;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="E_USER_ERROR;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f64;485;76;485;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="self;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f26;487;30;487;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="E_MM_REL_FIELD;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f32;487;46;487;;;;vpos;;v;;rarray($ftable.&apos;__&apos;.$fkey, $ptable.&apos;__&apos;.$pkey);;d-1,-1;;b0,0;;m">
<treenode node="E_USER_ERROR;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f42;488;54;488;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
<treenode node="fieldConf;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f10;513;19;513;;;;vpos;;v;;r$mmTable;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="table;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f31;512;36;512;;;;vpos;;v;;risset($conf[2]) ? $conf[2] :&#10;				static::getMMTableName($conf[&apos;relTable&apos;],&#10;					$conf[&apos;relField&apos;], $this-&gt;table, $key, $fConf);;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
</treenode>
</treenode>
<treenode node="Schema;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f20;532;27;532;;;;vpos;;v;;r$relConf[0]::resolveConfiguration();;d-1,-1;;b0,0;;m">
<treenode node="DT_INT4;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f29;532;36;532;;;;vpos;;v;;rSchema::DT_INT4;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
<treenode node="__clone;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f8;2273;2;2275;;;;vpos;;v;;r;;d27,2273;;b1,0;;m">
</treenode>
<treenode node="_hasJoin_sql;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f11;1015;2;1025;;;;vpos;;v;;r&#10;Definition&#10;    _hasJoin_sql($key, $table, $cond, &amp;$filter, &amp;$options)&#10;&#10;Description&#10;     build query for single SQL table join and merge conditions;;d75,1015;;b2,0;;mkey;;ptable;;pcond;;pfilter;;poptions;;p">
</treenode>
<treenode node="_hasJoinMM_sql;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f11;987;2;1010;;;;vpos;;v;;r&#10;Definition&#10;    _hasJoinMM_sql($key, $hasCond, &amp;$filter, &amp;$options)&#10;&#10;Description&#10;     build query for SQL pivot table join and merge conditions;;d72,987;;b2,0;;mkey;;phasCond;;pfilter;;poptions;;p">
</treenode>
<treenode node="_hasRefsIn;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f11;922;2;932;;;;vpos;;varray;;r&#10;Definition&#10;    _hasRefsIn($key, $filter, $options, $ttl = 0)&#10;&#10;Description&#10;     return IDs of records that has a linkage to this mapper&#10;&#10;Parameters:&#10;    string $key - relation field&#10;    array $filter - condition for foreign records&#10;    array $options - filter options for foreign records&#10;    int $ttl&#10;&#10;Return:&#10;   |false;;d66,922;;b2,0;;mstring $key;;parray $filter;;parray $options;;pint $ttl;;p">
</treenode>
<treenode node="_hasRefsInMM;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f11;958;2;982;;;;vpos;;varray;;r&#10;Definition&#10;    _hasRefsInMM($key, $filter, $options, $ttl=0)&#10;&#10;Description&#10;     return IDs of own mappers that match the given relation filter on pivot tables&#10;&#10;Parameters:&#10;    string $key&#10;    array $filter&#10;    array $options&#10;    int $ttl&#10;&#10;Return:&#10;   |false;;d66,958;;b2,0;;mstring $key;;parray $filter;;parray $options;;pint $ttl;;p">
</treenode>
<treenode node="_mongo_addGroup;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f11;1398;2;1409;;;;vpos;;v;;r&#10;Definition&#10;    _mongo_addGroup($opt)&#10;&#10;Description&#10;     merge mongo group options array&#10;&#10;Parameters:&#10;     $opt;;d42,1398;;b2,0;;m $opt;;p">
</treenode>
<treenode node="_refSubQuery;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f11;941;2;948;;;;vpos;;vmixed;;r&#10;Definition&#10;    _refSubQuery($key, $filter, $options,$fields=null)&#10;&#10;Description&#10;     build sub query on relation&#10;&#10;Parameters:&#10;     $key&#10;     $filter&#10;     $options;;d71,941;;b2,0;;mkey;;pfilter;;poptions;;pfields;;p">
</treenode>
<treenode node="_sql_left_join;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f11;1035;2;1047;;;;vpos;;vstring;;r&#10;Definition&#10;    _sql_left_join($skey, $sTable, $fkey, $fTable)&#10;&#10;Description&#10;     assemble SQL join query string&#10;&#10;Parameters:&#10;    string $skey&#10;    string $sTable&#10;    string $fkey&#10;    string|array $fTable;;d67,1035;;b2,0;;mstring $skey;;pstring $sTable;;pstring $fkey;;pstring|array $fTable;;p">
</treenode>
<treenode node="_sql_mergeRelCondition;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f11;1057;2;1072;;;;vpos;;v;;r&#10;Definition&#10;    _sql_mergeRelCondition($cond, $table, &amp;$filter, &amp;$options, $glue=&apos;AND&apos;)&#10;&#10;Description&#10;     merge condition of relation with current condition&#10;&#10;Parameters:&#10;    array $cond - condition of related model&#10;    string $table - table of related model&#10;    array $filter - current filter to merge with&#10;    array $options - current options to merge with&#10;    string $glue;;d92,1057;;b2,0;;marray $cond;;pstring $table;;parray $filter;;parray $options;;pstring $glue;;p">
</treenode>
<treenode node="afind;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f8;587;2;590;;;;vpos;;varray;;r&#10;Definition&#10;    afind($filter = NULL, array $options = NULL, $ttl = 0, $rel_depths = 1)&#10;&#10;Description&#10;     Return an array of result arrays matching criteria&#10;&#10;Parameters:&#10;    null $filter&#10;    array $options&#10;    int $ttl&#10;    int $rel_depths;;d89,587;;b1,0;;mnull $filter;;parray $options;;pint $ttl;;pint $rel_depths;;p">
</treenode>
<treenode node="cast;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f8;2026;2;2085;;;;vpos;;varray;;r&#10;Definition&#10;    cast($obj = NULL, $rel_depths = 1)&#10;&#10;Description&#10;     Return fields of mapper object as an associative array&#10;&#10;Parameters:&#10;    bool|Cortex $obj&#10;    int|array $rel_depths - depths to resolve relations;;d52,2026;;b1,0;;mbool|Cortex $obj;;pint|array $rel_depths;;p">
</treenode>
<treenode node="castField;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f1;2093;2;2103;;;;vpos;;varray;;r&#10;Definition&#10;    castField($key, $rel_depths=0)&#10;&#10;Description&#10;     cast a related collection of mappers&#10;&#10;Parameters:&#10;    string $key - field name&#10;    int $rel_depths - depths to resolve relations&#10;&#10;Return:&#10;   array of associative arrays;;d41,2093;;b0,0;;mstring $key;;pint $rel_depths;;p">
</treenode>
<treenode node="changed;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f8;2230;2;2237;;;;vpos;;vmixed;;r&#10;Definition&#10;    changed($key=null)&#10;&#10;Description&#10;     return TRUE if any/specified field value has changed&#10;&#10;Parameters:&#10;    string $key;;d36,2230;;b1,0;;mstring $key;;p">
</treenode>
<treenode node="clear;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f1;2244;2;2249;;;;vpos;;vNULL;;r&#10;Definition&#10;    clear($key)&#10;&#10;Description&#10;     clear any mapper field or relation&#10;&#10;Parameters:&#10;    string $key&#10;&#10;Return:&#10;   |void;;d22,2244;;b0,0;;mstring $key;;p">
</treenode>
<treenode node="clearFilter;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f8;1096;2;1101;;;;vpos;;v;;r&#10;Definition&#10;    clearFilter($key = null)&#10;&#10;Description&#10;     removes one or all relation filter&#10;&#10;Parameters:&#10;    null|string $key;;d42,1096;;b1,0;;mnull|string $key;;p">
</treenode>
<treenode node="copyfrom;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f8;2135;2;2155;;;;vpos;;vNULL;;r&#10;Definition&#10;    copyfrom($key, $fields = null)&#10;&#10;Description&#10;     hydrate the mapper from hive key or given array&#10;&#10;Parameters:&#10;    string|array $key&#10;    callback|array|string $fields;;d48,2135;;b1,0;;mstring|array $key;;pcallback|array|string $fields;;p">
</treenode>
<treenode node="copyto;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f8;2163;2;2165;;;;vpos;;vNULL;;r&#10;Definition&#10;    copyto($key, $relDepth=0)&#10;&#10;Description&#10;     copy mapper values into hive key&#10;&#10;Parameters:&#10;    string $key - the hive key to copy into&#10;    int $relDepth - the depth of relations to resolve&#10;&#10;Return:&#10;   |void;;d43,2163;;b1,0;;mstring $key;;pint $relDepth;;p">
</treenode>
<treenode node="count;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f8;1282;2;1287;;;;vpos;;vmixed;;r&#10;Definition&#10;    count($filter=NULL, array $options=NULL, $ttl=60)&#10;&#10;Description&#10;     Count records that match criteria&#10;&#10;Parameters:&#10;    null $filter&#10;    array $options&#10;    int $ttl;;d67,1282;;b1,0;;mnull $filter;;parray $options;;pint $ttl;;p">
</treenode>
<treenode node="countRel;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f8;1301;2;1392;;;;vpos;;v;;r&#10;Definition&#10;    countRel($key, $alias=null, $filter=null, $option=null)&#10;&#10;Description&#10;     add a virtual field that counts occurring relations&#10;&#10;Parameters:&#10;     $key;;d73,1301;;b1,0;;mkey;;palias;;pfilter;;poption;;p">
</treenode>
<treenode node="dbtype;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f1;2269;2;2271;;;;vpos;;v;;r;;d19,2269;;b0,0;;m">
</treenode>
<treenode node="dry;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f8;2125;2;2127;;;;vpos;;v;;r;;d23,2125;;b1,0;;m">
</treenode>
<treenode node="emit;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f11;1577;2;1591;;;;vpos;;vmixed;;r&#10;Definition&#10;    emit($event, $val=null)&#10;&#10;Description&#10;     call custom field handlers&#10;&#10;Parameters:&#10;     $event&#10;     $val;;d44,1577;;b2,0;;m $event;;p $val;;p">
</treenode>
<treenode node="erase;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f8;1151;2;1173;;;;vpos;;vbool;;r&#10;Definition&#10;    erase($filter = null)&#10;&#10;Description&#10;     Delete object/s and reset ORM&#10;&#10;Parameters:&#10;     $filter;;d39,1151;;b1,0;;m $filter;;p">
</treenode>
<treenode node="exists;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f1;2219;2;2223;;;;vpos;;vbool;;r&#10;Definition&#10;    exists($key, $relField = false)&#10;&#10;Description&#10;     check if a certain field exists in the mapper or or is a virtual relation field&#10;&#10;Parameters:&#10;    string $key&#10;    bool $relField;;d42,2219;;b0,0;;mstring $key;;pbool $relField;;p">
</treenode>
<treenode node="factory;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f11;2110;2;2123;;;;vpos;;vCortex;;r&#10;Definition&#10;    factory($mapper)&#10;&#10;Description&#10;     wrap result mapper&#10;&#10;Parameters:&#10;    Cursor|array $mapper;;d37,2110;;b2,0;;mCursor|array $mapper;;p">
</treenode>
<treenode node="filter;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f8;1081;2;1090;;;;vpos;;v;;r&#10;Definition&#10;    filter($key, $filter=null, $option=null)&#10;&#10;Description&#10;     add filter for loading related models&#10;&#10;Parameters:&#10;    string $key&#10;    array $filter&#10;    array $option;;d58,1081;;b1,0;;mstring $key;;parray $filter;;parray $option;;p">
</treenode>
<treenode node="filteredFind;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f11;653;2;867;;;;vpos;;varray;;r&#10;Definition&#10;    filteredFind($filter = NULL, array $options = NULL, $ttl = 0, $count=false)&#10;&#10;Description&#10;     wrapper for custom find queries&#10;&#10;Parameters:&#10;    array $filter&#10;    array $options&#10;    int $ttl&#10;    bool $count&#10;&#10;Return:&#10;   |int|false array of underlying cursor objects;;d96,653;;b2,0;;marray $filter;;parray $options;;pint $ttl;;pbool $count;;p">
</treenode>
<treenode node="find;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f8;599;2;643;;;;vpos;;vCortexCollection;;r&#10;Definition&#10;    find($filter = NULL, array $options = NULL, $ttl = 0)&#10;&#10;Description&#10;     Return an array of objects matching criteria&#10;&#10;Parameters:&#10;    array|null $filter&#10;    array|null $options&#10;    int $ttl;;d71,599;;b1,0;;marray|null $filter;;parray|null $options;;pint $ttl;;p">
</treenode>
<treenode node="first;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f8;2175;2;2179;;;;vpos;;v;;r;;d25,2175;;b1,0;;m">
</treenode>
<treenode node="get;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\test\app\cortex.php;f1;6;2;53;;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f1;1630;2;1890;;;;vpos;;v;;r;;d1,7;;b0,0;;m">
</treenode>
<treenode node="getForeignKeysArray;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f11;1908;2;1947;;;;vpos;;varray;;r&#10;Definition&#10;    getForeignKeysArray($val, $rel_field, $key)&#10;&#10;Description&#10;     find the ID values of given relation collection&#10;&#10;Parameters:&#10;     $val - string|array|object|bool&#10;     $rel_field - string&#10;     $key - string&#10;&#10;Return:&#10;   |Cortex|null|object;;d64,1908;;b2,0;;m $val;;p $rel_field;;p $key;;p">
</treenode>
<treenode node="getiterator;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f1;2277;2;2280;;;;vpos;;v;;r;;d24,2277;;b0,0;;m">
</treenode>
<treenode node="getRaw;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f1;1897;2;1899;;;;vpos;;vmixed;;r&#10;Definition&#10;    &amp;getRaw($key)&#10;&#10;Description&#10;     return raw value of a field&#10;&#10;Parameters:&#10;     $key;;d24,1897;;b0,0;;m $key;;p">
</treenode>
<treenode node="getRelFilterOption;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f11;1140;2;1144;;;;vpos;;varray;;r&#10;Definition&#10;    getRelFilterOption($key)&#10;&#10;Description&#10;     returns the option condition for a relation filter, if defined&#10;&#10;Parameters:&#10;    string $key&#10;&#10;Return:&#10;   null;;d45,1140;;b2,0;;mstring $key;;p">
</treenode>
<treenode node="getRelFromConf;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f11;1998;2;2005;;;;vpos;;vCortex;;r&#10;Definition&#10;    getRelFromConf(&amp;$relConf, $key)&#10;&#10;Description&#10;     get relation model from config&#10;&#10;Parameters:&#10;     $relConf&#10;     $key;;d52,1998;;b2,0;;m $relConf;;p $key;;p">
</treenode>
<treenode node="getRelInstance;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f11;1957;2;1990;;;;vpos;;vCortex;;r&#10;Definition&#10;    getRelInstance($model=null, $relConf=null, $key=&apos;&apos;, $pushFilter=false)&#10;&#10;Description&#10;     creates and caches related mapper objects&#10;&#10;Parameters:&#10;    string $model&#10;    array $relConf&#10;    string $key&#10;    bool $pushFilter;;d91,1957;;b2,0;;mstring $model;;parray $relConf;;pstring $key;;pbool $pushFilter;;p">
</treenode>
<treenode node="has;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f8;896;2;912;;;;vpos;;v;;r&#10;Definition&#10;    has($key, $filter, $options = null)&#10;&#10;Description&#10;     add has-conditional filter to next find call&#10;&#10;Parameters:&#10;    string $key&#10;    array $filter&#10;    null $options;;d53,896;;b1,0;;mstring $key;;parray $filter;;pnull $options;;p">
</treenode>
<treenode node="insert;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f1;2251;2;2258;;;;vpos;;v;;r;;d19,2251;;b0,0;;m">
</treenode>
<treenode node="last;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f8;2181;2;2185;;;;vpos;;v;;r;;d24,2181;;b1,0;;m">
</treenode>
<treenode node="load;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f8;876;2;887;;;;vpos;;vCortex;;r&#10;Definition&#10;    load($filter = NULL, array $options = NULL, $ttl = 0)&#10;&#10;Description&#10;     Retrieve first object that satisfies criteria&#10;&#10;Parameters:&#10;    null $filter&#10;    array $options&#10;    int $ttl;;d71,876;;b1,0;;mnull $filter;;parray $options;;pint $ttl;;p">
</treenode>
<treenode node="loaded;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f8;1293;2;1295;;;;vpos;;vint;;r&#10;Definition&#10;    loaded()&#10;&#10;Description&#10;     Count records that are currently loaded;;d26,1293;;b1,0;;m">
</treenode>
<treenode node="mergeFilter;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f8;1122;2;1133;;;;vpos;;varray;;r&#10;Definition&#10;    mergeFilter($filters, $glue=&apos;and&apos;)&#10;&#10;Description&#10;     merge multiple filters&#10;&#10;Parameters:&#10;    array $filters&#10;    string $glue;;d52,1122;;b1,0;;marray $filters;;pstring $glue;;p">
</treenode>
<treenode node="mergeWithRelFilter;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f11;1109;2;1114;;;;vpos;;varray;;r&#10;Definition&#10;    mergeWithRelFilter($key, $crit)&#10;&#10;Description&#10;     merge the relation filter to the query criteria if it exists&#10;&#10;Parameters:&#10;    string $key&#10;    array $crit;;d52,1109;;b2,0;;mstring $key;;parray $crit;;p">
</treenode>
<treenode node="onget;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f8;1607;2;1609;;;;vpos;;v;;r&#10;Definition&#10;    onget($key, $func)&#10;&#10;Description&#10;     Define a custom field getter&#10;&#10;Parameters:&#10;     $key&#10;     $func;;d36,1607;;b1,0;;m $key;;p $func;;p">
</treenode>
<treenode node="onset;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f8;1598;2;1600;;;;vpos;;v;;r&#10;Definition&#10;    onset($key, $func)&#10;&#10;Description&#10;     Define a custom field setter&#10;&#10;Parameters:&#10;     $key&#10;     $func;;d36,1598;;b1,0;;m $key;;p $func;;p">
</treenode>
<treenode node="rel;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f8;2012;2;2018;;;;vpos;;vCortex;;r&#10;Definition&#10;    rel($key)&#10;&#10;Description&#10;     returns a clean/dry model from a relation&#10;&#10;Parameters:&#10;    string $key;;d27,2012;;b1,0;;mstring $key;;p">
</treenode>
<treenode node="reset;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f8;2192;2;2210;;;;vpos;;vNULL;;r&#10;Definition&#10;    reset($mapper = true)&#10;&#10;Description&#10;     reset and re-initialize the mapper&#10;&#10;Parameters:&#10;    bool $mapper&#10;&#10;Return:&#10;   |void;;d39,2192;;b1,0;;mbool $mapper;;p">
</treenode>
<treenode node="save;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f1;1179;2;1273;;;;vpos;;vmixed;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Save mapped record;;d17,1179;;b0,0;;m">
</treenode>
<treenode node="set;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f1;1436;2;1569;;;;vpos;;vmixed;;r&#10;Definition&#10;    set($key, $val)&#10;&#10;Description&#10;     Bind value to key&#10;&#10;Parameters:&#10;     $key - string&#10;     $val - mixed;;d26,1436;;b0,0;;m $key;;p $val;;p">
</treenode>
<treenode node="skip;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f8;2167;2;2173;;;;vpos;;v;;r;;d32,2167;;b1,0;;mofs;;p">
</treenode>
<treenode node="touch;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f8;1415;2;1428;;;;vpos;;v;;r&#10;Definition&#10;    touch($key)&#10;&#10;Description&#10;     update a given date or time field with the current time&#10;&#10;Parameters:&#10;    string $key;;d29,1415;;b1,0;;mstring $key;;p">
</treenode>
<treenode node="update;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f1;2260;2;2267;;;;vpos;;v;;r;;d19,2260;;b0,0;;m">
</treenode>
<treenode node="virtual;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f8;1616;2;1622;;;;vpos;;v;;r&#10;Definition&#10;    virtual($key, $val)&#10;&#10;Description&#10;     virtual mapper field setter&#10;&#10;Parameters:&#10;    string $key&#10;    mixed|callback $val;;d37,1616;;b1,0;;mstring $key;;pmixed|callback $val;;p">
</treenode>
</treenode>
<treenode node="Cortex_Benchmark;PHP:Class Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\test\app\cortex_benchmark.php;f0;4;1;137;;;;vpos;;vController;;c;;r;;d0,5;;b0,0;;m">
<treenode node="get;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\test\app\cortex_benchmark.php;f4;21;5;87;;;;vpos;;v;;r;;d4,22;;b0,0;;m">
</treenode>
<treenode node="getTime;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\test\app\cortex_benchmark.php;f12;13;5;18;;;;vpos;;v;;r;;d4,14;;b3,0;;m">
</treenode>
<treenode node="insert_authors;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\test\app\cortex_benchmark.php;f4;106;5;119;;;;vpos;;v;;r;;d4,107;;b0,0;;m">
</treenode>
<treenode node="insert_news;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\test\app\cortex_benchmark.php;f4;121;5;135;;;;vpos;;v;;r;;d4,122;;b0,0;;m">
</treenode>
<treenode node="insert_tags;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\test\app\cortex_benchmark.php;f4;89;5;104;;;;vpos;;v;;r;;d4,90;;b0,0;;m">
</treenode>
</treenode>
<treenode node="CortexCollection;PHP:Class Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f0;2734;1;2968;;;;vpos;;vArrayIterator;;c;;r;;d46,2734;;b0,0;;m">
<treenode node="E_UnknownCID;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f0;2743;14;2743;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="cid;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f9;2747;12;2747;;;;vpos;;v;;runiqid(&apos;cortex_collection_&apos;);;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="E_SubsetKeysValue;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f0;2744;19;2744;;;;vpos;;v;;r&apos;$keys must be an array or split-able string, but %s was given.&apos;;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
<treenode node="__clone;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f9;2752;31;2752;;;;vpos;;v;;r;;d28,2752;;b3,0;;m">
</treenode>
<treenode node="add;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f1;2768;2;2771;;;;vpos;;v;;r&#10;Definition&#10;    add(Cortex $model)&#10;&#10;Description&#10;     add single model to collection&#10;&#10;Parameters:&#10;     $model;;d29,2768;;b0,0;;m $model;;p">
</treenode>
<treenode node="castAll;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f8;2858;2;2863;;;;vpos;;varray;;r&#10;Definition&#10;    castAll($rel_depths=1)&#10;&#10;Description&#10;     cast all contained mappers to a nested array&#10;&#10;Parameters:&#10;    int|array $rel_depths - depths to resolve relations;;d40,2858;;b1,0;;mint|array $rel_depths;;p">
</treenode>
<treenode node="compare;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f8;2930;2;2942;;;;vpos;;varray;;r&#10;Definition&#10;    compare($stack,$cpm_key=&apos;_id&apos;)&#10;&#10;Description&#10;     compare collection with a given ID stack&#10;&#10;Parameters:&#10;    array|CortexCollection $stack&#10;    string $cpm_key;;d48,2930;;b1,0;;marray|CortexCollection $stack;;pstring $cpm_key;;p">
</treenode>
<treenode node="contains;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f8;2950;2;2955;;;;vpos;;vbool;;r&#10;Definition&#10;    contains($val,$key=&apos;_id&apos;)&#10;&#10;Description&#10;     check if the collection contains a record with the given key-val set&#10;&#10;Parameters:&#10;    mixed $val&#10;    string $key;;d43,2950;;b1,0;;mmixed $val;;pstring $key;;p">
</treenode>
<treenode node="expose;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f8;2809;2;2811;;;;vpos;;v;;r;;d26,2809;;b1,0;;m">
</treenode>
<treenode node="factory;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f15;2962;2;2966;;;;vpos;;vCortexCollection;;r&#10;Definition&#10;    factory($records)&#10;&#10;Description&#10;     create a new hydrated collection from the given records&#10;&#10;Parameters:&#10;     $records;;d42,2962;;b1,5;;m $records;;p">
</treenode>
<treenode node="getAll;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f8;2840;2;2851;;;;vpos;;varray;;r&#10;Definition&#10;    getAll($prop, $raw = false)&#10;&#10;Description&#10;     returns all values of a specified property from all models&#10;&#10;Parameters:&#10;    string $prop&#10;    bool $raw;;d45,2840;;b1,0;;mstring $prop;;pbool $raw;;p">
</treenode>
<treenode node="getBy;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f8;2871;2;2881;;;;vpos;;varray;;r&#10;Definition&#10;    getBy($index, $nested = false)&#10;&#10;Description&#10;     return all models keyed by a specified index key&#10;&#10;Parameters:&#10;    string $index&#10;    bool $nested;;d48,2871;;b1,0;;mstring $index;;pbool $nested;;p">
</treenode>
<treenode node="getRelSet;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f8;2787;2;2789;;;;vpos;;vnull;;r&#10;Definition&#10;    getRelSet($key)&#10;&#10;Description&#10;     get a related collection&#10;&#10;Parameters:&#10;     $key;;d33,2787;;b1,0;;m $key;;p">
</treenode>
<treenode node="getSubset;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f8;2819;2;2832;;;;vpos;;varray;;r&#10;Definition&#10;    getSubset($prop, $keys)&#10;&#10;Description&#10;     get an intersection from a cached relation-set, based on given keys&#10;&#10;Parameters:&#10;    string $prop&#10;    array|string $keys;;d41,2819;;b1,0;;mstring $prop;;parray|string $keys;;p">
</treenode>
<treenode node="hasChanged;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f8;2778;2;2780;;;;vpos;;v;;r;;d30,2778;;b1,0;;m">
</treenode>
<treenode node="hasRelSet;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f8;2805;2;2807;;;;vpos;;vbool;;r&#10;Definition&#10;    hasRelSet($key)&#10;&#10;Description&#10;     check if a related collection exists in runtime cache&#10;&#10;Parameters:&#10;     $key;;d33,2805;;b1,0;;m $key;;p">
</treenode>
<treenode node="offsetSet;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f8;2773;2;2776;;;;vpos;;v;;r;;d37,2773;;b1,0;;mi;;pval;;p">
</treenode>
<treenode node="orderBy;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f8;2887;2;2901;;;;vpos;;v;;r&#10;Definition&#10;    orderBy($cond)&#10;&#10;Description&#10;     re-assort the current collection using a sql-like syntax&#10;&#10;Parameters:&#10;     $cond;;d32,2887;;b1,0;;m $cond;;p">
</treenode>
<treenode node="setModels;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f1;2758;2;2762;;;;vpos;;v;;r&#10;Definition&#10;    setModels($models, $init=true)&#10;&#10;Description&#10;     set a collection of models&#10;&#10;Parameters:&#10;     $models;;d41,2758;;b0,0;;mmodels;;pinit;;p">
</treenode>
<treenode node="setRelSet;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f8;2796;2;2798;;;;vpos;;v;;r&#10;Definition&#10;    setRelSet($key,$set)&#10;&#10;Description&#10;     set a related collection for caching it for the lifetime of this collection&#10;&#10;Parameters:&#10;     $key&#10;     $set;;d38,2796;;b1,0;;m $key;;p $set;;p">
</treenode>
<treenode node="slice;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f8;2908;2;2922;;;;vpos;;v;;r&#10;Definition&#10;    slice($offset, $limit=null)&#10;&#10;Description&#10;     slice the collection&#10;&#10;Parameters:&#10;     $offset&#10;    null $limit;;d45,2908;;b1,0;;m $offset;;pnull $limit;;p">
</treenode>
</treenode>
<treenode node="CortexQueryParser;PHP:Class Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f0;2284;1;2732;;;;vpos;;vPrefab;;c;;r;;d40,2284;;b0,0;;m">
<treenode node="E_BRACKETS;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f0;2287;12;2287;;;;vpos;;v;;rarray($cond);;d-1,-1;;b0,0;;m">
<treenode node="E_INBINDVALUE;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f0;2288;15;2288;;;;vpos;;v;;rnull) {&#10;		if (is_null($cond)) return $cond;;d-1,-1;;b0,0;;m">
<treenode node="E_ENGINEERROR;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f0;2289;15;2289;;;;vpos;;v;;rarray();;d-1,-1;;b0,0;;m">
<treenode node="E_MISSINGBINDKEY;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f0;2290;18;2290;;;;vpos;;v;;r&apos;Named bind parameter `%s` does not exist in filter arguments&apos;;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
</treenode>
</treenode>
<treenode node="_jig_parse_filter;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f11;2485;2;2540;;;;vpos;;varray;;r&#10;Definition&#10;    _jig_parse_filter($where, $args)&#10;&#10;Description&#10;     convert filter array to jig syntax&#10;&#10;Parameters:&#10;     $where&#10;     $args;;d53,2485;;b2,0;;m $where;;p $args;;p">
</treenode>
<treenode node="_likeValueToRegEx;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f11;2658;2;2670;;;;vpos;;vstring;;r&#10;Definition&#10;    _likeValueToRegEx($var)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    string $var;;d44,2658;;b2,0;;mstring $var;;p">
</treenode>
<treenode node="_mongo_parse_logical_op;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f11;2547;2;2592;;;;vpos;;varray;;r&#10;Definition&#10;    _mongo_parse_logical_op($parts)&#10;&#10;Description&#10;     find and wrap logical operators AND, OR, (, )&#10;&#10;Parameters:&#10;     $parts;;d52,2547;;b2,0;;m $parts;;p">
</treenode>
<treenode node="_mongo_parse_relational_op;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f11;2602;2;2652;;;;vpos;;varray;;r&#10;Definition&#10;    _mongo_parse_relational_op($part, &amp;$args, \DB\Mongo $db, $fieldConf=null)&#10;&#10;Description&#10;     find and convert relational operators&#10;&#10;Parameters:&#10;     $part&#10;     $args&#10;    \DB\Mongo $db&#10;    null $fieldConf&#10;&#10;Return:&#10;   |null;;d94,2602;;b2,0;;m $part;;p $args;;p\DB\Mongo $db;;pnull $fieldConf;;p">
</treenode>
<treenode node="convertNamedParams;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f11;2414;2;2430;;;;vpos;;varray;;r&#10;Definition&#10;    convertNamedParams($parts, $args)&#10;&#10;Description&#10;     converts named parameter filter to positional&#10;&#10;Parameters:&#10;     $parts&#10;     $args;;d54,2414;;b2,0;;m $parts;;p $args;;p">
</treenode>
<treenode node="prepareOptions;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f8;2684;2;2731;;;;vpos;;varray;;r&#10;Definition&#10;    prepareOptions($options, $engine, $db)&#10;&#10;Description&#10;     convert options array syntax to given engine type&#10;&#10;Parameters:&#10;    array $options&#10;    string $engine&#10;    object $db&#10;&#10;Return:&#10;   |null;;d56,2684;;b1,0;;marray $options;;pstring $engine;;pobject $db;;p">
</treenode>
<treenode node="splitLogical;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f11;2403;2;2406;;;;vpos;;varray;;r&#10;Definition&#10;    splitLogical($cond)&#10;&#10;Description&#10;     split where criteria string into logical chunks&#10;&#10;Parameters:&#10;     $cond;;d40,2403;;b2,0;;m $cond;;p">
</treenode>
<treenode node="sql_prependTableToFields;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f8;2463;2;2477;;;;vpos;;vstring;;r&#10;Definition&#10;    sql_prependTableToFields($cond, $table)&#10;&#10;Description&#10;     add table prefix to identifiers which do not have a table prefix yet&#10;&#10;Parameters:&#10;    string $cond&#10;    string $table;;d57,2463;;b1,0;;mstring $cond;;pstring $table;;p">
</treenode>
<treenode node="sql_quoteCondition;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\lib\db\cortex.php;f8;2438;2;2455;;;;vpos;;vstring;;r&#10;Definition&#10;    sql_quoteCondition($cond, $db)&#10;&#10;Description&#10;     quote identifiers in condition&#10;&#10;Parameters:&#10;    string $cond&#10;    object $db;;d48,2438;;b1,0;;mstring $cond;;pobject $db;;p">
</treenode>
</treenode>
<treenode node="Cursor;PHP:Class Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\cursor.php;f9;25;1;387;;;;vpos;;vMagic;;cIteratorAggregate;;c;;r;;d67,25;;b0,0;;m">
<treenode node="E_Field;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\cursor.php;f0;29;9;29;;;;vpos;;v;;r&apos;Undefined field %s&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="aftererase;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\cursor.php;f1;365;2;367;;;;vpos;;vcallback;;r&#10;Definition&#10;    aftererase($func)&#10;&#10;Description&#10;     Define aftererase trigger&#10;&#10;Parameters:&#10;     $func - callback;;d28,365;;b0,0;;m $func;;p">
</treenode>
<treenode node="afterinsert;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\cursor.php;f1;280;2;282;;;;vpos;;vcallback;;r&#10;Definition&#10;    afterinsert($func)&#10;&#10;Description&#10;     Define afterinsert trigger&#10;&#10;Parameters:&#10;     $func - callback;;d29,280;;b0,0;;m $func;;p">
</treenode>
<treenode node="aftersave;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\cursor.php;f1;336;2;340;;;;vpos;;vcallback;;r&#10;Definition&#10;    aftersave($func)&#10;&#10;Description&#10;     Define aftersave trigger&#10;&#10;Parameters:&#10;     $func - callback;;d27,336;;b0,0;;m $func;;p">
</treenode>
<treenode node="afterupdate;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\cursor.php;f1;307;2;309;;;;vpos;;vcallback;;r&#10;Definition&#10;    afterupdate($func)&#10;&#10;Description&#10;     Define afterupdate trigger&#10;&#10;Parameters:&#10;     $func - callback;;d29,307;;b0,0;;m $func;;p">
</treenode>
<treenode node="beforeerase;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\cursor.php;f1;356;2;358;;;;vpos;;vcallback;;r&#10;Definition&#10;    beforeerase($func)&#10;&#10;Description&#10;     Define beforeerase trigger&#10;&#10;Parameters:&#10;     $func - callback;;d29,356;;b0,0;;m $func;;p">
</treenode>
<treenode node="beforeinsert;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\cursor.php;f1;271;2;273;;;;vpos;;vcallback;;r&#10;Definition&#10;    beforeinsert($func)&#10;&#10;Description&#10;     Define beforeinsert trigger&#10;&#10;Parameters:&#10;     $func - callback;;d30,271;;b0,0;;m $func;;p">
</treenode>
<treenode node="beforesave;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\cursor.php;f1;325;2;329;;;;vpos;;vcallback;;r&#10;Definition&#10;    beforesave($func)&#10;&#10;Description&#10;     Define beforesave trigger&#10;&#10;Parameters:&#10;     $func - callback;;d28,325;;b0,0;;m $func;;p">
</treenode>
<treenode node="beforeupdate;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\cursor.php;f1;298;2;300;;;;vpos;;vcallback;;r&#10;Definition&#10;    beforeupdate($func)&#10;&#10;Description&#10;     Define beforeupdate trigger&#10;&#10;Parameters:&#10;     $func - callback;;d30,298;;b0,0;;m $func;;p">
</treenode>
<treenode node="cast;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\cursor.php;f10;57;34;57;;;;vpos;;varray;;r&#10;Description&#10;     Return fields of mapper object as an associative array&#10;&#10;Parameters:&#10;     $obj - object;;d-1,-1;;b0,0;;m $obj;;p">
</treenode>
<treenode node="copyfrom;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\cursor.php;f10;95;44;95;;;;vpos;;vNULL;;r&#10;Description&#10;     Hydrate mapper object using hive array variable&#10;&#10;Parameters:&#10;     $var - array|string&#10;     $func - callback;;d-1,-1;;b0,0;;m $var;;p $func;;p">
</treenode>
<treenode node="copyto;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\cursor.php;f10;102;31;102;;;;vpos;;vNULL;;r&#10;Description&#10;     Populate hive array variable with mapper fields&#10;&#10;Parameters:&#10;     $key - string;;d-1,-1;;b0,0;;m $key;;p">
</treenode>
<treenode node="count;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\cursor.php;f10;75;65;75;;;;vpos;;vint;;r&#10;Description&#10;     Count records that match criteria&#10;&#10;Parameters:&#10;     $filter - array&#10;     $options - array&#10;     $ttl - int;;d-1,-1;;b0,0;;m $filter;;p $options;;p $ttl;;p">
</treenode>
<treenode node="dbtype;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\cursor.php;f10;44;27;44;;;;vpos;;vstring;;r&#10;Description&#10;     Return database type;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="dry;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\cursor.php;f1;116;2;118;;;;vpos;;vbool;;r&#10;Definition&#10;    dry()&#10;&#10;Description&#10;     Return TRUE if current cursor position is not mapped to any record;;d16,116;;b0,0;;m">
</treenode>
<treenode node="erase;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\cursor.php;f1;251;2;255;;;;vpos;;vint;;r&#10;Definition&#10;    erase()&#10;&#10;Description&#10;     Delete current record&#10;&#10;Return:&#10;   |bool;;d18,251;;b0,0;;m">
</treenode>
<treenode node="fields;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\cursor.php;f10;50;27;50;;;;vpos;;varray;;r&#10;Description&#10;     Return field names;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="find;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\cursor.php;f10;66;64;66;;;;vpos;;varray;;r&#10;Description&#10;     Return records (array of mapper objects) that match criteria&#10;&#10;Parameters:&#10;     $filter - string|array&#10;     $options - array&#10;     $ttl - int;;d-1,-1;;b0,0;;m $filter;;p $options;;p $ttl;;p">
</treenode>
<treenode node="findone;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\cursor.php;f1;127;2;133;;;;vpos;;vstatic;;r&#10;Definition&#10;    findone($filter=NULL,array $options=NULL,$ttl=0)&#10;&#10;Description&#10;     Return first record (mapper object) that matches criteria&#10;&#10;Parameters:&#10;     $filter - string|array&#10;     $options - array&#10;     $ttl - int&#10;&#10;Return:&#10;   |FALSE;;d59,127;;b0,0;;m $filter;;p $options;;p $ttl;;p">
</treenode>
<treenode node="first;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\cursor.php;f1;193;2;195;;;;vpos;;vmixed;;r&#10;Definition&#10;    first()&#10;&#10;Description&#10;     Map to first record in cursor;;d18,193;;b0,0;;m">
</treenode>
<treenode node="getiterator;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\cursor.php;f10;109;32;109;;;;vpos;;v;;r&#10;Description&#10;     Get cursor&apos;s equivalent external iterator Causes a fatal error in PHP 5.3.5 if uncommented return ArrayIterator;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="insert;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\cursor.php;f10;81;27;81;;;;vpos;;varray;;r&#10;Description&#10;     Insert new record;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="last;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\cursor.php;f1;201;2;203;;;;vpos;;vmixed;;r&#10;Definition&#10;    last()&#10;&#10;Description&#10;     Map to last record in cursor;;d17,201;;b0,0;;m">
</treenode>
<treenode node="load;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\cursor.php;f1;175;2;179;;;;vpos;;varray;;r&#10;Definition&#10;    load($filter=NULL,array $options=NULL,$ttl=0)&#10;&#10;Description&#10;     Map to first record that matches criteria&#10;&#10;Parameters:&#10;     $filter - string|array&#10;     $options - array&#10;     $ttl - int&#10;&#10;Return:&#10;   |FALSE;;d56,175;;b0,0;;m $filter;;p $options;;p $ttl;;p">
</treenode>
<treenode node="loaded;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\cursor.php;f1;185;2;187;;;;vpos;;vint;;r&#10;Definition&#10;    loaded()&#10;&#10;Description&#10;     Return the count of records loaded;;d19,185;;b0,0;;m">
</treenode>
<treenode node="next;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\cursor.php;f1;220;2;222;;;;vpos;;vmixed;;r&#10;Definition&#10;    next()&#10;&#10;Description&#10;     Map next record;;d17,220;;b0,0;;m">
</treenode>
<treenode node="onerase;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\cursor.php;f1;374;2;376;;;;vpos;;vcallback;;r&#10;Definition&#10;    onerase($func)&#10;&#10;Description&#10;     Define onerase trigger&#10;&#10;Parameters:&#10;     $func - callback;;d25,374;;b0,0;;m $func;;p">
</treenode>
<treenode node="oninsert;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\cursor.php;f1;289;2;291;;;;vpos;;vcallback;;r&#10;Definition&#10;    oninsert($func)&#10;&#10;Description&#10;     Define oninsert trigger&#10;&#10;Parameters:&#10;     $func - callback;;d26,289;;b0,0;;m $func;;p">
</treenode>
<treenode node="onload;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\cursor.php;f1;262;2;264;;;;vpos;;vcallback;;r&#10;Definition&#10;    onload($func)&#10;&#10;Description&#10;     Define onload trigger&#10;&#10;Parameters:&#10;     $func - callback;;d24,262;;b0,0;;m $func;;p">
</treenode>
<treenode node="onsave;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\cursor.php;f1;347;2;349;;;;vpos;;vcallback;;r&#10;Definition&#10;    onsave($func)&#10;&#10;Description&#10;     Define onsave trigger&#10;&#10;Parameters:&#10;     $func - callback;;d24,347;;b0,0;;m $func;;p">
</treenode>
<treenode node="onupdate;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\cursor.php;f1;316;2;318;;;;vpos;;vcallback;;r&#10;Definition&#10;    onupdate($func)&#10;&#10;Description&#10;     Define onupdate trigger&#10;&#10;Parameters:&#10;     $func - callback;;d26,316;;b0,0;;m $func;;p">
</treenode>
<treenode node="paginate;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\cursor.php;f1;147;2;166;;;;vpos;;varray;;r&#10;Definition&#10;    paginate(&#10;		$pos=0,$size=10,$filter=NULL,array $options=NULL,$ttl=0,$bounce=TRUE)&#10;&#10;Description&#10;     Return array containing subset of records matching criteria, total number of records in superset, specified limit, number of subsets available, and actual subset position&#10;&#10;Parameters:&#10;     $pos - int&#10;     $size - int&#10;     $filter - string|array&#10;     $options - array&#10;     $ttl - int&#10;     $bounce - bool;;d72,148;;b0,0;;m $pos;;p $size;;p $filter;;p $options;;p $ttl;;p $bounce;;p">
</treenode>
<treenode node="prev;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\cursor.php;f1;228;2;230;;;;vpos;;vmixed;;r&#10;Definition&#10;    prev()&#10;&#10;Description&#10;     Map previous record;;d17,228;;b0,0;;m">
</treenode>
<treenode node="reset;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\cursor.php;f1;382;2;385;;;;vpos;;vNULL;;r&#10;Definition&#10;    reset()&#10;&#10;Description&#10;     Reset cursor;;d18,382;;b0,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\cursor.php;f1;243;2;245;;;;vpos;;vmixed;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Save mapped record;;d17,243;;b0,0;;m">
</treenode>
<treenode node="skip;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\cursor.php;f1;210;2;214;;;;vpos;;vmixed;;r&#10;Definition&#10;    skip($ofs=1)&#10;&#10;Description&#10;     Map to nth record relative to current cursor position&#10;&#10;Parameters:&#10;     $ofs - int;;d23,210;;b0,0;;m $ofs;;p">
</treenode>
<treenode node="update;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\cursor.php;f10;87;27;87;;;;vpos;;varray;;r&#10;Description&#10;     Update current record;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="valid;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\cursor.php;f1;235;2;237;;;;vpos;;v;;r&#10;Definition&#10;    valid()&#10;&#10;Description&#10;     Return whether current iterator position is valid.;;d18,235;;b0,0;;m">
</treenode>
</treenode>
<treenode node="Dashboard;PHP:Class Name;C:\xampp\htdocs\claims-fab\app\controller\dashboard0.php;f0;5;1;24;;C:\xampp\htdocs\claims-fab\app\controller\dashboard.php;f0;5;1;26;;;;vpos;;vBase;;c;;r;;d29,5;;b0,0;;m">
<treenode node="beforeroute;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\controller\dashboard0.php;f11;13;5;15;;C:\xampp\htdocs\claims-fab\app\controller\dashboard.php;f11;13;5;15;;;;vpos;;v;;r&#10;Definition&#10;    beforeroute($f3)&#10;&#10;Description&#10;     init the View;;d37,13;;b1,0;;mf3;;p">
</treenode>
<treenode node="index;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\controller\dashboard.php;f11;20;5;23;;;;vpos;;v;;r&#10;Definition&#10;    index()&#10;&#10;Description&#10;     Home / frontend controller;;d28,20;;b1,0;;m">
</treenode>
<treenode node="main;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\controller\dashboard0.php;f11;20;5;22;;;;vpos;;v;;r&#10;Definition&#10;    main($f3)&#10;&#10;Description&#10;     fetch data for an overview page;;d30,20;;b1,0;;mf3;;p">
</treenode>
</treenode>
<treenode node="Database;PHP:Class Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Database.php;f0;31;1;296;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Database.php;f0;31;1;296;;;;vpos;;v;;r&#10;Definition&#10;    class Database&#10;&#10;Description&#10;     DataTables Database connection object.;;d15,31;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Database.php;f1;50;2;54;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Database.php;f1;50;2;54;;;;vpos;;v;;r&#10;Definition&#10;    __construct( $opts )&#10;&#10;Description&#10;     Database instance constructor.&#10;&#10;Parameters:&#10;    string[] $opts - Array of connection parameters for the database:;;d1,51;;b0,0;;mstring[] $opts;;p">
</treenode>
<treenode node="commit;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Database.php;f8;77;2;81;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Database.php;f8;77;2;81;;;;vpos;;vself;;r&#10;Definition&#10;    commit ()&#10;&#10;Description&#10;     Commit a database transaction.;;d1,78;;b1,0;;m">
</treenode>
<treenode node="delete;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Database.php;f8;94;2;100;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Database.php;f8;94;2;100;;;;vpos;;vResult;;r&#10;Definition&#10;    delete ( $table, $where=null )&#10;&#10;Description&#10;     Perform a delete query on a table.&#10;&#10;Parameters:&#10;    string|string[] $table - Table name(s) to act upon&#10;    array $where - Where condition for what to delete - see {;;d1,95;;b1,0;;mstring|string[] $table;;parray $where;;p">
</treenode>
<treenode node="insert;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Database.php;f8;113;2;119;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Database.php;f8;113;2;119;;;;vpos;;vResult;;r&#10;Definition&#10;    insert ( $table, $set )&#10;&#10;Description&#10;     Insert data into a table.&#10;&#10;Parameters:&#10;    string|string[] $table - Table name(s) to act upon&#10;    array $set - Field names and values to set - see {;;d1,114;;b1,0;;mstring|string[] $table;;parray $set;;p">
</treenode>
<treenode node="push;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Database.php;f8;132;2;145;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Database.php;f8;132;2;145;;;;vpos;;vResult;;r&#10;Definition&#10;    push ( $table, $set, $where=null )&#10;&#10;Description&#10;     Update or Insert data. When doing an insert, the where condition is added as a set field&#10;&#10;Parameters:&#10;    string|string[] $table - Table name(s) to act upon&#10;    array $set - Field names and values to set - see {&#10;    array $where - Where condition for what to delete - see {;;d1,133;;b1,0;;mstring|string[] $table;;parray $set;;parray $where;;p">
</treenode>
<treenode node="query;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Database.php;f8;154;2;157;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Database.php;f8;154;2;157;;;;vpos;;vQuery;;r&#10;Definition&#10;    query ( $type, $table=null )&#10;&#10;Description&#10;     Create a query object to build a database query.&#10;&#10;Parameters:&#10;    string $type - Query type - select, insert, update or delete&#10;    string|string[] $table - Table name(s) to act upon;;d1,155;;b1,0;;mstring $type;;pstring|string[] $table;;p">
</treenode>
<treenode node="quote;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Database.php;f8;166;2;169;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Database.php;f8;166;2;169;;;;vpos;;vstring;;r&#10;Definition&#10;    quote ( $val, $type=\PDO::PARAM_STR )&#10;&#10;Description&#10;     Quote a string for a quote. Note you should generally use a bind!&#10;&#10;Parameters:&#10;    string $val - Value to quote&#10;    string $type - Value type;;d1,167;;b1,0;;mstring $val;;pstring $type;;p">
</treenode>
<treenode node="rollback;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Database.php;f8;178;2;182;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Database.php;f8;178;2;182;;;;vpos;;vself;;r&#10;Definition&#10;    rollback ()&#10;&#10;Description&#10;     Rollback the database state to the start of the transaction.;;d1,179;;b1,0;;m">
</treenode>
<treenode node="select;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Database.php;f8;199;2;207;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Database.php;f8;199;2;207;;;;vpos;;vResult;;r&#10;Definition&#10;    select ( $table, $field=&quot;*&quot;, $where=null, $orderBy=null )&#10;&#10;Description&#10;     Select data from a table.&#10;&#10;Parameters:&#10;    string|string[] $table - Table name(s) to act upon&#10;    array $field - Fields to get from the table(s) - see {&#10;    array $where - Where condition for what to delete - see {&#10;    array $orderBy - Order condition - see {;;d1,200;;b1,0;;mstring|string[] $table;;parray $field;;parray $where;;parray $orderBy;;p">
</treenode>
<treenode node="selectDistinct;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Database.php;f8;224;2;233;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Database.php;f8;224;2;233;;;;vpos;;vResult;;r&#10;Definition&#10;    selectDistinct ( $table, $field=&quot;*&quot;, $where=null, $orderBy=null )&#10;&#10;Description&#10;     Select data from a table.&#10;&#10;Parameters:&#10;    string|string[] $table - Table name(s) to act upon&#10;    array $field - Fields to get from the table(s) - see {&#10;    array $where - Where condition for what to delete - see {&#10;    array $orderBy - Order condition - see {;;d1,225;;b1,0;;mstring|string[] $table;;parray $field;;parray $where;;parray $orderBy;;p">
</treenode>
<treenode node="sql;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Database.php;f8;256;2;260;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Database.php;f8;256;2;260;;;;vpos;;vResult;;r&#10;Definition&#10;    sql ( $sql )&#10;&#10;Description&#10;     Execute an raw SQL query - i.e. give the method your own SQL, rather than having the Database classes building it for you.&#10;&#10;Parameters:&#10;    string $sql - SQL string to execute (only if _type is &apos;raw&apos;);;d1,257;;b1,0;;mstring $sql;;p">
</treenode>
<treenode node="transaction;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Database.php;f8;269;2;273;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Database.php;f8;269;2;273;;;;vpos;;vself;;r&#10;Definition&#10;    transaction ()&#10;&#10;Description&#10;     Start a new database transaction.;;d1,270;;b1,0;;m">
</treenode>
<treenode node="update;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Database.php;f8;288;2;295;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Database.php;f8;288;2;295;;;;vpos;;vResult;;r&#10;Definition&#10;    update ( $table, $set=null, $where=null )&#10;&#10;Description&#10;     Update data.&#10;&#10;Parameters:&#10;    string|string[] $table - Table name(s) to act upon&#10;    array $set - Field names and values to set - see {&#10;    array $where - Where condition for what to delete - see {;;d1,289;;b1,0;;mstring|string[] $table;;parray $set;;parray $where;;p">
</treenode>
</treenode>
<treenode node="DB_Utils;PHP:Class Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f0;1302;1;1319;;;;vpos;;v;;r;;d15,1302;;b0,0;;m">
<treenode node="findQuery;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f11;1313;5;1318;;;;vpos;;vbool;;r&#10;Definition&#10;    findQuery($cmd)&#10;&#10;Description&#10;     parse command array and return backend specific query&#10;&#10;Parameters:&#10;     $cmd&#10;     $cmd - array&#10;&#10;Return:&#10;   |string;;d36,1313;;b1,0;;mcmd;;p">
</treenode>
</treenode>
<treenode node="DriverMysqlQuery;PHP:Class Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Mysql\Query.php;f0;24;1;121;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Mysql\Query.php;f0;24;1;121;;;;vpos;;vQuery;;c;;r&#10;Definition&#10;    class DriverMysqlQuery extends Query&#10;&#10;Description&#10;     MySQL driver for DataTables Database Query class;;d37,24;;b0,0;;m">
<treenode node="_exec;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Mysql\Query.php;f11;108;2;120;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Mysql\Query.php;f11;108;2;120;;;;vpos;;v;;r;;d1,109;;b2,0;;m">
</treenode>
<treenode node="_prepare;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Mysql\Query.php;f11;80;2;105;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Mysql\Query.php;f11;80;2;105;;;;vpos;;v;;r;;d1,81;;b2,0;;msql;;p">
</treenode>
<treenode node="connect;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Mysql\Query.php;f8;36;2;72;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Mysql\Query.php;f8;36;2;72;;;;vpos;;v;;r;;d1,37;;b0,5;;muser;;ppass;;phost;;pport;;pdb;;pdsn;;p">
</treenode>
</treenode>
<treenode node="DriverMysqlResult;PHP:Class Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Mysql\Result.php;f0;23;1;71;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Mysql\Result.php;f0;23;1;71;;;;vpos;;vResult;;c;;r&#10;Definition&#10;    class DriverMysqlResult extends Result&#10;&#10;Description&#10;     MySQL driver for DataTables Database Result class;;d39,23;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Mysql\Result.php;f1;28;2;32;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Mysql\Result.php;f1;28;2;32;;;;vpos;;v;;r;;d1,29;;b0,0;;mdbh;;pstmt;;p">
</treenode>
<treenode node="count;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Mysql\Result.php;f8;49;2;52;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Mysql\Result.php;f8;49;2;52;;;;vpos;;v;;r;;d1,50;;b1,0;;m">
</treenode>
<treenode node="fetch;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Mysql\Result.php;f8;55;2;58;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Mysql\Result.php;f8;55;2;58;;;;vpos;;v;;r;;d1,56;;b1,0;;m">
</treenode>
<treenode node="fetchAll;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Mysql\Result.php;f8;61;2;64;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Mysql\Result.php;f8;61;2;64;;;;vpos;;v;;r;;d1,62;;b1,0;;m">
</treenode>
<treenode node="insertId;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Mysql\Result.php;f8;67;2;70;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Mysql\Result.php;f8;67;2;70;;;;vpos;;v;;r;;d1,68;;b1,0;;m">
</treenode>
</treenode>
<treenode node="DriverOracleQuery;PHP:Class Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Oracle\Query.php;f0;25;1;132;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Oracle\Query.php;f0;25;1;132;;;;vpos;;vQuery;;c;;r&#10;Definition&#10;    class DriverOracleQuery extends Query&#10;&#10;Description&#10;     MySQL driver for DataTables Database Query class;;d38,25;;b0,0;;m">
<treenode node="_build_table;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Oracle\Query.php;f11;128;2;131;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Oracle\Query.php;f11;128;2;131;;;;vpos;;v;;r;;d1,129;;b2,0;;m">
</treenode>
<treenode node="_exec;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Oracle\Query.php;f11;112;2;124;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Oracle\Query.php;f11;112;2;124;;;;vpos;;v;;r;;d1,113;;b2,0;;m">
</treenode>
<treenode node="_prepare;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Oracle\Query.php;f11;88;2;109;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Oracle\Query.php;f11;88;2;109;;;;vpos;;v;;r;;d1,89;;b2,0;;msql;;p">
</treenode>
<treenode node="connect;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Oracle\Query.php;f8;40;2;80;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Oracle\Query.php;f8;40;2;80;;;;vpos;;v;;r;;d1,41;;b0,5;;muser;;ppass;;phost;;pport;;pdb;;pdsn;;p">
</treenode>
</treenode>
<treenode node="DriverOracleResult;PHP:Class Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Oracle\Result.php;f0;21;1;69;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Oracle\Result.php;f0;21;1;69;;;;vpos;;vResult;;c;;r&#10;Definition&#10;    class DriverOracleResult extends Result&#10;&#10;Description&#10;     MySQL driver for DataTables Database Result class;;d40,21;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Oracle\Result.php;f1;26;2;30;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Oracle\Result.php;f1;26;2;30;;;;vpos;;v;;r;;d1,27;;b0,0;;mdbh;;pstmt;;p">
</treenode>
<treenode node="count;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Oracle\Result.php;f8;47;2;50;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Oracle\Result.php;f8;47;2;50;;;;vpos;;v;;r;;d1,48;;b1,0;;m">
</treenode>
<treenode node="fetch;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Oracle\Result.php;f8;53;2;56;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Oracle\Result.php;f8;53;2;56;;;;vpos;;v;;r;;d1,54;;b1,0;;m">
</treenode>
<treenode node="fetchAll;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Oracle\Result.php;f8;59;2;62;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Oracle\Result.php;f8;59;2;62;;;;vpos;;v;;r;;d1,60;;b1,0;;m">
</treenode>
<treenode node="insertId;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Oracle\Result.php;f8;65;2;68;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Oracle\Result.php;f8;65;2;68;;;;vpos;;v;;r;;d1,66;;b1,0;;m">
</treenode>
</treenode>
<treenode node="DriverPostgresQuery;PHP:Class Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Postgres\Query.php;f0;24;1;150;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Postgres\Query.php;f0;24;1;150;;;;vpos;;vQuery;;c;;r&#10;Definition&#10;    class DriverPostgresQuery extends Query&#10;&#10;Description&#10;     Postgres driver for DataTables Database Query class;;d40,24;;b0,0;;m">
<treenode node="_exec;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Postgres\Query.php;f11;137;2;149;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Postgres\Query.php;f11;137;2;149;;;;vpos;;v;;r;;d1,138;;b2,0;;m">
</treenode>
<treenode node="_prepare;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Postgres\Query.php;f11;82;2;134;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Postgres\Query.php;f11;82;2;134;;;;vpos;;v;;r;;d1,83;;b2,0;;msql;;p">
</treenode>
<treenode node="connect;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Postgres\Query.php;f8;38;2;74;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Postgres\Query.php;f8;38;2;74;;;;vpos;;v;;r;;d1,39;;b0,5;;muser;;ppass;;phost;;pport;;pdb;;pdsn;;p">
</treenode>
</treenode>
<treenode node="DriverPostgresResult;PHP:Class Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Postgres\Result.php;f0;23;1;73;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Postgres\Result.php;f0;23;1;73;;;;vpos;;vResult;;c;;r&#10;Definition&#10;    class DriverPostgresResult extends Result&#10;&#10;Description&#10;     Postgres driver for DataTables Database Result class;;d42,23;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Postgres\Result.php;f1;28;2;32;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Postgres\Result.php;f1;28;2;32;;;;vpos;;v;;r;;d1,29;;b0,0;;mdbh;;pstmt;;p">
</treenode>
<treenode node="count;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Postgres\Result.php;f8;49;2;52;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Postgres\Result.php;f8;49;2;52;;;;vpos;;v;;r;;d1,50;;b1,0;;m">
</treenode>
<treenode node="fetch;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Postgres\Result.php;f8;55;2;58;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Postgres\Result.php;f8;55;2;58;;;;vpos;;v;;r;;d1,56;;b1,0;;m">
</treenode>
<treenode node="fetchAll;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Postgres\Result.php;f8;61;2;64;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Postgres\Result.php;f8;61;2;64;;;;vpos;;v;;r;;d1,62;;b1,0;;m">
</treenode>
<treenode node="insertId;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Postgres\Result.php;f8;67;2;72;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Postgres\Result.php;f8;67;2;72;;;;vpos;;v;;r;;d1,68;;b1,0;;m">
</treenode>
</treenode>
<treenode node="DriverSqliteQuery;PHP:Class Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Sqlite\Query.php;f0;24;1;117;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Sqlite\Query.php;f0;24;1;117;;;;vpos;;vQuery;;c;;r&#10;Definition&#10;    class DriverSqliteQuery extends Query&#10;&#10;Description&#10;     SQLite3 driver for DataTables Database Query class;;d38,24;;b0,0;;m">
<treenode node="_exec;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Sqlite\Query.php;f11;104;2;116;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Sqlite\Query.php;f11;104;2;116;;;;vpos;;v;;r;;d1,105;;b2,0;;m">
</treenode>
<treenode node="_prepare;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Sqlite\Query.php;f11;73;2;101;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Sqlite\Query.php;f11;73;2;101;;;;vpos;;v;;r;;d1,74;;b2,0;;msql;;p">
</treenode>
<treenode node="connect;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Sqlite\Query.php;f8;37;2;65;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Sqlite\Query.php;f8;37;2;65;;;;vpos;;v;;r;;d1,38;;b0,5;;muser;;ppass;;phost;;pport;;pdb;;pdsn;;p">
</treenode>
</treenode>
<treenode node="DriverSqliteResult;PHP:Class Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Sqlite\Result.php;f0;23;1;71;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Sqlite\Result.php;f0;23;1;71;;;;vpos;;vResult;;c;;r&#10;Definition&#10;    class DriverSqliteResult extends Result&#10;&#10;Description&#10;     Sqlite driver for DataTables Database Result class;;d40,23;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Sqlite\Result.php;f1;28;2;32;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Sqlite\Result.php;f1;28;2;32;;;;vpos;;v;;r;;d1,29;;b0,0;;mdbh;;pstmt;;p">
</treenode>
<treenode node="count;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Sqlite\Result.php;f8;49;2;52;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Sqlite\Result.php;f8;49;2;52;;;;vpos;;v;;r;;d1,50;;b1,0;;m">
</treenode>
<treenode node="fetch;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Sqlite\Result.php;f8;55;2;58;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Sqlite\Result.php;f8;55;2;58;;;;vpos;;v;;r;;d1,56;;b1,0;;m">
</treenode>
<treenode node="fetchAll;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Sqlite\Result.php;f8;61;2;64;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Sqlite\Result.php;f8;61;2;64;;;;vpos;;v;;r;;d1,62;;b1,0;;m">
</treenode>
<treenode node="insertId;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Sqlite\Result.php;f8;67;2;70;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Sqlite\Result.php;f8;67;2;70;;;;vpos;;v;;r;;d1,68;;b1,0;;m">
</treenode>
</treenode>
<treenode node="DriverSqlserverQuery;PHP:Class Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Sqlserver\Query.php;f0;22;1;143;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Sqlserver\Query.php;f0;22;1;143;;;;vpos;;vQuery;;c;;r&#10;Definition&#10;    class DriverSqlserverQuery extends Query&#10;&#10;Description&#10;     SQL Server driver for DataTables Database Query class;;d41,22;;b0,0;;m">
<treenode node="_build_limit;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Sqlserver\Query.php;f11;126;2;142;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Sqlserver\Query.php;f11;126;2;142;;;;vpos;;v;;r;;d1,127;;b2,0;;m">
</treenode>
<treenode node="_exec;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Sqlserver\Query.php;f11;110;2;122;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Sqlserver\Query.php;f11;110;2;122;;;;vpos;;v;;r;;d1,111;;b2,0;;m">
</treenode>
<treenode node="_prepare;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Sqlserver\Query.php;f11;79;2;107;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Sqlserver\Query.php;f11;79;2;107;;;;vpos;;v;;r;;d1,80;;b2,0;;msql;;p">
</treenode>
<treenode node="connect;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Sqlserver\Query.php;f8;35;2;71;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Sqlserver\Query.php;f8;35;2;71;;;;vpos;;v;;r;;d1,36;;b0,5;;muser;;ppass;;phost;;pport;;pdb;;pdsn;;p">
</treenode>
</treenode>
<treenode node="DriverSqlserverResult;PHP:Class Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Sqlserver\Result.php;f0;21;1;69;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Sqlserver\Result.php;f0;21;1;69;;;;vpos;;vResult;;c;;r&#10;Definition&#10;    class DriverSqlserverResult extends Result&#10;&#10;Description&#10;     SQL Server driver for DataTables Database Result class;;d43,21;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Sqlserver\Result.php;f1;26;2;30;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Sqlserver\Result.php;f1;26;2;30;;;;vpos;;v;;r;;d1,27;;b0,0;;mdbh;;pstmt;;p">
</treenode>
<treenode node="count;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Sqlserver\Result.php;f8;47;2;50;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Sqlserver\Result.php;f8;47;2;50;;;;vpos;;v;;r;;d1,48;;b1,0;;m">
</treenode>
<treenode node="fetch;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Sqlserver\Result.php;f8;53;2;56;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Sqlserver\Result.php;f8;53;2;56;;;;vpos;;v;;r;;d1,54;;b1,0;;m">
</treenode>
<treenode node="fetchAll;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Sqlserver\Result.php;f8;59;2;62;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Sqlserver\Result.php;f8;59;2;62;;;;vpos;;v;;r;;d1,60;;b1,0;;m">
</treenode>
<treenode node="insertId;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Sqlserver\Result.php;f8;65;2;68;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Driver\Sqlserver\Result.php;f8;65;2;68;;;;vpos;;v;;r;;d1,66;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Editor;PHP:Class Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f0;59;1;1237;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f0;59;1;1237;;;;vpos;;vExt;;c;;r&#10;Definition&#10;    class Editor extends Ext&#10;&#10;Description&#10;     DataTables Editor base class for creating editable tables.;;d25,59;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f1;76;2;83;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f1;76;2;83;;;;vpos;;v;;r&#10;Definition&#10;    __construct( $db=null, $table=null, $pkey=null )&#10;&#10;Description&#10;     Constructor.&#10;&#10;Parameters:&#10;    Database $db - An instance of the DataTables Database class that we can&#10;    string|array $table - The table name in the database to read and write&#10;    string $pkey - Primary key column name in the table given in the $table;;d1,77;;b0,0;;mDatabase $db;;pstring|array $table;;pstring $pkey;;p">
</treenode>
<treenode node="_alias;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f9;1184;2;1194;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f9;1184;2;1194;;;;vpos;;v;;r&#10;Definition&#10;    _alias ( $name, $type=&apos;alias&apos; )&#10;&#10;Description&#10;     Get one side or the other of an aliased SQL field name.&#10;&#10;Parameters:&#10;    string $name - SQL field&#10;    string $type - Which part to get: `alias` (default) or `orig`;;d1,1185;;b3,0;;mstring $name;;pstring $type;;p">
</treenode>
<treenode node="_fields;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f9;732;2;745;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f9;732;2;745;;;;vpos;;varray;;r&#10;Definition&#10;    _fields ( $direction )&#10;&#10;Description&#10;     Create an array of the DB fields to use for a get / set operation.&#10;&#10;Parameters:&#10;    string $direction - Direction: &apos;get&apos; or &apos;set&apos;&#10;&#10;Return:&#10;   List of fields;;d1,733;;b3,0;;mstring $direction;;p">
</treenode>
<treenode node="_find_field;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f9;944;2;958;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f9;944;2;958;;;;vpos;;vField;;r&#10;Definition&#10;    _find_field ( $name, $type )&#10;&#10;Description&#10;     Get a field instance from a known field name&#10;&#10;Parameters:&#10;    string $name - Field name&#10;&#10;Return:&#10;   Field instance;;d1,945;;b3,0;;mname;;ptype;;p">
</treenode>
<treenode node="_get;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f9;566;2;611;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f9;566;2;611;;;;vpos;;v;;r&#10;Definition&#10;    _get( $id=null, $http=null )&#10;&#10;Description&#10;     Get an array of objects from the database to be given to DataTables as a result of an sAjaxSource request, such that DataTables can display the information from the DB in the table.&#10;&#10;Parameters:&#10;    integer $id - Primary key value to get an individual row (after create or&#10;    array $http - HTTP parameters from GET or POST request (so we can service;;d1,567;;b3,0;;minteger $id;;parray $http;;p">
</treenode>
<treenode node="_get_where;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f9;925;2;934;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f9;925;2;934;;;;vpos;;v;;r&#10;Definition&#10;    _get_where ( $query )&#10;&#10;Description&#10;     Add local WHERE condition to query&#10;&#10;Parameters:&#10;    Query $query - Query instance to apply the WHERE conditions ti;;d1,926;;b3,0;;mQuery $query;;p">
</treenode>
<treenode node="_insert;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f9;618;2;638;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f9;618;2;638;;;;vpos;;v;;r&#10;Definition&#10;    _insert( )&#10;&#10;Description&#10;     Insert a new row in the database;;d1,619;;b3,0;;m">
</treenode>
<treenode node="_insert_or_update;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f9;990;2;1047;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f9;990;2;1047;;;;vpos;;vDatabase;;r&#10;Definition&#10;    _insert_or_update ( $id )&#10;&#10;Description&#10;     Insert or update a row for all main tables and left joined tables.&#10;&#10;Parameters:&#10;    int $id - ID to use to condition the update&#10;&#10;Return:&#10;   .Result Result from the query or null if no query;;d1,991;;b3,0;;mint $id;;p">
</treenode>
<treenode node="_insert_or_update_table;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f9;1064;2;1121;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f9;1064;2;1121;;;;vpos;;vDatabase;;r&#10;Definition&#10;    _insert_or_update_table ( $table, $where=null )&#10;&#10;Description&#10;     Insert or update a row in a single database table, based on the data given and the fields configured for the instance.&#10;&#10;Parameters:&#10;    string $table - Database table name to use (can include an alias)&#10;    array $where - Update condition&#10;&#10;Return:&#10;   .Result Result from the query or null if no query;;d1,1065;;b3,0;;mstring $table;;parray $where;;p">
</treenode>
<treenode node="_left_join;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f9;908;2;917;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f9;908;2;917;;;;vpos;;v;;r&#10;Definition&#10;    _left_join ( $query )&#10;&#10;Description&#10;     Add left join commands for the instance to a query.&#10;&#10;Parameters:&#10;    Query $query - Query instance to apply the joins to;;d1,909;;b3,0;;mQuery $query;;p">
</treenode>
<treenode node="_part;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f9;1206;2;1236;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f9;1206;2;1236;;;;vpos;;v;;r&#10;Definition&#10;    _part ( $name, $type=&apos;table&apos; )&#10;&#10;Description&#10;     Get part of an SQL field definition regardless of how deeply defined it is&#10;&#10;Parameters:&#10;    string $name - SQL field&#10;    string $type - Which part to get: `table` (default) or `db` or;;d1,1207;;b3,0;;mstring $name;;pstring $type;;p">
</treenode>
<treenode node="_prepJoin;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f9;1155;2;1174;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f9;1155;2;1174;;;;vpos;;v;;r&#10;Definition&#10;    _prepJoin ()&#10;&#10;Description&#10;     Check the validity of the set options if  we are doing a join, since there are some conditions for this state. Will throw an error if not valid.;;d1,1156;;b3,0;;m">
</treenode>
<treenode node="_remove;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f9;677;2;723;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f9;677;2;723;;;;vpos;;v;;r&#10;Definition&#10;    _remove( $data )&#10;&#10;Description&#10;     Delete one or more rows from the database;;d1,678;;b3,0;;mdata;;p">
</treenode>
<treenode node="_remove_table;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f1;1134;2;1145;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f1;1134;2;1145;;;;vpos;;v;;r&#10;Definition&#10;    _remove_table ( $table, $ids, $pkey=null )&#10;&#10;Description&#10;     Delete one or more rows from the database for an individual table&#10;&#10;Parameters:&#10;    string $table - Database table name to use&#10;    array $ids - Array of ids to remove&#10;    string $pkey - Database column name to match the ids on for the;;d1,1135;;b0,0;;mstring $table;;parray $ids;;pstring $pkey;;p">
</treenode>
<treenode node="_ssp_field;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f8;810;2;820;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f8;810;2;820;;;;vpos;;v;;r&#10;Definition&#10;    _ssp_field( $http, $index )&#10;&#10;Description&#10;     Convert a column index to a database field name - used for server-side processing requests.&#10;&#10;Parameters:&#10;    array $http - HTTP variables (i&#10;    int $index - Index in the DataTables&apos; submitted data;;d1,811;;b1,0;;marray $http;;pint $index;;p">
</treenode>
<treenode node="_ssp_filter;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f9;849;2;879;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f9;849;2;879;;;;vpos;;v;;r&#10;Definition&#10;    _ssp_filter ( $query, $http )&#10;&#10;Description&#10;     Add DataTables&apos; &apos;where&apos; condition to a server-side processing query. This works for both global and individual column filtering.&#10;&#10;Parameters:&#10;    Query $query - Query instance to apply the WHERE conditions to&#10;    array $http - HTTP variables (i;;d1,850;;b3,0;;mQuery $query;;parray $http;;p">
</treenode>
<treenode node="_ssp_limit;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f9;888;2;895;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f9;888;2;895;;;;vpos;;v;;r&#10;Definition&#10;    _ssp_limit ( $query, $http )&#10;&#10;Description&#10;     Add a limit / offset to a server-side processing query&#10;&#10;Parameters:&#10;    Query $query - Query instance to apply the offset / limit to&#10;    array $http - HTTP variables (i;;d1,889;;b3,0;;mQuery $query;;parray $http;;p">
</treenode>
<treenode node="_ssp_query;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f9;760;2;799;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f9;760;2;799;;;;vpos;;varray;;r&#10;Definition&#10;    _ssp_query ( $query, $http )&#10;&#10;Description&#10;     When server-side processing is being used, modify the query with // the required extra conditions&#10;&#10;Parameters:&#10;    Query $query - Query instance to apply the SSP commands to&#10;&#10;Return:&#10;   Server-side processing information array;;d1,761;;b3,0;;mquery;;phttp;;p">
</treenode>
<treenode node="_ssp_sort;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f9;829;2;839;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f9;829;2;839;;;;vpos;;v;;r&#10;Definition&#10;    _ssp_sort ( $query, $http )&#10;&#10;Description&#10;     Sorting requirements to a server-side processing query.&#10;&#10;Parameters:&#10;    Query $query - Query instance to apply sorting to&#10;    array $http - HTTP variables (i;;d1,830;;b3,0;;mQuery $query;;parray $http;;p">
</treenode>
<treenode node="_table_part;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f9;968;2;977;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f9;968;2;977;;;;vpos;;v;;r&#10;Definition&#10;    _table_part ( $name )&#10;&#10;Description&#10;     Get the table name from an SQL field name. Will throw an error if there is no table name.&#10;&#10;Parameters:&#10;    string $name - SQL field name to check;;d1,969;;b3,0;;mstring $name;;p">
</treenode>
<treenode node="_update;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f9;646;2;670;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f9;646;2;670;;;;vpos;;v;;r&#10;Definition&#10;    _update( $id )&#10;&#10;Description&#10;     Update a row in the database&#10;&#10;Parameters:&#10;    string $id - The DOM ID for the row that is being edited;;d1,647;;b3,0;;mstring $id;;p">
</treenode>
<treenode node="data;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f8;154;2;157;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f8;154;2;157;;;;vpos;;varray;;r&#10;Definition&#10;    data ()&#10;&#10;Description&#10;     Get the data constructed in this instance.&#10;&#10;Return:&#10;   Processed data array;;d1,155;;b1,0;;m">
</treenode>
<treenode node="db;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f8;167;2;170;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f8;167;2;170;;;;vpos;;vDatabase;;r&#10;Definition&#10;    db ( $_=null )&#10;&#10;Description&#10;     Get / set the DB connection instance&#10;&#10;Parameters:&#10;    Database $_ - DataTable&apos;s Database class instance to use for database&#10;&#10;Return:&#10;   |self The Database connection instance if no parameter;;d1,168;;b1,0;;mDatabase $_;;p">
</treenode>
<treenode node="field;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f8;184;2;190;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f8;184;2;190;;;;vpos;;vField;;r&#10;Definition&#10;    field ( $_=null )&#10;&#10;Description&#10;     Get / set field instances.&#10;&#10;Parameters:&#10;    Field $_ - ... Instances of the {&#10;&#10;Return:&#10;   []|self Array of fields, or self if used as a setter;;d1,185;;b1,0;;mField $_;;p">
</treenode>
<treenode node="fields;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f8;203;2;209;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f8;203;2;209;;;;vpos;;vField;;r&#10;Definition&#10;    fields ( $_=null )&#10;&#10;Description&#10;     Get / set field instances.&#10;&#10;Parameters:&#10;    Field $_ - ... Instances of the {&#10;&#10;Return:&#10;   []|self Array of fields, or self if used as a setter;;d1,204;;b1,0;;mField $_;;p">
</treenode>
<treenode node="idPrefix;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f8;224;2;227;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f8;224;2;227;;;;vpos;;vstring;;r&#10;Definition&#10;    idPrefix ( $_=null )&#10;&#10;Description&#10;     Get / set the DOM prefix.&#10;&#10;Parameters:&#10;    string $_ - Primary key&apos;s name&#10;&#10;Return:&#10;   |self Primary key value if no parameter is given, or;;d1,225;;b1,0;;mstring $_;;p">
</treenode>
<treenode node="inData;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f8;237;2;240;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f8;237;2;240;;;;vpos;;varray;;r&#10;Definition&#10;    inData ()&#10;&#10;Description&#10;     Get the data that is being processed by the Editor instance. This is only useful once the `process()` method has been called, and is available for use in validation and formatter methods.&#10;&#10;Return:&#10;   Data given to `process()`;;d1,238;;b1,0;;m">
</treenode>
<treenode node="join;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f8;258;2;264;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f8;258;2;264;;;;vpos;;vJoin;;r&#10;Definition&#10;    join ( $_=null )&#10;&#10;Description&#10;     Get / set join instances. Note that for the majority of use cases you will want to use the `leftJoin()` method. It is significantly easier to use if you are just doing a simple left join!&#10;&#10;Parameters:&#10;    Join $_ - ,&#10;&#10;Return:&#10;   []|self Array of joins, or self if used as a setter;;d1,259;;b1,0;;mJoin $_;;p">
</treenode>
<treenode node="json;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f8;277;2;284;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f8;277;2;284;;;;vpos;;vstring;;r&#10;Definition&#10;    json ( $print=true )&#10;&#10;Description&#10;     Get the JSON for the data constructed in this instance.&#10;&#10;Parameters:&#10;    boolean $print - Echo the JSON string out (true, default) or return it&#10;&#10;Return:&#10;   |self self if printing the JSON, or JSON representation of;;d1,278;;b1,0;;mboolean $print;;p">
</treenode>
<treenode node="leftJoin;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f8;342;2;352;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f8;342;2;352;;;;vpos;;vself;;r&#10;Definition&#10;    leftJoin ( $table, $field1, $operator, $field2 )&#10;&#10;Description&#10;     Add a left join condition to the Editor instance, allowing it to operate over multiple tables. Multiple `leftJoin()` calls can be made for a single Editor instance to join multiple tables.&#10;&#10;Parameters:&#10;    string $table - Table name to do a join onto&#10;    string $field1 - Field from the parent table to use as the join link&#10;    string $operator - Join condition (`=`, &apos;&lt;`, etc)&#10;    string $field2 - Field from the child table to use as the join link&#10;&#10;Return:&#10;   Self for chaining;;d1,343;;b1,0;;mstring $table;;pstring $field1;;pstring $operator;;pstring $field2;;p">
</treenode>
<treenode node="pkey;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f8;386;2;389;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f8;386;2;389;;;;vpos;;vstring;;r&#10;Definition&#10;    pkey ( $_=null )&#10;&#10;Description&#10;     Get / set the primary key.&#10;&#10;Parameters:&#10;    string $_ - Primary key&apos;s name&#10;&#10;Return:&#10;   |self Primary key value if no parameter is given, or;;d1,387;;b1,0;;mstring $_;;p">
</treenode>
<treenode node="process;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f8;397;2;457;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f8;397;2;457;;;;vpos;;vself;;r&#10;Definition&#10;    process ( $data )&#10;&#10;Description&#10;     Process a request from the Editor client-side to get / set data.&#10;&#10;Parameters:&#10;    array $data - Typically $_POST or $_GET as required by what is sent by Editor;;d1,398;;b1,0;;marray $data;;p">
</treenode>
<treenode node="table;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f8;368;2;374;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f8;368;2;374;;;;vpos;;vstring;;r&#10;Definition&#10;    table ( $_=null )&#10;&#10;Description&#10;     Get / set the table name.&#10;&#10;Parameters:&#10;    string|array $_ - ,&#10;&#10;Return:&#10;   []|self Array of tables names, or self if used as a setter;;d1,369;;b1,0;;mstring|array $_;;p">
</treenode>
<treenode node="validate;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f8;476;2;496;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f8;476;2;496;;;;vpos;;vboolean;;r&#10;Definition&#10;    validate ( &amp;$errors, $data )&#10;&#10;Description&#10;     Perform validation on a data set.&#10;&#10;Parameters:&#10;    &#10;    array $data - The format data to check&#10;&#10;Return:&#10;   `true` if the data is valid, `false` if not;;d1,477;;b1,0;;m;;parray $data;;p">
</treenode>
<treenode node="where;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f8;514;2;527;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f8;514;2;527;;;;vpos;;vstring;;r&#10;Definition&#10;    where ( $key=null, $value=null, $op=&apos;=&apos; )&#10;&#10;Description&#10;     Where condition to add to the query used to get data from the database.&#10;&#10;Parameters:&#10;    string|string[] $key - Single field name, or an array of field names&#10;    string|string[] $value - Single field value, or an array of values&#10;    string $op - Condition operator: &lt;, &gt;, = etc&#10;&#10;Return:&#10;   []|self Where condition array, or self if used as a setter;;d1,515;;b1,0;;mstring|string[] $key;;pstring|string[] $value;;pstring $op;;p">
</treenode>
<treenode node="whereSet;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f8;545;2;548;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Editor.php;f8;545;2;548;;;;vpos;;vboolean;;r&#10;Definition&#10;    whereSet ( $_=null )&#10;&#10;Description&#10;     Get / set if the WHERE conditions should be included in the create and edit actions.&#10;&#10;Parameters:&#10;    boolean $_ - Include (`true`), or not (`false`)&#10;&#10;Return:&#10;   Current value;;d1,546;;b1,0;;mboolean $_;;p">
</treenode>
</treenode>
<treenode node="ErrorRenderer;PHP:Class Name;C:\xampp\htdocs\claims-fab\app\inc\errorrenderer.php;f0;2;1;45;;;;vpos;;v;;r;;d20,2;;b0,0;;m">
<treenode node="render;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\inc\errorrenderer.php;f1;4;2;43;;;;vpos;;v;;r;;d19,4;;b0,0;;m">
</treenode>
</treenode>
<treenode node="Ext;PHP:Class Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Ext\Ext.php;f0;19;1;88;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Ext\Ext.php;f0;19;1;88;;;;vpos;;v;;r&#10;Definition&#10;    class Ext&#10;&#10;Description&#10;     Base class for DataTables classes.;;d10,19;;b0,0;;m">
<treenode node="_getSet;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Ext\Ext.php;f11;67;2;87;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Ext\Ext.php;f11;67;2;87;;;;vpos;;vself;;r&#10;Definition&#10;    _getSet( &amp;$prop, $val, $array=false )&#10;&#10;Description&#10;     Common getter / setter function for DataTables classes.&#10;&#10;Parameters:&#10;    mixed - &amp;$prop The property to set&#10;    mixed $val - The value to set - if given as null, then we assume&#10;    boolean $array - Treat the target property as an array or not&#10;&#10;Return:&#10;   |* Class instance if setting (allowing chaining), or;;d1,68;;b2,0;;mmixed;;pmixed $val;;pboolean $array;;p">
</treenode>
<treenode node="inst;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Ext\Ext.php;f15;46;2;50;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Ext\Ext.php;f15;46;2;50;;;;vpos;;vInstantiated;;r&#10;Definition&#10;    inst ()&#10;&#10;Description&#10;     Static method to instantiate a new instance of a class (shorthand of &apos;instantiate&apos;).&#10;&#10;Return:&#10;   class;;d1,47;;b1,5;;m">
</treenode>
<treenode node="instantiate;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Ext\Ext.php;f15;31;2;35;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Ext\Ext.php;f15;31;2;35;;;;vpos;;vInstantiated;;r&#10;Definition&#10;    instantiate ()&#10;&#10;Description&#10;     Static method to instantiate a new instance of a class.&#10;&#10;Return:&#10;   class;;d1,32;;b1,5;;m">
</treenode>
</treenode>
<treenode node="F3;PHP:Class Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\f3.php;f0;23;1;41;;;;vpos;;v;;r;;d9,23;;b0,0;;m">
<treenode node="__callstatic;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\f3.php;f8;35;2;39;;;;vpos;;vmixed;;r&#10;Definition&#10;    __callstatic($func,array $args)&#10;&#10;Description&#10;     Forward function calls to framework&#10;&#10;Parameters:&#10;     $func - callback&#10;     $args - array;;d49,35;;b0,5;;m $func;;p $args;;p">
</treenode>
</treenode>
<treenode node="Field;PHP:Class Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Field.php;f0;63;1;620;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Field.php;f0;63;1;620;;;;vpos;;vExt;;c;;r&#10;Definition&#10;    class Field extends DataTables\Ext&#10;&#10;Description&#10;     Field definitions for the DataTables Editor.;;d35,63;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Field.php;f1;75;2;87;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Field.php;f1;75;2;87;;;;vpos;;v;;r&#10;Definition&#10;    __construct( $dbField=null, $name=null )&#10;&#10;Description&#10;     Field instance constructor.&#10;&#10;Parameters:&#10;    string $dbField - Name of the database column&#10;    string $name - Name to use in the JSON output from Editor and the;;d1,76;;b0,0;;mstring $dbField;;pstring $name;;p">
</treenode>
<treenode node="_inData;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Field.php;f9;597;2;619;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Field.php;f9;597;2;619;;;;vpos;;vboolean;;r&#10;Definition&#10;    _inData ( $name, $data )&#10;&#10;Description&#10;     Check is a parameter is in the submitted data set. This is functionally the same as the `_readProp()` method, but in this case a binary value is required to indicate if the value is present or not.&#10;&#10;Parameters:&#10;    string $name - Javascript dotted object name to write to&#10;    array $out - Data source array to read from&#10;&#10;Return:&#10;   `true` if present, `false` otherwise;;d1,598;;b3,0;;mstring $name;;parray $out;;p">
</treenode>
<treenode node="_readProp;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Field.php;f9;557;2;584;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Field.php;f9;557;2;584;;;;vpos;;v;;r&#10;Definition&#10;    _readProp ( $name, $data )&#10;&#10;Description&#10;     Read a value from a data structure, using Javascript dotted object notation. This is the inverse of the `_writeProp` method and provides the same support, matching DataTables&apos; ability to read nested JSON data objects.&#10;&#10;Parameters:&#10;    string $name - Javascript dotted object name to write to&#10;    array $out - Data source array to read from;;d1,558;;b3,0;;mstring $name;;parray $out;;p">
</treenode>
<treenode node="_writeProp;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Field.php;f9;508;2;543;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Field.php;f9;508;2;543;;;;vpos;;v;;r&#10;Definition&#10;    _writeProp( &amp;$out, $name, $value )&#10;&#10;Description&#10;     Write the field&apos;s value to an array structure, using Javascript dotted object notation to indicate JSON data structure. For example `name.first` gives the data structure: `name: { first: ... }`. This matches DataTables own ability to do this on the client-side, although this doesn&apos;t implement implement quite such a complex structure (no array / function support).&#10;&#10;Parameters:&#10;    array - &amp;$out   Array to write the data to&#10;    string $name - Javascript dotted object name to write to&#10;    ;;d1,509;;b3,0;;marray;;pstring $name;;p;;p">
</treenode>
<treenode node="apply;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Field.php;f8;315;2;339;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Field.php;f8;315;2;339;;;;vpos;;vboolean;;r&#10;Definition&#10;    apply ( $direction, $data=null )&#10;&#10;Description&#10;     Check to see if a field should be used for a particular action (get or set).&#10;&#10;Parameters:&#10;    string $direction - Direction that the data is travelling  - &apos;get&apos; is&#10;    array $data - Data submitted from the client-side when setting&#10;&#10;Return:&#10;   true if the field should be used in the get / set;;d1,316;;b1,0;;mstring $direction;;parray $data;;p">
</treenode>
<treenode node="dbField;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Field.php;f8;150;2;166;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Field.php;f8;150;2;166;;;;vpos;;vstring;;r&#10;Definition&#10;    dbField ( $_=null )&#10;&#10;Description&#10;     Get / set the DB field name.&#10;&#10;Parameters:&#10;    string $_ - Value to set if using as a setter&#10;&#10;Return:&#10;   |self The name of the db field if no parameter is given,;;d1,151;;b1,0;;mstring $_;;p">
</treenode>
<treenode node="get;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Field.php;f8;178;2;181;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Field.php;f8;178;2;181;;;;vpos;;vboolean;;r&#10;Definition&#10;    get ( $_=null )&#10;&#10;Description&#10;     Get / set the &apos;get&apos; property of the field.&#10;&#10;Parameters:&#10;    boolean $_ - Value to set if using as a setter&#10;&#10;Return:&#10;   |self The get property if no parameter is given, or self;;d1,179;;b1,0;;mboolean $_;;p">
</treenode>
<treenode node="getFormatter;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Field.php;f8;204;2;210;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Field.php;f8;204;2;210;;;;vpos;;vfunction;;r&#10;Definition&#10;    getFormatter ( $_=null, $opts=null )&#10;&#10;Description&#10;     Get formatter for the field&apos;s data.&#10;&#10;Parameters:&#10;    function|string $_ - Value to set if using as a setter&#10;    mixed $opts - Variable that is passed through to the get formatting&#10;&#10;Return:&#10;   |string|self The get formatter if no parameter is given, or;;d1,205;;b1,0;;mfunction|string $_;;pmixed $opts;;p">
</treenode>
<treenode node="name;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Field.php;f8;224;2;227;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Field.php;f8;224;2;227;;;;vpos;;vstring;;r&#10;Definition&#10;    name ( $_=null )&#10;&#10;Description&#10;     Get / set the &apos;name&apos; property of the field.&#10;&#10;Parameters:&#10;    string $_ - Value to set if using as a setter&#10;&#10;Return:&#10;   |self The name property if no parameter is given, or self;;d1,225;;b1,0;;mstring $_;;p">
</treenode>
<treenode node="set;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Field.php;f8;239;2;242;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Field.php;f8;239;2;242;;;;vpos;;vboolean;;r&#10;Definition&#10;    set ( $_=null )&#10;&#10;Description&#10;     Get / set the &apos;set&apos; property of the field.&#10;&#10;Parameters:&#10;    boolean $_ - Value to set if using as a setter&#10;&#10;Return:&#10;   |self The set property if no parameter is given, or self;;d1,240;;b1,0;;mboolean $_;;p">
</treenode>
<treenode node="setFormatter;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Field.php;f8;264;2;270;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Field.php;f8;264;2;270;;;;vpos;;vfunction;;r&#10;Definition&#10;    setFormatter ( $_=null, $opts=null )&#10;&#10;Description&#10;     Set formatter for the field&apos;s data.&#10;&#10;Parameters:&#10;    function|string $_ - Value to set if using as a setter&#10;    mixed $opts - Variable that is passed through to the get formatting&#10;&#10;Return:&#10;   |string|self The set formatter if no parameter is given, or;;d1,265;;b1,0;;mfunction|string $_;;pmixed $opts;;p">
</treenode>
<treenode node="val;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Field.php;f8;356;2;434;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Field.php;f8;356;2;434;;;;vpos;;vstring;;r&#10;Definition&#10;    val ( $direction, $data )&#10;&#10;Description&#10;     Get the value of the field, taking into account if it is coming from the DB or from a POST. If formatting has been specified for this field, it will be applied here.&#10;&#10;Parameters:&#10;    string $direction - Direction that the data is travelling  - &apos;get&apos; is&#10;    array $data - Data submitted from the client-side when setting or the&#10;&#10;Return:&#10;   Value for the field;;d1,357;;b1,0;;mstring $direction;;parray $data;;p">
</treenode>
<treenode node="validate;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Field.php;f8;455;2;484;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Field.php;f8;455;2;484;;;;vpos;;vboolean;;r&#10;Definition&#10;    validate ( $data, $editor )&#10;&#10;Description&#10;     Check the validity of the field based on the data submitted. Note that this validation is performed on the wire data - i.e. that which is submitted, before any setFormatter is run&#10;&#10;Parameters:&#10;    array $data - Data submitted from the client-side&#10;    Editor $editor - Editor instance&#10;&#10;Return:&#10;   Indicate if a field is valid or not;;d1,456;;b1,0;;marray $data;;pEditor $editor;;p">
</treenode>
<treenode node="validator;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Field.php;f8;290;2;296;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Field.php;f8;290;2;296;;;;vpos;;vfunction;;r&#10;Definition&#10;    validator ( $_=null, $opts=null )&#10;&#10;Description&#10;     Get / set the &apos;validator&apos; of the field.&#10;&#10;Parameters:&#10;    function|string $_ - Value to set if using as the validation method&#10;    mixed $opts - Variable that is passed through to the validation&#10;&#10;Return:&#10;   |string|self The validation method if no parameter is given,;;d1,291;;b1,0;;mfunction|string $_;;pmixed $opts;;p">
</treenode>
<treenode node="write;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Field.php;f8;436;2;439;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Field.php;f8;436;2;439;;;;vpos;;v;;r;;d1,437;;b1,0;;mout;;pdata;;p">
</treenode>
</treenode>
<treenode node="Files;PHP:Class Name;C:\xampp\htdocs\claims-fab\app\inc\files.php;f0;2;1;14;;;;vpos;;vPrefab;;c;;r;;d28,2;;b0,0;;m">
<treenode node="upload;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\inc\files.php;f1;4;2;13;;;;vpos;;v;;r;;d30,4;;b0,0;;mf3;;pparams;;p">
</treenode>
</treenode>
<treenode node="Flash;PHP:Class Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-flash\lib\flash.php;f0;18;1;104;;;;vpos;;vPrefab;;c;;r&#10;Definition&#10;    class Flash extends \Prefab&#10;&#10;Description&#10;     Flash - A Flash Messages Plugin for the PHP Fat-Free Framework;;d28,18;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-flash\lib\flash.php;f8;33;2;37;;;;vpos;;v;;r&#10;Definition&#10;    __construct($key=&apos;flash&apos;)&#10;&#10;Description&#10;     Flash constructor.&#10;&#10;Parameters:&#10;    string $key;;d43,33;;b1,0;;mstring $key;;p">
</treenode>
<treenode node="addMessage;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-flash\lib\flash.php;f8;44;2;46;;;;vpos;;v;;r&#10;Definition&#10;    addMessage($text,$status=&apos;info&apos;)&#10;&#10;Description&#10;     add a message to the stack&#10;&#10;Parameters:&#10;     $text&#10;    string $status;;d50,44;;b1,0;;m $text;;pstring $status;;p">
</treenode>
<treenode node="clearMessages;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-flash\lib\flash.php;f8;61;2;63;;;;vpos;;v;;r&#10;Definition&#10;    clearMessages()&#10;&#10;Description&#10;     reset message stack;;d33,61;;b1,0;;m">
</treenode>
<treenode node="getKey;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-flash\lib\flash.php;f8;87;2;94;;;;vpos;;vmixed;;r&#10;Definition&#10;    getKey($key)&#10;&#10;Description&#10;     get and clear a flash key, if it&apos;s existing&#10;&#10;Parameters:&#10;     $key&#10;&#10;Return:&#10;   |null;;d30,87;;b1,0;;m $key;;p">
</treenode>
<treenode node="getMessages;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-flash\lib\flash.php;f8;52;2;56;;;;vpos;;varray;;r&#10;Definition&#10;    getMessages()&#10;&#10;Description&#10;     dump all messages and clear them;;d31,52;;b1,0;;m">
</treenode>
<treenode node="hasKey;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-flash\lib\flash.php;f8;101;2;103;;;;vpos;;vbool;;r&#10;Definition&#10;    hasKey($key)&#10;&#10;Description&#10;     check if there&apos;s a flash key existing&#10;&#10;Parameters:&#10;     $key;;d30,101;;b1,0;;m $key;;p">
</treenode>
<treenode node="hasMessages;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-flash\lib\flash.php;f8;69;2;71;;;;vpos;;vbool;;r&#10;Definition&#10;    hasMessages()&#10;&#10;Description&#10;     check if there messages in the stack;;d31,69;;b1,0;;m">
</treenode>
<treenode node="setKey;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-flash\lib\flash.php;f8;78;2;80;;;;vpos;;v;;r&#10;Definition&#10;    setKey($key,$val=TRUE)&#10;&#10;Description&#10;     set a flash key&#10;&#10;Parameters:&#10;     $key&#10;    bool $val;;d40,78;;b1,0;;m $key;;pbool $val;;p">
</treenode>
</treenode>
<treenode node="FooForms;PHP:Class Name;C:\xampp\htdocs\claims-fab\app\inc\template\fooforms.php;f0;19;1;27;;;;vpos;;v;;r&#10;Definition&#10;    class FooForms&#10;&#10;Description&#10;     FooForms - a collection of Form related HTML-Tag handlers;;d15,19;;b0,0;;m">
<treenode node="init;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\inc\template\fooforms.php;f15;21;2;25;;;;vpos;;v;;r;;d31,21;;b1,5;;m">
</treenode>
</treenode>
<treenode node="Forgot;PHP:Class Name;C:\xampp\htdocs\claims-fab\app\view\forgot.php;f0;4;1;38;;;;vpos;;vBase;;c;;r;;d26,4;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\view\forgot.php;f8;9;2;24;;;;vpos;;v;;r;;d31,9;;b1,0;;m">
</treenode>
<treenode node="render;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\view\forgot.php;f8;30;2;36;;;;vpos;;v;;r;;d26,30;;b1,0;;m">
</treenode>
<treenode node="setTemplate;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\view\forgot.php;f8;26;2;28;;;;vpos;;v;;r;;d40,26;;b1,0;;mfilepath;;p">
</treenode>
</treenode>
<treenode node="Format;PHP:Class Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Format.php;f0;21;1;169;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Format.php;f0;21;1;169;;;;vpos;;v;;r&#10;Definition&#10;    class Format&#10;&#10;Description&#10;     Formatter methods for the DataTables Editor;;d13,21;;b0,0;;m">
<treenode node="DATE_EPOCH;PHP:PHP Word;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Format.php;f6;44;17;44;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Format.php;f6;44;17;44;;;;vpos;;v;;r&quot;U&quot;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="DATE_ISO_1036;PHP:PHP Word;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Format.php;f6;32;20;32;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Format.php;f6;32;20;32;;;;vpos;;v;;r&quot;D, j M y&quot;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="DATE_ISO_1123;PHP:PHP Word;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Format.php;f6;35;20;35;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Format.php;f6;35;20;35;;;;vpos;;v;;r&quot;D, j M Y&quot;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="DATE_ISO_2822;PHP:PHP Word;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Format.php;f6;38;20;38;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Format.php;f6;38;20;38;;;;vpos;;v;;r&quot;D, j M Y&quot;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="DATE_ISO_822;PHP:PHP Word;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Format.php;f6;26;19;26;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Format.php;f6;26;19;26;;;;vpos;;v;;r&quot;D, j M y&quot;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="DATE_ISO_850;PHP:PHP Word;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Format.php;f6;29;19;29;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Format.php;f6;29;19;29;;;;vpos;;v;;r&quot;l, d-M-y&quot;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="DATE_ISO_8601;PHP:PHP Word;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Format.php;f6;23;20;23;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Format.php;f6;23;20;23;;;;vpos;;v;;r&quot;Y-m-d&quot;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="DATE_TIMESTAMP;PHP:PHP Word;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Format.php;f6;41;21;41;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Format.php;f6;41;21;41;;;;vpos;;v;;r&quot;U&quot;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="date_format_to_sql;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Format.php;f15;84;2;95;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Format.php;f15;84;2;95;;;;vpos;;vstring;;r&#10;Definition&#10;    date_format_to_sql( $val, $data, $opts )&#10;&#10;Description&#10;     Convert from from a format given by the options parameter to a format that SQL servers will recognise as a date.&#10;&#10;Parameters:&#10;    string $val - Value to convert to MySQL date format&#10;    string[] $data - Data for the whole row / submitted data&#10;    string $opts - Format to convert from using PHP date() options&#10;&#10;Return:&#10;   Formatted date or null on error;;d65,84;;b1,5;;mstring $val;;pstring[] $data;;pstring $opts;;p">
</treenode>
<treenode node="date_sql_to_format;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Format.php;f15;60;2;68;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Format.php;f15;60;2;68;;;;vpos;;vstring;;r&#10;Definition&#10;    date_sql_to_format( $val, $data, $opts )&#10;&#10;Description&#10;     Convert from SQL date / date time format to a format given by the options parameter.&#10;&#10;Parameters:&#10;    string $val - Value to convert from MySQL date format&#10;    string[] $data - Data for the whole row / submitted data&#10;    string $opts - Format to convert to using PHP date() options&#10;&#10;Return:&#10;   Formatted date or empty string on error;;d65,60;;b1,5;;mstring $val;;pstring[] $data;;pstring $opts;;p">
</treenode>
<treenode node="datetime;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Format.php;f15;111;2;119;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Format.php;f15;111;2;119;;;;vpos;;vstring;;r&#10;Definition&#10;    datetime( $val, $data, $opts )&#10;&#10;Description&#10;     Convert from one date time format to another&#10;&#10;Parameters:&#10;    string $val - Value to convert from MySQL date format&#10;    string[] $data - Data for the whole row / submitted data&#10;    string $opts - Array with `from` and `to` properties which are the&#10;&#10;Return:&#10;   Formatted date or empty string on error;;d55,111;;b1,5;;mstring $val;;pstring[] $data;;pstring $opts;;p">
</treenode>
<treenode node="explode;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Format.php;f15;145;2;150;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Format.php;f15;145;2;150;;;;vpos;;vstring;;r&#10;Definition&#10;    explode( $val, $data, $opts )&#10;&#10;Description&#10;     Convert a string of values into an array for use with checkboxes.&#10;&#10;Parameters:&#10;    string $val - Value to convert to from a string to an array&#10;    string[] $data - Data for the whole row / submitted data&#10;    string $opts - Field delimiter&#10;&#10;Return:&#10;   Formatted date or null on error;;d54,145;;b1,5;;mstring $val;;pstring[] $data;;pstring $opts;;p">
</treenode>
<treenode node="implode;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Format.php;f15;130;2;135;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Format.php;f15;130;2;135;;;;vpos;;vstring;;r&#10;Definition&#10;    implode( $val, $data, $opts )&#10;&#10;Description&#10;     Convert an array of values from a checkbox into a string which can be used to store in a text field in a database.&#10;&#10;Parameters:&#10;    string $val - Value to convert to from an array to a string&#10;    string[] $data - Data for the whole row / submitted data&#10;    string $opts - Field delimiter&#10;&#10;Return:&#10;   Formatted date or null on error;;d54,130;;b1,5;;mstring $val;;pstring[] $data;;pstring $opts;;p">
</treenode>
<treenode node="nullEmpty;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Format.php;f15;163;2;168;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Format.php;f15;163;2;168;;;;vpos;;vstring;;r&#10;Definition&#10;    nullEmpty ( $val, $data, $opts )&#10;&#10;Description&#10;     Convert an empty string to `null`. Null values are very useful in databases, but HTTP variables have no way of representing `null` as a value, often leading to an empty string and null overlapping. This method will check the value to operate on and return null if it is empty.&#10;&#10;Parameters:&#10;    string $val - Value to convert to from a string to an array&#10;    string[] $data - Data for the whole row / submitted data&#10;    string $opts - Field delimiter&#10;&#10;Return:&#10;   Formatted date or null on error;;d57,163;;b1,5;;mstring $val;;pstring[] $data;;pstring $opts;;p">
</treenode>
</treenode>
<treenode node="Front;PHP:Class Name;C:\xampp\htdocs\claims-fab\app\view\front.php;f0;4;1;38;;;;vpos;;vBase;;c;;r;;d25,4;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\view\front.php;f8;9;2;24;;;;vpos;;v;;r;;d31,9;;b1,0;;m">
</treenode>
<treenode node="render;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\view\front.php;f8;30;2;36;;;;vpos;;v;;r;;d26,30;;b1,0;;m">
</treenode>
<treenode node="setTemplate;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\view\front.php;f8;26;2;28;;;;vpos;;v;;r;;d40,26;;b1,0;;mfilepath;;p">
</treenode>
</treenode>
<treenode node="Frontend;PHP:Class Name;C:\xampp\htdocs\claims-fab\app\view\frontend.php;f0;4;1;20;;;;vpos;;vBase;;c;;r;;d28,4;;b0,0;;m">
<treenode node="render;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\view\frontend.php;f11;12;5;18;;;;vpos;;v;;r;;d29,12;;b1,0;;m">
</treenode>
<treenode node="setTemplate;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\view\frontend.php;f8;8;2;10;;;;vpos;;v;;r;;d40,8;;b1,0;;mfilepath;;p">
</treenode>
</treenode>
<treenode node="Geo;PHP:Class Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\web\geo.php;f0;25;1;107;;;;vpos;;vPrefab;;c;;r;;d26,25;;b0,0;;m">
<treenode node="location;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\web\geo.php;f1;53;2;82;;;;vpos;;varray;;r&#10;Definition&#10;    location($ip=NULL)&#10;&#10;Description&#10;     Return geolocation data based on specified/auto-detected IP address&#10;&#10;Parameters:&#10;     $ip - string&#10;&#10;Return:&#10;   |FALSE;;d29,53;;b0,0;;m $ip;;p">
</treenode>
<treenode node="tzinfo;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\web\geo.php;f1;32;2;46;;;;vpos;;varray;;r&#10;Definition&#10;    tzinfo($zone)&#10;&#10;Description&#10;     Return information about specified Unix time zone&#10;&#10;Parameters:&#10;     $zone - string;;d24,32;;b0,0;;m $zone;;p">
</treenode>
<treenode node="weather;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\web\geo.php;f1;91;2;105;;;;vpos;;varray;;r&#10;Definition&#10;    weather($latitude,$longitude,$key)&#10;&#10;Description&#10;     Return weather data based on specified latitude/longitude&#10;&#10;Parameters:&#10;     $latitude - float&#10;     $longitude - float&#10;     $key - string&#10;&#10;Return:&#10;   |FALSE;;d45,91;;b0,0;;m $latitude;;p $longitude;;p $key;;p">
</treenode>
</treenode>
<treenode node="Home;PHP:Class Name;C:\xampp\htdocs\claims-fab\app\controller\home.php;f0;5;1;26;;;;vpos;;vBase;;c;;r;;d24,5;;b0,0;;m">
<treenode node="beforeroute;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\controller\home.php;f11;13;5;15;;;;vpos;;v;;r&#10;Definition&#10;    beforeroute($f3)&#10;&#10;Description&#10;     init the View;;d37,13;;b1,0;;mf3;;p">
</treenode>
<treenode node="index;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\controller\home.php;f11;20;5;23;;;;vpos;;v;;r&#10;Definition&#10;    index()&#10;&#10;Description&#10;     Home / frontend controller;;d28,20;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Image;PHP:Class Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\image.php;f0;23;1;615;;C:\xampp\htdocs\claims-fab\app\inc\template\tags\image.php;f0;19;1;100;;;;vpos;;v;;r;;d12,23;;b0,0;;m">
<treenode node="E_Color;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\image.php;f0;27;9;27;;;;vpos;;v;;r$this-&gt;height());;d-1,-1;;b0,0;;m">
<treenode node="E_File;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\image.php;f0;28;8;28;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="data;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\image.php;f21;135;25;135;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="data;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\image.php;f21;136;25;136;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="IMG_FILTER_COLORIZE;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\image.php;f26;136;45;136;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
<treenode node="IMG_FILTER_GRAYSCALE;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\image.php;f26;135;46;135;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="IMG_FILTER_PIXELATE;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\image.php;f26;146;45;146;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
<treenode node="E_Font;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\image.php;f0;29;8;29;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="data;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\image.php;f21;117;25;117;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="IMG_FILTER_SMOOTH;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\image.php;f26;117;43;117;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
<treenode node="E_TTF;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\image.php;f0;30;7;30;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="data;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\image.php;f21;98;25;98;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="IMG_FILTER_CONTRAST;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\image.php;f26;98;45;98;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
<treenode node="E_Length;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\image.php;f0;31;10;31;;;;vpos;;v;;r&apos;Invalid CAPTCHA length: %s&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="IMG_FILTER_GRAYSCALE;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\image.php;f26;107;46;107;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="POS_Left;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\image.php;f0;36;10;36;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="data;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\image.php;f21;78;25;78;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="IMG_FILTER_NEGATE;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\image.php;f26;78;43;78;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
<treenode node="IMG_FILTER_BRIGHTNESS;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\image.php;f26;88;47;88;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="POS_Center;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\image.php;f0;37;12;37;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="POS_Right;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\image.php;f0;38;11;38;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="POS_Top;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\image.php;f0;39;9;39;;;;vpos;;v;;rhexdec($color);;d-1,-1;;b0,0;;m">
<treenode node="POS_Middle;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\image.php;f0;40;12;40;;;;vpos;;v;;r0;;d-1,-1;;b0,0;;m">
<treenode node="POS_Bottom;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\image.php;f0;41;12;41;;;;vpos;;v;;r32;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
</treenode>
<treenode node="self;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\image.php;f22;64;26;64;;;;vpos;;v;;rhexdec(str_repeat($hue,6/$len));;d-1,-1;;b0,0;;m">
<treenode node="E_Color;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\image.php;f28;64;35;64;;;;vpos;;v;;rstr_split($hex,$len/3);;d-1,-1;;b0,0;;m">
<treenode node="E_USER_ERROR;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\image.php;f47;64;59;64;;;;vpos;;v;;rstrlen($hex))&gt;6)&#10;			user_error(sprintf(self::E_Color,&apos;0x&apos;.$hex),E_USER_ERROR);;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
</treenode>
<treenode node="STR_PAD_LEFT;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\image.php;f55;62;67;62;;;;vpos;;v;;rdechex($color),$color&lt;4096?3:6,&apos;0&apos;,STR_PAD_LEFT);;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
<treenode node="IMG_FILTER_EMBOSS;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\image.php;f26;126;43;126;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
<treenode node="IMG_FILTER_MEAN_REMOVAL;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\image.php;f26;166;49;166;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="IMG_FILTER_SELECTIVE_BLUR;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\image.php;f14;157;39;157;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="IMG_FILTER_GAUSSIAN_BLUR;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\image.php;f40;157;64;157;;;;vpos;;v;;rFALSE) {&#10;		imagefilter($this-&gt;data,&#10;			$selective?IMG_FILTER_SELECTIVE_BLUR:IMG_FILTER_GAUSSIAN_BLUR);;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
</treenode>
</treenode>
<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\image.php;f1;584;2;597;;C:\xampp\htdocs\claims-fab\app\inc\template\tags\image.php;f1;21;2;27;;;;vpos;;v;;r&#10;Definition&#10;    __construct($file=NULL,$flag=FALSE,$path=NULL)&#10;&#10;Description&#10;     Instantiate image&#10;&#10;Parameters:&#10;     $file - string&#10;     $flag - bool&#10;     $path - string;;d57,584;;b0,0;;m $file;;p $flag;;p $path;;p">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\image.php;f1;603;2;613;;;;vpos;;vNULL;;r&#10;Definition&#10;    __destruct()&#10;&#10;Description&#10;     Wrap-up;;d23,603;;b0,0;;m">
</treenode>
<treenode node="build;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\inc\template\tags\image.php;f1;35;2;61;;;;vpos;;vstring;;r&#10;Definition&#10;    build($attr, $content)&#10;&#10;Description&#10;     build tag string&#10;&#10;Parameters:&#10;     $attr&#10;     $content;;d33,35;;b0,0;;m $attr;;p $content;;p">
</treenode>
<treenode node="captcha;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\image.php;f1;400;2;455;;;;vpos;;vobject;;r&#10;Definition&#10;    captcha($font,$size=24,$len=5,&#10;		$key=NULL,$path=&apos;&apos;,$fg=0xFFFFFF,$bg=0x000000)&#10;&#10;Description&#10;     Generate CAPTCHA image&#10;&#10;Parameters:&#10;     $font - string&#10;     $size - int&#10;     $len - int&#10;     $key - string&#10;     $path - string&#10;     $fg - int&#10;     $bg - int&#10;&#10;Return:&#10;   |FALSE;;d48,401;;b0,0;;m $font;;p $size;;p $len;;p $key;;p $path;;p $fg;;p $bg;;p">
</treenode>
<treenode node="crop;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\image.php;f1;210;2;219;;;;vpos;;vobject;;r&#10;Definition&#10;    crop($x1,$y1,$x2,$y2)&#10;&#10;Description&#10;     Crop the image&#10;&#10;Parameters:&#10;     $x1 - int&#10;     $y1 - int&#10;     $x2 - int&#10;     $y2 - int;;d32,210;;b0,0;;m $x1;;p $y1;;p $x2;;p $y2;;p">
</treenode>
<treenode node="data;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\image.php;f1;509;2;511;;;;vpos;;vresource;;r&#10;Definition&#10;    data()&#10;&#10;Description&#10;     Return image resource;;d17,509;;b0,0;;m">
</treenode>
<treenode node="dump;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\image.php;f1;494;2;503;;;;vpos;;vstring;;r&#10;Definition&#10;    dump()&#10;&#10;Description&#10;     Return image as a string;;d17,494;;b0,0;;m">
</treenode>
<treenode node="height;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\image.php;f1;469;2;471;;;;vpos;;vint;;r&#10;Definition&#10;    height()&#10;&#10;Description&#10;     Return image height;;d19,469;;b0,0;;m">
</treenode>
<treenode node="identicon;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\image.php;f1;343;2;387;;;;vpos;;vobject;;r&#10;Definition&#10;    identicon($str,$size=64,$blocks=4)&#10;&#10;Description&#10;     Generate identicon&#10;&#10;Parameters:&#10;     $str - string&#10;     $size - int&#10;     $blocks - int;;d45,343;;b0,0;;m $str;;p $size;;p $blocks;;p">
</treenode>
<treenode node="load;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\image.php;f1;570;2;576;;;;vpos;;vobject;;r&#10;Definition&#10;    load($str)&#10;&#10;Description&#10;     Load string&#10;&#10;Parameters:&#10;     $str - string&#10;&#10;Return:&#10;   |FALSE;;d21,570;;b0,0;;m $str;;p">
</treenode>
<treenode node="overlay;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\image.php;f1;295;2;334;;;;vpos;;vobject;;r&#10;Definition&#10;    overlay(Image $img,$align=NULL,$alpha=100)&#10;&#10;Description&#10;     Apply an image overlay&#10;&#10;Parameters:&#10;     $img - object&#10;     $align - int|array&#10;     $alpha - int;;d53,295;;b0,0;;m $img;;p $align;;p $alpha;;p">
</treenode>
<treenode node="render;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\image.php;f1;477;2;488;;;;vpos;;vNULL;;r&#10;Definition&#10;    render()&#10;&#10;Description&#10;     Send image to HTTP client;;d19,477;;b0,0;;m">
</treenode>
<treenode node="resize;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\image.php;f1;230;2;274;;C:\xampp\htdocs\claims-fab\app\inc\template\tags\image.php;f1;69;2;99;;;;vpos;;vobject;;r&#10;Definition&#10;    resize($width=NULL,$height=NULL,$crop=TRUE,$enlarge=TRUE)&#10;&#10;Description&#10;     Resize image (Maintain aspect ratio);s Crop relative to center if flag is enabled;s Enlargement allowed if flag is enabled&#10;&#10;Parameters:&#10;     $width - int&#10;     $height - int&#10;     $crop - bool&#10;     $enlarge - bool;;d68,230;;b0,0;;m $width;;p $height;;p $crop;;p $enlarge;;p">
</treenode>
<treenode node="restore;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\image.php;f1;535;2;550;;;;vpos;;vobject;;r&#10;Definition&#10;    restore($state=1)&#10;&#10;Description&#10;     Revert to specified state&#10;&#10;Parameters:&#10;     $state - int;;d28,535;;b0,0;;m $state;;p">
</treenode>
<treenode node="rotate;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\image.php;f1;281;2;286;;;;vpos;;vobject;;r&#10;Definition&#10;    rotate($angle)&#10;&#10;Description&#10;     Rotate image&#10;&#10;Parameters:&#10;     $angle - int;;d25,281;;b0,0;;m $angle;;p">
</treenode>
<treenode node="save;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\image.php;f1;517;2;528;;;;vpos;;vobject;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Save current state;;d17,517;;b0,0;;m">
</treenode>
<treenode node="undo;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\image.php;f1;556;2;563;;;;vpos;;vobject;;r&#10;Definition&#10;    undo()&#10;&#10;Description&#10;     Undo most recently applied filter;;d17,556;;b0,0;;m">
</treenode>
<treenode node="vflip;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\image.php;f1;190;2;200;;;;vpos;;vobject;;r&#10;Definition&#10;    vflip()&#10;&#10;Description&#10;     Flip on vertical axis;;d18,190;;b0,0;;m">
</treenode>
<treenode node="width;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\image.php;f1;461;2;463;;;;vpos;;vint;;r&#10;Definition&#10;    width()&#10;&#10;Description&#10;     Return image width;;d18,461;;b0,0;;m">
</treenode>
</treenode>
<treenode node="Input;PHP:Class Name;C:\xampp\htdocs\claims-fab\app\inc\template\tags\input.php;f0;19;1;71;;;;vpos;;vTagHandler;;c;;r&#10;Definition&#10;    class Input extends \Template\TagHandler&#10;&#10;Description&#10;     Input TagHandler;;d41,19;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\inc\template\tags\input.php;f1;21;2;27;;;;vpos;;v;;r;;d24,21;;b0,0;;m">
</treenode>
<treenode node="build;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\inc\template\tags\input.php;f1;35;2;70;;;;vpos;;vstring;;r&#10;Definition&#10;    build($attr, $content)&#10;&#10;Description&#10;     build tag string&#10;&#10;Parameters:&#10;     $attr&#10;     $content;;d33,35;;b0,0;;m $attr;;p $content;;p">
</treenode>
</treenode>
<treenode node="ISO;PHP:Class Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3037;9;3037;;;;vpos;;vPrefab;;c;;r;;d25,3037;;b0,0;;m">
<treenode node="CC_af;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3041;7;3041;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_ax;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3042;7;3042;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_al;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3043;7;3043;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_dz;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3044;7;3044;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_as;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3045;7;3045;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_ad;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3046;7;3046;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_ao;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3047;7;3047;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_ai;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3048;7;3048;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_aq;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3049;7;3049;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_ag;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3050;7;3050;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_ar;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3051;7;3051;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_am;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3052;7;3052;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_aw;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3053;7;3053;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_au;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3054;7;3054;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_at;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3055;7;3055;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_az;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3056;7;3056;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_bs;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3057;7;3057;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_bh;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3058;7;3058;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_bd;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3059;7;3059;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_bb;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3060;7;3060;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_by;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3061;7;3061;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_be;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3062;7;3062;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_bz;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3063;7;3063;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_bj;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3064;7;3064;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_bm;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3065;7;3065;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_bt;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3066;7;3066;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_bo;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3067;7;3067;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_bq;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3068;7;3068;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_ba;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3069;7;3069;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_bw;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3070;7;3070;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_bv;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3071;7;3071;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_br;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3072;7;3072;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_io;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3073;7;3073;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_bn;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3074;7;3074;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_bg;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3075;7;3075;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_bf;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3076;7;3076;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_bi;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3077;7;3077;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_kh;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3078;7;3078;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_cm;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3079;7;3079;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_ca;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3080;7;3080;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_cv;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3081;7;3081;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_ky;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3082;7;3082;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_cf;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3083;7;3083;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_td;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3084;7;3084;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_cl;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3085;7;3085;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_cn;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3086;7;3086;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_cx;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3087;7;3087;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_cc;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3088;7;3088;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_co;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3089;7;3089;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_km;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3090;7;3090;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_cg;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3091;7;3091;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_cd;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3092;7;3092;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_ck;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3093;7;3093;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_cr;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3094;7;3094;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_ci;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3095;7;3095;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_hr;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3096;7;3096;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_cu;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3097;7;3097;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_cw;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3098;7;3098;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_cy;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3099;7;3099;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_cz;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3100;7;3100;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_dk;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3101;7;3101;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_dj;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3102;7;3102;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_dm;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3103;7;3103;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_do;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3104;7;3104;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_ec;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3105;7;3105;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_eg;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3106;7;3106;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_sv;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3107;7;3107;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_gq;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3108;7;3108;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_er;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3109;7;3109;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_ee;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3110;7;3110;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_et;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3111;7;3111;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_fk;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3112;7;3112;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_fo;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3113;7;3113;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_fj;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3114;7;3114;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_fi;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3115;7;3115;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_fr;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3116;7;3116;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_gf;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3117;7;3117;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_pf;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3118;7;3118;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_tf;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3119;7;3119;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_ga;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3120;7;3120;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_gm;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3121;7;3121;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_ge;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3122;7;3122;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_de;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3123;7;3123;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_gh;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3124;7;3124;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_gi;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3125;7;3125;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_gr;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3126;7;3126;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_gl;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3127;7;3127;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_gd;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3128;7;3128;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_gp;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3129;7;3129;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_gu;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3130;7;3130;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_gt;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3131;7;3131;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_gg;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3132;7;3132;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_gn;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3133;7;3133;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_gw;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3134;7;3134;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_gy;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3135;7;3135;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_ht;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3136;7;3136;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_hm;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3137;7;3137;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_va;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3138;7;3138;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_hn;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3139;7;3139;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_hk;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3140;7;3140;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_hu;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3141;7;3141;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_is;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3142;7;3142;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_in;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3143;7;3143;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_id;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3144;7;3144;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_ir;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3145;7;3145;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_iq;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3146;7;3146;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_ie;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3147;7;3147;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_im;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3148;7;3148;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_il;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3149;7;3149;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_it;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3150;7;3150;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_jm;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3151;7;3151;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_jp;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3152;7;3152;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_je;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3153;7;3153;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_jo;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3154;7;3154;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_kz;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3155;7;3155;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_ke;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3156;7;3156;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_ki;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3157;7;3157;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_kp;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3158;7;3158;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_kr;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3159;7;3159;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_kw;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3160;7;3160;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_kg;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3161;7;3161;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_la;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3162;7;3162;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_lv;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3163;7;3163;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_lb;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3164;7;3164;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_ls;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3165;7;3165;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_lr;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3166;7;3166;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_ly;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3167;7;3167;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_li;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3168;7;3168;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_lt;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3169;7;3169;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_lu;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3170;7;3170;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_mo;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3171;7;3171;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_mk;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3172;7;3172;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_mg;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3173;7;3173;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_mw;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3174;7;3174;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_my;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3175;7;3175;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_mv;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3176;7;3176;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_ml;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3177;7;3177;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_mt;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3178;7;3178;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_mh;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3179;7;3179;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_mq;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3180;7;3180;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_mr;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3181;7;3181;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_mu;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3182;7;3182;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_yt;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3183;7;3183;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_mx;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3184;7;3184;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_fm;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3185;7;3185;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_md;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3186;7;3186;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_mc;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3187;7;3187;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_mn;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3188;7;3188;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_me;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3189;7;3189;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_ms;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3190;7;3190;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_ma;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3191;7;3191;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_mz;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3192;7;3192;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_mm;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3193;7;3193;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_na;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3194;7;3194;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_nr;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3195;7;3195;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_np;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3196;7;3196;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_nl;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3197;7;3197;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_nc;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3198;7;3198;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_nz;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3199;7;3199;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_ni;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3200;7;3200;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_ne;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3201;7;3201;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_ng;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3202;7;3202;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_nu;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3203;7;3203;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_nf;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3204;7;3204;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_mp;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3205;7;3205;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_no;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3206;7;3206;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_om;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3207;7;3207;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_pk;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3208;7;3208;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_pw;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3209;7;3209;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_ps;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3210;7;3210;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_pa;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3211;7;3211;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_pg;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3212;7;3212;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_py;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3213;7;3213;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_pe;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3214;7;3214;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_ph;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3215;7;3215;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_pn;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3216;7;3216;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_pl;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3217;7;3217;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_pt;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3218;7;3218;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_pr;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3219;7;3219;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_qa;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3220;7;3220;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_re;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3221;7;3221;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_ro;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3222;7;3222;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_ru;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3223;7;3223;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_rw;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3224;7;3224;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_bl;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3225;7;3225;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_sh;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3226;7;3226;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_kn;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3227;7;3227;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_lc;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3228;7;3228;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_mf;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3229;7;3229;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_pm;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3230;7;3230;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_vc;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3231;7;3231;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_ws;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3232;7;3232;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_sm;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3233;7;3233;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_st;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3234;7;3234;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_sa;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3235;7;3235;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_sn;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3236;7;3236;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_rs;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3237;7;3237;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_sc;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3238;7;3238;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_sl;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3239;7;3239;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_sg;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3240;7;3240;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_sk;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3241;7;3241;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_sx;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3242;7;3242;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_si;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3243;7;3243;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_sb;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3244;7;3244;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_so;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3245;7;3245;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_za;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3246;7;3246;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_gs;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3247;7;3247;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_ss;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3248;7;3248;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_es;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3249;7;3249;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_lk;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3250;7;3250;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_sd;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3251;7;3251;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_sr;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3252;7;3252;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_sj;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3253;7;3253;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_sz;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3254;7;3254;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_se;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3255;7;3255;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_ch;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3256;7;3256;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_sy;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3257;7;3257;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_tw;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3258;7;3258;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_tj;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3259;7;3259;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_tz;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3260;7;3260;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_th;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3261;7;3261;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_tl;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3262;7;3262;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_tg;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3263;7;3263;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_tk;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3264;7;3264;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_to;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3265;7;3265;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_tt;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3266;7;3266;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_tn;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3267;7;3267;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_tr;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3268;7;3268;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_tm;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3269;7;3269;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_tc;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3270;7;3270;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_tv;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3271;7;3271;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_ug;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3272;7;3272;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_ua;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3273;7;3273;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_ae;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3274;7;3274;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_gb;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3275;7;3275;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_us;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3276;7;3276;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_um;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3277;7;3277;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_uy;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3278;7;3278;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_uz;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3279;7;3279;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_vu;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3280;7;3280;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_ve;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3281;7;3281;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_vn;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3282;7;3282;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_vg;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3283;7;3283;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_vi;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3284;7;3284;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_wf;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3285;7;3285;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_eh;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3286;7;3286;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_ye;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3287;7;3287;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_zm;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3288;7;3288;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="CC_zw;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3289;7;3289;;;;vpos;;v;;r&apos;Zimbabwe&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="LC_af;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3294;7;3294;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_am;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3295;7;3295;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_ar;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3296;7;3296;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_as;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3297;7;3297;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_ba;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3298;7;3298;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_be;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3299;7;3299;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_bg;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3300;7;3300;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_bn;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3301;7;3301;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_bo;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3302;7;3302;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_br;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3303;7;3303;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_ca;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3304;7;3304;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_co;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3305;7;3305;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_cs;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3306;7;3306;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_cy;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3307;7;3307;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_da;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3308;7;3308;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_de;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3309;7;3309;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_dv;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3310;7;3310;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_el;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3311;7;3311;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_en;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3312;7;3312;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_es;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3313;7;3313;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_et;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3314;7;3314;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_eu;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3315;7;3315;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_fa;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3316;7;3316;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_fi;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3317;7;3317;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_fo;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3318;7;3318;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_fr;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3319;7;3319;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_gd;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3320;7;3320;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_gl;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3321;7;3321;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_gu;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3322;7;3322;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_he;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3323;7;3323;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_hi;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3324;7;3324;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_hr;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3325;7;3325;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_hu;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3326;7;3326;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_hy;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3327;7;3327;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_id;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3328;7;3328;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_ig;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3329;7;3329;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_is;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3330;7;3330;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_it;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3331;7;3331;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_ja;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3332;7;3332;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_ka;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3333;7;3333;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_kk;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3334;7;3334;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_km;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3335;7;3335;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_kn;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3336;7;3336;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_ko;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3337;7;3337;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_lb;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3338;7;3338;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_lo;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3339;7;3339;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_lt;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3340;7;3340;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_lv;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3341;7;3341;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_mi;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3342;7;3342;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_ml;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3343;7;3343;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_mr;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3344;7;3344;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_ms;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3345;7;3345;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_mt;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3346;7;3346;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_ne;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3347;7;3347;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_nl;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3348;7;3348;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_no;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3349;7;3349;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_oc;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3350;7;3350;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_or;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3351;7;3351;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_pl;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3352;7;3352;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_ps;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3353;7;3353;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_pt;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3354;7;3354;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_qu;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3355;7;3355;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_ro;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3356;7;3356;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_ru;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3357;7;3357;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_rw;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3358;7;3358;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_sa;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3359;7;3359;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_si;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3360;7;3360;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_sk;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3361;7;3361;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_sl;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3362;7;3362;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_sq;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3363;7;3363;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_sv;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3364;7;3364;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_ta;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3365;7;3365;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_te;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3366;7;3366;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_th;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3367;7;3367;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_tk;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3368;7;3368;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_tr;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3369;7;3369;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_tt;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3370;7;3370;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_uk;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3371;7;3371;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="Base;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f6;3452;11;3452;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="LC_ur;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3372;7;3372;;;;vpos;;v;;rNULL;;d-1,-1;;b0,0;;m">
<treenode node="LC_vi;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3373;7;3373;;;;vpos;;v;;r$obj;;d-1,-1;;b0,0;;m">
<treenode node="LC_wo;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3374;7;3374;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="LC_yo;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3375;7;3375;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="Base;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f10;3384;14;3384;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="LC_zh;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;3376;7;3376;;;;vpos;;v;;r&apos;Chinese&apos;;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
</treenode>
<treenode node="self;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f15;3410;19;3410;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
<treenode node="self;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f8;3429;13;3429;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
<treenode node="self;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f8;3439;12;3439;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
<treenode node="Jig;PHP:Class Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\jig.php;f0;25;1;174;;;;vpos;;v;;r;;d10,25;;b0,0;;m">
<treenode node="FORMAT_JSON;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\jig.php;f0;29;13;29;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="FORMAT_Serialized;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\jig.php;f0;30;19;30;;;;vpos;;v;;r1;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
<treenode node="__clone;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\jig.php;f9;147;2;148;;;;vpos;;v;;r;;d28,147;;b3,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\jig.php;f1;155;2;161;;;;vpos;;v;;r&#10;Definition&#10;    __construct($dir=NULL,$format=self::FORMAT_JSON,$lazy=FALSE)&#10;&#10;Description&#10;     Instantiate class&#10;&#10;Parameters:&#10;     $dir - string&#10;     $format - int;;d71,155;;b0,0;;mdir;;pformat;;plazy;;p">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\jig.php;f1;166;2;172;;;;vpos;;v;;r&#10;Definition&#10;    __destruct()&#10;&#10;Description&#10;     save file on destruction;;d23,166;;b0,0;;m">
</treenode>
<treenode node="dir;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\jig.php;f1;99;2;101;;;;vpos;;vstring;;r&#10;Definition&#10;    dir()&#10;&#10;Description&#10;     Return directory;;d16,99;;b0,0;;m">
</treenode>
<treenode node="drop;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\jig.php;f1;136;2;144;;;;vpos;;vNULL;;r&#10;Definition&#10;    drop()&#10;&#10;Description&#10;     Clean storage;;d17,136;;b0,0;;m">
</treenode>
<treenode node="jot;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\jig.php;f1;127;2;130;;;;vpos;;vNULL;;r&#10;Definition&#10;    jot($frame)&#10;&#10;Description&#10;     Jot down log entry&#10;&#10;Parameters:&#10;     $frame - string;;d22,127;;b0,0;;m $frame;;p">
</treenode>
<treenode node="log;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\jig.php;f1;116;2;120;;;;vpos;;vstring;;r&#10;Definition&#10;    log($flag=TRUE)&#10;&#10;Description&#10;     Return profiler results (or disable logging)&#10;&#10;Parameters:&#10;     $flag - bool;;d26,116;;b0,0;;m $flag;;p">
</treenode>
<treenode node="read;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\jig.php;f1;52;2;72;;;;vpos;;varray;;r&#10;Definition&#10;    &amp;read($file)&#10;&#10;Description&#10;     Read data from memory/file&#10;&#10;Parameters:&#10;     $file - string;;d23,52;;b0,0;;m $file;;p">
</treenode>
<treenode node="uuid;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\jig.php;f1;107;2;109;;;;vpos;;vstring;;r&#10;Definition&#10;    uuid()&#10;&#10;Description&#10;     Return UUID;;d17,107;;b0,0;;m">
</treenode>
<treenode node="write;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\jig.php;f1;80;2;93;;;;vpos;;vint;;r&#10;Definition&#10;    write($file,array $data=NULL)&#10;&#10;Description&#10;     Write data to memory/file&#10;&#10;Parameters:&#10;     $file - string&#10;     $data - array;;d40,80;;b0,0;;m $file;;p $data;;p">
</treenode>
</treenode>
<treenode node="Join;PHP:Class Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Join.php;f0;68;1;734;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Join.php;f0;68;1;734;;;;vpos;;vExt;;c;;r&#10;Definition&#10;    class Join extends DataTables\Ext&#10;&#10;Description&#10;     Join table class for DataTables Editor.;;d34,68;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Join.php;f1;79;2;83;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Join.php;f1;79;2;83;;;;vpos;;v;;r&#10;Definition&#10;    __construct( $table=null, $type=&apos;object&apos; )&#10;&#10;Description&#10;     Join instance constructor.&#10;&#10;Parameters:&#10;    string $table - Table name to get the joined data from&#10;    string $type - Work with a single result (&apos;object&apos;) or an array of;;d1,80;;b0,0;;mstring $table;;pstring $type;;p">
</treenode>
<treenode node="_fields;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Join.php;f9;715;2;733;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Join.php;f9;715;2;733;;;;vpos;;v;;r&#10;Definition&#10;    _fields ( $direction )&#10;&#10;Description&#10;     Create an SQL string from the fields that this instance knows about for using in queries&#10;&#10;Parameters:&#10;    string $direction - Direction: &apos;get&apos; or &apos;set&apos;;;d1,716;;b3,0;;mstring $direction;;p">
</treenode>
<treenode node="_insert;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Join.php;f9;619;2;654;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Join.php;f9;619;2;654;;;;vpos;;v;;r&#10;Definition&#10;    _insert( $db, $parentId, $data )&#10;&#10;Description&#10;     Create a row.&#10;&#10;Parameters:&#10;    Database $db - Database reference to use&#10;    int $parentId - Parent row&apos;s primary key value&#10;    string[] $data - Data to be set for the join;;d1,620;;b3,0;;mDatabase $db;;pint $parentId;;pstring[] $data;;p">
</treenode>
<treenode node="_update_row;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Join.php;f9;664;2;706;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Join.php;f9;664;2;706;;;;vpos;;v;;r&#10;Definition&#10;    _update_row ( $db, $parentId, $data )&#10;&#10;Description&#10;     Update a row.&#10;&#10;Parameters:&#10;    Database $db - Database reference to use&#10;    int $parentId - Parent row&apos;s primary key value&#10;    string[] $data - Data to be set for the join;;d1,665;;b3,0;;mDatabase $db;;pint $parentId;;pstring[] $data;;p">
</treenode>
<treenode node="aliasParentTable;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Join.php;f8;148;2;151;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Join.php;f8;148;2;151;;;;vpos;;vstring;;r&#10;Definition&#10;    aliasParentTable ( $_=null )&#10;&#10;Description&#10;     Get / set parent table alias.&#10;&#10;Parameters:&#10;    string $_ - Table alias to use&#10;&#10;Return:&#10;   |self Table alias set (which is null by default), or self if used as;;d1,149;;b1,0;;mstring $_;;p">
</treenode>
<treenode node="create;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Join.php;f8;527;2;541;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Join.php;f8;527;2;541;;;;vpos;;v;;r&#10;Definition&#10;    create ( $db, $parentId, $data )&#10;&#10;Description&#10;     Create a row.&#10;&#10;Parameters:&#10;    Database $db - Database reference to use&#10;    int $parentId - Parent row&apos;s primary key value&#10;    string[] $data - Data to be set for the join;;d1,528;;b1,0;;mDatabase $db;;pint $parentId;;pstring[] $data;;p">
</treenode>
<treenode node="data;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Join.php;f8;385;2;517;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Join.php;f8;385;2;517;;;;vpos;;v;;r&#10;Definition&#10;    data( $db, $dteTable, $pkey, $idPrefix, &amp;$data )&#10;&#10;Description&#10;     Get data&#10;&#10;Parameters:&#10;    Database $db - Database reference to use&#10;    array $dteTable - Host table from the Editor class, only the first is used&#10;    string $pkey - Host table primary key&#10;    string $idPrefix - DOM id prefix&#10;    string[] $data - Data from the parent table&apos;s get and were we need;;d1,386;;b1,0;;mDatabase $db;;parray $dteTable;;pstring $pkey;;pstring $idPrefix;;pstring[] $data;;p">
</treenode>
<treenode node="field;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Join.php;f8;165;2;171;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Join.php;f8;165;2;171;;;;vpos;;vField;;r&#10;Definition&#10;    field ( $_=null )&#10;&#10;Description&#10;     Get / set field instances.&#10;&#10;Parameters:&#10;    Field $_ - ... Instances of the {&#10;&#10;Return:&#10;   []|self Array of fields, or self if used as a setter;;d1,166;;b1,0;;mField $_;;p">
</treenode>
<treenode node="fields;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Join.php;f8;184;2;190;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Join.php;f8;184;2;190;;;;vpos;;vField;;r&#10;Definition&#10;    fields ( $_=null )&#10;&#10;Description&#10;     Get / set field instances.&#10;&#10;Parameters:&#10;    Field $_ - ... Instances of the {&#10;&#10;Return:&#10;   []|self Array of fields, or self if used as a setter;;d1,185;;b1,0;;mField $_;;p">
</treenode>
<treenode node="get;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Join.php;f8;200;2;203;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Join.php;f8;200;2;203;;;;vpos;;vboolean;;r&#10;Definition&#10;    get ( $_=null )&#10;&#10;Description&#10;     Get / set get attribute.&#10;&#10;Parameters:&#10;    boolean $_ - Value&#10;&#10;Return:&#10;   |self Name;;d1,201;;b1,0;;mboolean $_;;p">
</treenode>
<treenode node="join;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Join.php;f8;242;2;252;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Join.php;f8;242;2;252;;;;vpos;;v;;r&#10;Definition&#10;    join ( $parent=null, $child=null, $table=null )&#10;&#10;Description&#10;     Get / set join properties.&#10;&#10;Parameters:&#10;    string|string[] $parent - Parent table&apos;s primary key names&#10;    string|string[] $child - Child table&apos;s primary key names&#10;    ;;d1,243;;b1,0;;mstring|string[] $parent;;pstring|string[] $child;;p;;p">
</treenode>
<treenode node="name;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Join.php;f8;265;2;268;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Join.php;f8;265;2;268;;;;vpos;;vString;;r&#10;Definition&#10;    name ( $_=null )&#10;&#10;Description&#10;     Get / set name.&#10;&#10;Parameters:&#10;    string $_ - Field name&#10;&#10;Return:&#10;   |self Name;;d1,266;;b1,0;;mstring $_;;p">
</treenode>
<treenode node="remove;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Join.php;f8;577;2;604;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Join.php;f8;577;2;604;;;;vpos;;v;;r&#10;Definition&#10;    remove ( $db, $ids )&#10;&#10;Description&#10;     Delete rows&#10;&#10;Parameters:&#10;    Database $db - Database reference to use&#10;    int[] $ids - Parent row IDs to delete;;d1,578;;b1,0;;mDatabase $db;;pint[] $ids;;p">
</treenode>
<treenode node="set;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Join.php;f8;280;2;283;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Join.php;f8;280;2;283;;;;vpos;;vboolean;;r&#10;Definition&#10;    set ( $_=null )&#10;&#10;Description&#10;     Get / set set attribute.&#10;&#10;Parameters:&#10;    boolean $_ - Value&#10;&#10;Return:&#10;   |self Name;;d1,281;;b1,0;;mboolean $_;;p">
</treenode>
<treenode node="table;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Join.php;f8;296;2;302;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Join.php;f8;296;2;302;;;;vpos;;vString;;r&#10;Definition&#10;    table ( $_=null )&#10;&#10;Description&#10;     Get / set join table name.&#10;&#10;Parameters:&#10;    string $_ - Name of the table to read the join data from&#10;&#10;Return:&#10;   |self Name of the join table, or self if used as a setter;;d1,297;;b1,0;;mstring $_;;p">
</treenode>
<treenode node="type;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Join.php;f8;316;2;319;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Join.php;f8;316;2;319;;;;vpos;;vString;;r&#10;Definition&#10;    type ( $_=null )&#10;&#10;Description&#10;     Get / set the join type.&#10;&#10;Parameters:&#10;    string $_ - Join type (&apos;object&apos;) or an array of&#10;&#10;Return:&#10;   |self Join type, or self if used as a setter;;d1,317;;b1,0;;mstring $_;;p">
</treenode>
<treenode node="update;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Join.php;f8;551;2;568;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Join.php;f8;551;2;568;;;;vpos;;v;;r&#10;Definition&#10;    update ( $db, $parentId, $data )&#10;&#10;Description&#10;     Update a row.&#10;&#10;Parameters:&#10;    Database $db - Database reference to use&#10;    int $parentId - Parent row&apos;s primary key value&#10;    string[] $data - Data to be set for the join;;d1,552;;b1,0;;mDatabase $db;;pint $parentId;;pstring[] $data;;p">
</treenode>
<treenode node="where;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Join.php;f8;335;2;348;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Join.php;f8;335;2;348;;;;vpos;;vstring;;r&#10;Definition&#10;    where ( $key=null, $value=null, $op=&apos;=&apos; )&#10;&#10;Description&#10;     Where condition to add to the query used to get data from the database. Note that this is applied to the child table.&#10;&#10;Parameters:&#10;    string|string[] $key - Single field name, or an array of field names&#10;    string|string[] $value - Single field value, or an array of values&#10;    string $op - Condition operator: &lt;, &gt;, = etc&#10;&#10;Return:&#10;   []|self Where condition array, or self if used as a setter;;d1,336;;b1,0;;mstring|string[] $key;;pstring|string[] $value;;pstring $op;;p">
</treenode>
<treenode node="whereSet;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Join.php;f8;364;2;367;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Join.php;f8;364;2;367;;;;vpos;;vboolean;;r&#10;Definition&#10;    whereSet ( $_=null )&#10;&#10;Description&#10;     Get / set if the WHERE conditions should be included in the create and edit actions.&#10;&#10;Parameters:&#10;    boolean $_ - Include (`true`), or not (`false`)&#10;&#10;Return:&#10;   Current value;;d1,365;;b1,0;;mboolean $_;;p">
</treenode>
</treenode>
<treenode node="JSON;PHP:Class Name;C:\xampp\htdocs\claims-fab\app\view\json.php;f0;4;1;11;;;;vpos;;vBase;;c;;r;;d24,4;;b0,0;;m">
<treenode node="render;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\view\json.php;f8;6;2;9;;;;vpos;;v;;r;;d26,6;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Log;PHP:Class Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\log.php;f0;23;1;66;;;;vpos;;v;;r;;d10,23;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\log.php;f1;59;2;64;;;;vpos;;v;;r&#10;Definition&#10;    __construct($file)&#10;&#10;Description&#10;     Instantiate class&#10;&#10;Parameters:&#10;     $file - string;;d29,59;;b0,0;;m $file;;p">
</treenode>
<treenode node="erase;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\log.php;f1;51;2;53;;;;vpos;;vNULL;;r&#10;Definition&#10;    erase()&#10;&#10;Description&#10;     Erase log;;d18,51;;b0,0;;m">
</treenode>
<treenode node="write;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\log.php;f1;35;2;45;;;;vpos;;vstring;;r&#10;Definition&#10;    write($text,$format=&apos;r&apos;)&#10;&#10;Description&#10;     Write specified text to log file&#10;&#10;Parameters:&#10;     $text - string&#10;     $format - string;;d35,35;;b0,0;;m $text;;p $format;;p">
</treenode>
</treenode>
<treenode node="Login;PHP:Class Name;C:\xampp\htdocs\claims-fab\app\view\login.php;f0;4;1;38;;;;vpos;;vBase;;c;;r;;d25,4;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\view\login.php;f8;9;2;24;;;;vpos;;v;;r;;d31,9;;b1,0;;m">
</treenode>
<treenode node="render;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\view\login.php;f8;30;2;36;;;;vpos;;v;;r;;d26,30;;b1,0;;m">
</treenode>
<treenode node="setTemplate;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\view\login.php;f8;26;2;28;;;;vpos;;v;;r;;d40,26;;b1,0;;mfilepath;;p">
</treenode>
</treenode>
<treenode node="Magic;PHP:Class Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\magic.php;f9;23;1;138;;;;vpos;;vArrayAccess;;c;;r;;d44,23;;b0,0;;m">
<treenode node="__get;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\magic.php;f1;124;2;127;;;;vpos;;vmixed;;r&#10;Definition&#10;    &amp;__get($key)&#10;&#10;Description&#10;     Alias for offsetget()&#10;&#10;Parameters:&#10;     $key - string;;d23,124;;b0,0;;m $key;;p">
</treenode>
<treenode node="__isset;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\magic.php;f1;105;2;107;;;;vpos;;vmixed;;r&#10;Definition&#10;    __isset($key)&#10;&#10;Description&#10;     Alias for offsetexists()&#10;&#10;Parameters:&#10;     $key - string;;d24,105;;b0,0;;m $key;;p">
</treenode>
<treenode node="__set;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\magic.php;f1;115;2;117;;;;vpos;;vmixed;;r&#10;Definition&#10;    __set($key,$val)&#10;&#10;Description&#10;     Alias for offsetset()&#10;&#10;Parameters:&#10;     $key - string&#10;     $val - scalar;;d27,115;;b0,0;;m $key;;p $val;;p">
</treenode>
<treenode node="__unset;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\magic.php;f1;134;2;136;;;;vpos;;vNULL;;r&#10;Definition&#10;    __unset($key)&#10;&#10;Description&#10;     Alias for offsetunset()&#10;&#10;Parameters:&#10;     $key - string;;d24,134;;b0,0;;m $key;;p">
</treenode>
<treenode node="clear;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\magic.php;f10;52;30;52;;;;vpos;;vNULL;;r&#10;Description&#10;     Unset key&#10;&#10;Parameters:&#10;     $key - string;;d-1,-1;;b0,0;;m $key;;p">
</treenode>
<treenode node="exists;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\magic.php;f10;30;31;30;;;;vpos;;vbool;;r&#10;Description&#10;     Return TRUE if key is not empty&#10;&#10;Parameters:&#10;     $key - string;;d-1,-1;;b0,0;;m $key;;p">
</treenode>
<treenode node="get;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\magic.php;f10;45;29;45;;;;vpos;;vmixed;;r&#10;Description&#10;     Retrieve contents of key&#10;&#10;Parameters:&#10;     $key - string;;d-1,-1;;b0,0;;m $key;;p">
</treenode>
<treenode node="offsetexists;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\magic.php;f1;59;2;62;;;;vpos;;vmixed;;r&#10;Definition&#10;    offsetexists($key)&#10;&#10;Description&#10;     Convenience method for checking property value&#10;&#10;Parameters:&#10;     $key - string;;d29,59;;b0,0;;m $key;;p">
</treenode>
<treenode node="offsetget;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\magic.php;f1;80;2;86;;;;vpos;;vmixed;;r&#10;Definition&#10;    &amp;offsetget($key)&#10;&#10;Description&#10;     Convenience method for retrieving property value&#10;&#10;Parameters:&#10;     $key - string;;d27,80;;b0,0;;m $key;;p">
</treenode>
<treenode node="offsetset;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\magic.php;f1;70;2;73;;;;vpos;;vmixed;;r&#10;Definition&#10;    offsetset($key,$val)&#10;&#10;Description&#10;     Convenience method for assigning property value&#10;&#10;Parameters:&#10;     $key - string&#10;     $val - scalar;;d31,70;;b0,0;;m $key;;p $val;;p">
</treenode>
<treenode node="offsetunset;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\magic.php;f1;93;2;98;;;;vpos;;vNULL;;r&#10;Definition&#10;    offsetunset($key)&#10;&#10;Description&#10;     Convenience method for removing property value&#10;&#10;Parameters:&#10;     $key - string;;d28,93;;b0,0;;m $key;;p">
</treenode>
<treenode node="set;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\magic.php;f10;38;33;38;;;;vpos;;vmixed;;r&#10;Description&#10;     Bind value to key&#10;&#10;Parameters:&#10;     $key - string&#10;     $val - mixed;;d-1,-1;;b0,0;;m $key;;p $val;;p">
</treenode>
</treenode>
<treenode node="ManufacturerModel;PHP:Class Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\test\productsmodel.php;f0;20;1;33;;;;vpos;;vCortex;;c;;r;;d43,20;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\test\productsmodel.php;f11;28;5;31;;;;vpos;;v;;r;;d34,28;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Mapper;PHP:Class Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\sql\mapper.php;f0;25;1;671;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\mongo\mapper.php;f0;25;1;398;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\jig\mapper.php;f0;25;1;537;;;;vpos;;vCursor;;c;;r;;d32,25;;b0,0;;m">
<treenode node="__call;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\sql\mapper.php;f1;145;2;151;;;;vpos;;vmixed;;r&#10;Definition&#10;    __call($func,$args)&#10;&#10;Description&#10;     Invoke dynamic method&#10;&#10;Parameters:&#10;     $func - string&#10;     $args - array;;d30,145;;b0,0;;m $func;;p $args;;p">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\sql\mapper.php;f1;660;2;669;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\mongo\mapper.php;f1;390;2;396;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\jig\mapper.php;f1;531;2;535;;;;vpos;;v;;r&#10;Definition&#10;    __construct(\DB\SQL $db,$table,$fields=NULL,$ttl=60)&#10;&#10;Description&#10;     Instantiate class&#10;&#10;Parameters:&#10;     $db - \DB\SQL&#10;     $table - string&#10;     $fields - array|string&#10;     $ttl - int|array;;d63,660;;b0,0;;m $db;;p $table;;p $fields;;p $ttl;;p">
</treenode>
<treenode node="cast;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\sql\mapper.php;f1;184;2;193;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\mongo\mapper.php;f1;109;2;113;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\jig\mapper.php;f1;112;2;116;;;;vpos;;varray;;r&#10;Definition&#10;    cast($obj=NULL)&#10;&#10;Description&#10;     Return fields of mapper object as an associative array&#10;&#10;Parameters:&#10;     $obj - object;;d26,184;;b0,0;;m $obj;;p">
</treenode>
<treenode node="changed;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\sql\mapper.php;f1;66;2;73;;;;vpos;;vbool;;r&#10;Definition&#10;    changed($key=NULL)&#10;&#10;Description&#10;     Return TRUE if any/specified field value has changed&#10;&#10;Parameters:&#10;     $key - string;;d29,66;;b0,0;;m $key;;p">
</treenode>
<treenode node="clear;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\sql\mapper.php;f1;132;2;137;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\mongo\mapper.php;f1;84;2;86;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\jig\mapper.php;f1;84;2;87;;;;vpos;;vNULL;;r&#10;Definition&#10;    clear($key)&#10;&#10;Description&#10;     Clear value of field&#10;&#10;Parameters:&#10;     $key - string;;d22,132;;b0,0;;m $key;;p">
</treenode>
<treenode node="copyfrom;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\sql\mapper.php;f1;594;2;602;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\mongo\mapper.php;f1;339;2;346;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\jig\mapper.php;f1;489;2;496;;;;vpos;;vNULL;;r&#10;Definition&#10;    copyfrom($var,$func=NULL)&#10;&#10;Description&#10;     Hydrate mapper object using hive array variable&#10;&#10;Parameters:&#10;     $var - array|string&#10;     $func - callback;;d36,594;;b0,0;;m $var;;p $func;;p">
</treenode>
<treenode node="copyto;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\sql\mapper.php;f1;609;2;613;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\mongo\mapper.php;f1;353;2;357;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\jig\mapper.php;f1;503;2;507;;;;vpos;;vNULL;;r&#10;Definition&#10;    copyto($key)&#10;&#10;Description&#10;     Populate hive array variable with mapper fields&#10;&#10;Parameters:&#10;     $key - string;;d23,609;;b0,0;;m $key;;p">
</treenode>
<treenode node="count;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\sql\mapper.php;f1;346;2;358;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\mongo\mapper.php;f1;217;2;229;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\jig\mapper.php;f1;351;2;357;;;;vpos;;vint;;r&#10;Definition&#10;    count($filter=NULL,array $options=NULL,$ttl=0)&#10;&#10;Description&#10;     Count records that match criteria&#10;&#10;Parameters:&#10;     $filter - string|array&#10;     $options - array&#10;     $ttl - int|array;;d57,346;;b0,0;;m $filter;;p $options;;p $ttl;;p">
</treenode>
<treenode node="cursor;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\mongo\mapper.php;f1;371;2;373;;;;vpos;;vobject;;r&#10;Definition&#10;    cursor()&#10;&#10;Description&#10;     Return the cursor from last query&#10;&#10;Return:&#10;   |NULL;;d19,371;;b0,0;;m">
</treenode>
<treenode node="dbtype;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\sql\mapper.php;f1;49;2;51;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\mongo\mapper.php;f1;45;2;47;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\jig\mapper.php;f1;43;2;45;;;;vpos;;vstring;;r&#10;Definition&#10;    dbtype()&#10;&#10;Description&#10;     Return database type;;d19,49;;b0,0;;m">
</treenode>
<treenode node="erase;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\sql\mapper.php;f1;514;2;566;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\mongo\mapper.php;f1;297;2;322;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\jig\mapper.php;f1;431;2;471;;;;vpos;;vint;;r&#10;Definition&#10;    erase($filter=NULL,$quick=TRUE)&#10;&#10;Description&#10;     Delete current record&#10;&#10;Parameters:&#10;     $quick - bool&#10;     $filter - string|array;;d42,514;;b0,0;;m $quick;;p $filter;;p">
</treenode>
<treenode node="exists;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\sql\mapper.php;f1;80;2;82;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\mongo\mapper.php;f1;54;2;56;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\jig\mapper.php;f1;52;2;54;;;;vpos;;vbool;;r&#10;Definition&#10;    exists($key)&#10;&#10;Description&#10;     Return TRUE if field is defined&#10;&#10;Parameters:&#10;     $key - string;;d23,80;;b0,0;;m $key;;p">
</treenode>
<treenode node="factory;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\sql\mapper.php;f11;158;2;177;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\mongo\mapper.php;f11;93;2;102;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\jig\mapper.php;f11;95;2;105;;;;vpos;;vstatic;;r&#10;Definition&#10;    factory($row)&#10;&#10;Description&#10;     Convert array to mapper object&#10;&#10;Parameters:&#10;     $row - array;;d34,158;;b2,0;;m $row;;p">
</treenode>
<treenode node="fields;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\sql\mapper.php;f1;631;2;633;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\mongo\mapper.php;f1;363;2;365;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\jig\mapper.php;f1;513;2;515;;;;vpos;;varray;;r&#10;Definition&#10;    fields($adhoc=TRUE)&#10;&#10;Description&#10;     Return field names&#10;&#10;Parameters:&#10;     $adhoc - bool;;d30,631;;b0,0;;m $adhoc;;p">
</treenode>
<treenode node="find;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\sql\mapper.php;f1;320;2;337;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\mongo\mapper.php;f1;198;2;208;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\jig\mapper.php;f1;158;2;300;;;;vpos;;vstatic;;r&#10;Definition&#10;    find($filter=NULL,array $options=NULL,$ttl=0)&#10;&#10;Description&#10;     Return records that match criteria&#10;&#10;Parameters:&#10;     $filter - string|array&#10;     $options - array&#10;     $ttl - int|array&#10;&#10;Return:&#10;   [];;d56,320;;b0,0;;m $filter;;p $options;;p $ttl;;p">
</treenode>
<treenode node="get;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\sql\mapper.php;f1;115;2;125;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\mongo\mapper.php;f1;73;2;77;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\jig\mapper.php;f1;71;2;77;;;;vpos;;vscalar;;r&#10;Definition&#10;    &amp;get($key)&#10;&#10;Description&#10;     Retrieve value of field&#10;&#10;Parameters:&#10;     $key - string;;d21,115;;b0,0;;m $key;;p">
</treenode>
<treenode node="getiterator;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\sql\mapper.php;f1;649;2;651;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\mongo\mapper.php;f1;379;2;381;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\jig\mapper.php;f1;521;2;523;;;;vpos;;vobject;;r&#10;Definition&#10;    getiterator()&#10;&#10;Description&#10;     Retrieve external iterator for fields;;d24,649;;b0,0;;m">
</treenode>
<treenode node="insert;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\sql\mapper.php;f1;390;2;462;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\mongo\mapper.php;f1;248;2;268;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\jig\mapper.php;f1;377;2;401;;;;vpos;;vstatic;;r&#10;Definition&#10;    insert()&#10;&#10;Description&#10;     Insert new record;;d19,390;;b0,0;;m">
</treenode>
<treenode node="reduce;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\jig\mapper.php;f1;340;2;342;;;;vpos;;v;;r&#10;Definition&#10;    reduce($key,$handler,$finalize=null)&#10;&#10;Description&#10;     Add reduce handler for grouped fields&#10;&#10;Parameters:&#10;     $key - string&#10;     $handler - callback&#10;     $finalize - callback;;d46,340;;b0,0;;m $key;;p $handler;;p $finalize;;p">
</treenode>
<treenode node="required;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\sql\mapper.php;f1;640;2;643;;;;vpos;;vbool;;r&#10;Definition&#10;    required($field)&#10;&#10;Description&#10;     Return TRUE if field is not nullable&#10;&#10;Parameters:&#10;     $field - string;;d27,640;;b0,0;;m $field;;p">
</treenode>
<treenode node="reset;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\sql\mapper.php;f1;572;2;586;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\mongo\mapper.php;f1;328;2;331;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\jig\mapper.php;f1;477;2;481;;;;vpos;;vNULL;;r&#10;Definition&#10;    reset()&#10;&#10;Description&#10;     Reset cursor;;d18,572;;b0,0;;m">
</treenode>
<treenode node="schema;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\sql\mapper.php;f1;620;2;624;;;;vpos;;varray;;r&#10;Definition&#10;    schema($fields=null)&#10;&#10;Description&#10;     Return schema and, if the first argument is provided, update it&#10;&#10;Parameters:&#10;     $fields - NULL|array;;d31,620;;b0,0;;m $fields;;p">
</treenode>
<treenode node="select;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\sql\mapper.php;f1;294;2;311;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\mongo\mapper.php;f1;123;2;189;;;;vpos;;vstatic;;r&#10;Definition&#10;    select($fields,$filter=NULL,array $options=NULL,$ttl=0)&#10;&#10;Description&#10;     Build query string and execute&#10;&#10;Parameters:&#10;     $fields - string&#10;     $filter - string|array&#10;     $options - array&#10;     $ttl - int|array&#10;&#10;Return:&#10;   [];;d66,294;;b0,0;;m $fields;;p $filter;;p $options;;p $ttl;;p">
</treenode>
<treenode node="set;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\sql\mapper.php;f1;90;2;108;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\mongo\mapper.php;f1;64;2;66;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\jig\mapper.php;f1;62;2;64;;;;vpos;;vscalar;;r&#10;Definition&#10;    set($key,$val)&#10;&#10;Description&#10;     Assign value to field&#10;&#10;Parameters:&#10;     $key - string&#10;     $val - scalar;;d25,90;;b0,0;;m $key;;p $val;;p">
</treenode>
<treenode node="skip;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\sql\mapper.php;f1;366;2;384;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\mongo\mapper.php;f1;237;2;242;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\jig\mapper.php;f1;365;2;371;;;;vpos;;vstatic;;r&#10;Definition&#10;    skip($ofs=1)&#10;&#10;Description&#10;     Return record at specified offset using same criteria as previous load() call and make it active&#10;&#10;Parameters:&#10;     $ofs - int;;d23,366;;b0,0;;m $ofs;;p">
</treenode>
<treenode node="sort;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\jig\mapper.php;f11;308;2;332;;;;vpos;;vmixed;;r&#10;Definition&#10;    sort($data,$cond)&#10;&#10;Description&#10;     Sort a collection&#10;&#10;Parameters:&#10;     $data&#10;     $cond;;d38,308;;b2,0;;m $data;;p $cond;;p">
</treenode>
<treenode node="stringify;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\sql\mapper.php;f1;202;2;284;;;;vpos;;varray;;r&#10;Definition&#10;    stringify($fields,$filter=NULL,array $options=NULL)&#10;&#10;Description&#10;     Build query string and arguments&#10;&#10;Parameters:&#10;     $fields - string&#10;     $filter - string|array&#10;     $options - array;;d62,202;;b0,0;;m $fields;;p $filter;;p $options;;p">
</treenode>
<treenode node="table;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\sql\mapper.php;f1;57;2;59;;;;vpos;;vstring;;r&#10;Definition&#10;    table()&#10;&#10;Description&#10;     Return mapped table;;d18,57;;b0,0;;m">
</treenode>
<treenode node="token;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\jig\mapper.php;f1;123;2;148;;;;vpos;;vstring;;r&#10;Definition&#10;    token($str)&#10;&#10;Description&#10;     Convert tokens in string expression to variable names&#10;&#10;Parameters:&#10;     $str - string;;d22,123;;b0,0;;m $str;;p">
</treenode>
<treenode node="update;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\sql\mapper.php;f1;468;2;506;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\mongo\mapper.php;f1;274;2;289;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\jig\mapper.php;f1;407;2;423;;;;vpos;;vstatic;;r&#10;Definition&#10;    update()&#10;&#10;Description&#10;     Update current record;;d19,468;;b0,0;;m">
</treenode>
</treenode>
<treenode node="Markdown;PHP:Class Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\markdown.php;f0;23;1;571;;;;vpos;;vPrefab;;c;;r;;d30,23;;b0,0;;m">
<treenode node="_a;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\markdown.php;f11;369;2;381;;;;vpos;;vstring;;r&#10;Definition&#10;    _a($str)&#10;&#10;Description&#10;     Process anchor span&#10;&#10;Parameters:&#10;     $str - string;;d29,369;;b2,0;;m $str;;p">
</treenode>
<treenode node="_atx;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\markdown.php;f11;193;2;197;;;;vpos;;vstring;;r&#10;Definition&#10;    _atx($type,$str)&#10;&#10;Description&#10;     Process atx-style heading&#10;&#10;Parameters:&#10;     $type - string&#10;     $str - string;;d37,193;;b2,0;;m $type;;p $str;;p">
</treenode>
<treenode node="_auto;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\markdown.php;f11;388;2;400;;;;vpos;;vstring;;r&#10;Definition&#10;    _auto($str)&#10;&#10;Description&#10;     Auto-convert links&#10;&#10;Parameters:&#10;     $str - string;;d32,388;;b2,0;;m $str;;p">
</treenode>
<treenode node="_blockquote;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\markdown.php;f11;36;2;40;;;;vpos;;vstring;;r&#10;Definition&#10;    _blockquote($str)&#10;&#10;Description&#10;     Process blockquote&#10;&#10;Parameters:&#10;     $str - string;;d38,36;;b2,0;;m $str;;p">
</treenode>
<treenode node="_code;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\markdown.php;f11;407;2;416;;;;vpos;;vstring;;r&#10;Definition&#10;    _code($str)&#10;&#10;Description&#10;     Process code span&#10;&#10;Parameters:&#10;     $str - string;;d32,407;;b2,0;;m $str;;p">
</treenode>
<treenode node="_fence;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\markdown.php;f11;63;2;177;;;;vpos;;vstring;;r&#10;Definition&#10;    _fence($hint,$str)&#10;&#10;Description&#10;     Process fenced code block&#10;&#10;Parameters:&#10;     $hint - string&#10;     $str - string;;d39,63;;b2,0;;m $hint;;p $str;;p">
</treenode>
<treenode node="_hr;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\markdown.php;f11;183;2;185;;;;vpos;;vstring;;r&#10;Definition&#10;    _hr()&#10;&#10;Description&#10;     Process horizontal rule;;d26,183;;b2,0;;m">
</treenode>
<treenode node="_img;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\markdown.php;f11;348;2;362;;;;vpos;;vstring;;r&#10;Definition&#10;    _img($str)&#10;&#10;Description&#10;     Process image span&#10;&#10;Parameters:&#10;     $str - string;;d31,348;;b2,0;;m $str;;p">
</treenode>
<treenode node="_li;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\markdown.php;f11;216;2;269;;;;vpos;;vstring;;r&#10;Definition&#10;    _li($str)&#10;&#10;Description&#10;     Process ordered/unordered list&#10;&#10;Parameters:&#10;     $str - string;;d30,216;;b2,0;;m $str;;p">
</treenode>
<treenode node="_p;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\markdown.php;f11;285;2;312;;;;vpos;;vstring;;r&#10;Definition&#10;    _p($str)&#10;&#10;Description&#10;     Process paragraph&#10;&#10;Parameters:&#10;     $str - string;;d29,285;;b2,0;;m $str;;p">
</treenode>
<treenode node="_pre;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\markdown.php;f11;47;2;55;;;;vpos;;vstring;;r&#10;Definition&#10;    _pre($str)&#10;&#10;Description&#10;     Process whitespace-prefixed code block&#10;&#10;Parameters:&#10;     $str - string;;d31,47;;b2,0;;m $str;;p">
</treenode>
<treenode node="_raw;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\markdown.php;f11;276;2;278;;;;vpos;;vstring;;r&#10;Definition&#10;    _raw($str)&#10;&#10;Description&#10;     Ignore raw HTML&#10;&#10;Parameters:&#10;     $str - string;;d31,276;;b2,0;;m $str;;p">
</treenode>
<treenode node="_setext;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\markdown.php;f11;205;2;209;;;;vpos;;vstring;;r&#10;Definition&#10;    _setext($str,$type)&#10;&#10;Description&#10;     Process setext-style heading&#10;&#10;Parameters:&#10;     $str - string&#10;     $type - string;;d40,205;;b2,0;;m $str;;p $type;;p">
</treenode>
<treenode node="_text;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\markdown.php;f11;319;2;341;;;;vpos;;vstring;;r&#10;Definition&#10;    _text($str)&#10;&#10;Description&#10;     Process strong/em/strikethrough spans&#10;&#10;Parameters:&#10;     $str - string;;d32,319;;b2,0;;m $str;;p">
</treenode>
<treenode node="build;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\markdown.php;f11;463;2;550;;;;vpos;;vstring;;r&#10;Definition&#10;    build($str)&#10;&#10;Description&#10;     Assemble blocks&#10;&#10;Parameters:&#10;     $str - string;;d32,463;;b2,0;;m $str;;p">
</treenode>
<treenode node="convert;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\markdown.php;f1;557;2;569;;;;vpos;;vstring;;r&#10;Definition&#10;    convert($txt)&#10;&#10;Description&#10;     Render HTML equivalent of markdown&#10;&#10;Parameters:&#10;     $txt - string;;d24,557;;b0,0;;m $txt;;p">
</treenode>
<treenode node="esc;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\markdown.php;f1;423;2;435;;;;vpos;;vstring;;r&#10;Definition&#10;    esc($str)&#10;&#10;Description&#10;     Convert characters to HTML entities&#10;&#10;Parameters:&#10;     $str - string;;d20,423;;b0,0;;m $str;;p">
</treenode>
<treenode node="scan;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\markdown.php;f1;451;2;456;;;;vpos;;vstring;;r&#10;Definition&#10;    scan($str)&#10;&#10;Description&#10;     Scan line for convertible spans&#10;&#10;Parameters:&#10;     $str - string;;d21,451;;b0,0;;m $str;;p">
</treenode>
<treenode node="snip;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\markdown.php;f11;442;2;444;;;;vpos;;vstring;;r&#10;Definition&#10;    snip($str)&#10;&#10;Description&#10;     Reduce multiple line feeds&#10;&#10;Parameters:&#10;     $str - string;;d31,442;;b2,0;;m $str;;p">
</treenode>
</treenode>
<treenode node="Matrix;PHP:Class Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\matrix.php;f0;23;1;110;;;;vpos;;vPrefab;;c;;r;;d28,23;;b0,0;;m">
<treenode node="calendar;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\matrix.php;f1;97;2;108;;;;vpos;;varray;;r&#10;Definition&#10;    calendar($date=&apos;now&apos;,$first=0)&#10;&#10;Description&#10;     Return month calendar of specified date, with optional setting for first day of week (0 for Sunday)&#10;&#10;Parameters:&#10;     $date - string&#10;     $first - int;;d41,97;;b0,0;;m $date;;p $first;;p">
</treenode>
<treenode node="changekey;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\matrix.php;f1;83;2;88;;;;vpos;;vNULL;;r&#10;Definition&#10;    changekey(array &amp;$var,$old,$new)&#10;&#10;Description&#10;     Change the key of a two-dimensional array element&#10;&#10;Parameters:&#10;     $var - array&#10;     $old - string&#10;     $new - string;;d43,83;;b0,0;;m $var;;p $old;;p $new;;p">
</treenode>
<treenode node="pick;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\matrix.php;f1;32;2;39;;;;vpos;;varray;;r&#10;Definition&#10;    pick(array $var,$col)&#10;&#10;Description&#10;     Retrieve values from a specified column of a multi-dimensional array variable&#10;&#10;Parameters:&#10;     $var - array&#10;     $col - mixed;;d32,32;;b0,0;;m $var;;p $col;;p">
</treenode>
<treenode node="sort;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\matrix.php;f1;61;2;74;;;;vpos;;vbool;;r&#10;Definition&#10;    sort(array &amp;$var,$col,$order=SORT_ASC)&#10;&#10;Description&#10;     Sort a multi-dimensional array variable on a specified column&#10;&#10;Parameters:&#10;     $var - array&#10;     $col - mixed&#10;     $order - int;;d49,61;;b0,0;;m $var;;p $col;;p $order;;p">
</treenode>
<treenode node="transpose;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\matrix.php;f1;46;2;52;;;;vpos;;vNULL;;r&#10;Definition&#10;    transpose(array &amp;$var)&#10;&#10;Description&#10;     Rotate a two-dimensional array variable&#10;&#10;Parameters:&#10;     $var - array;;d33,46;;b0,0;;m $var;;p">
</treenode>
</treenode>
<treenode node="Mongo;PHP:Class Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\mongo.php;f0;25;1;144;;;;vpos;;v;;r;;d12,25;;b0,0;;m">
<treenode node="E_Profiler;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\mongo.php;f0;29;12;29;;;;vpos;;v;;r&apos;MongoDB profiler is disabled&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__call;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\mongo.php;f1;110;2;112;;;;vpos;;vmixed;;r&#10;Definition&#10;    __call($func,array $args)&#10;&#10;Description&#10;     Redirect call to MongoDB object&#10;&#10;Parameters:&#10;     $func - string&#10;     $args - array;;d36,110;;b0,0;;m $func;;p $args;;p">
</treenode>
<treenode node="__clone;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\mongo.php;f9;123;2;124;;;;vpos;;v;;r;;d28,123;;b3,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\mongo.php;f1;132;2;142;;;;vpos;;v;;r&#10;Definition&#10;    __construct($dsn,$dbname,array $options=NULL)&#10;&#10;Description&#10;     Instantiate class&#10;&#10;Parameters:&#10;     $dsn - string&#10;     $dbname - string&#10;     $options - array;;d56,132;;b0,0;;m $dsn;;p $dbname;;p $options;;p">
</treenode>
<treenode node="drop;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\mongo.php;f1;93;2;102;;;;vpos;;vint;;r&#10;Definition&#10;    drop()&#10;&#10;Description&#10;     Intercept native call to re-enable profiler;;d17,93;;b0,0;;m">
</treenode>
<treenode node="dsn;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\mongo.php;f1;48;2;50;;;;vpos;;vstring;;r&#10;Definition&#10;    dsn()&#10;&#10;Description&#10;     Return data source name;;d16,48;;b0,0;;m">
</treenode>
<treenode node="legacy;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\mongo.php;f1;118;2;120;;;;vpos;;vbool;;r&#10;Definition&#10;    legacy()&#10;&#10;Description&#10;     Return TRUE if legacy driver is loaded;;d19,118;;b0,0;;m">
</treenode>
<treenode node="log;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\mongo.php;f1;65;2;87;;;;vpos;;vstring;;r&#10;Definition&#10;    log($flag=TRUE)&#10;&#10;Description&#10;     Return MongoDB profiler results (or disable logging)&#10;&#10;Parameters:&#10;     $flag - bool;;d26,65;;b0,0;;m $flag;;p">
</treenode>
<treenode node="uuid;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\mongo.php;f1;56;2;58;;;;vpos;;vstring;;r&#10;Definition&#10;    uuid()&#10;&#10;Description&#10;     Return UUID;;d17,56;;b0,0;;m">
</treenode>
</treenode>
<treenode node="NewsModel;PHP:Class Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\test\newsmodel.php;f0;2;1;42;;;;vpos;;vCortex;;c;;r;;d35,2;;b0,0;;m">
<treenode node="getBySQL;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\test\newsmodel.php;f8;31;2;40;;;;vpos;;v;;r;;d34,31;;b1,0;;mquery;;p">
</treenode>
</treenode>
<treenode node="NewsModel2;PHP:Class Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\test\newsmodel2.php;f0;3;1;24;;;;vpos;;vCortex;;c;;r;;d36,3;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\test\newsmodel2.php;f11;9;5;22;;;;vpos;;v;;r;;d34,9;;b1,0;;m">
</treenode>
</treenode>
<treenode node="OAuth2;PHP:Class Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\web\oauth2.php;f0;25;1;134;;;;vpos;;vMagic;;c;;r;;d28,25;;b0,0;;m">
<treenode node="clear;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\web\oauth2.php;f1;127;2;132;;;;vpos;;vNULL;;r&#10;Definition&#10;    clear($key=NULL)&#10;&#10;Description&#10;     Remove scope/claim&#10;&#10;Parameters:&#10;     $key - string;;d27,127;;b0,0;;m $key;;p">
</treenode>
<treenode node="exists;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\web\oauth2.php;f1;95;2;97;;;;vpos;;vbool;;r&#10;Definition&#10;    exists($key)&#10;&#10;Description&#10;     Return TRUE if scope/claim exists&#10;&#10;Parameters:&#10;     $key - string;;d23,95;;b0,0;;m $key;;p">
</treenode>
<treenode node="get;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\web\oauth2.php;f1;114;2;120;;;;vpos;;vmixed;;r&#10;Definition&#10;    &amp;get($key)&#10;&#10;Description&#10;     Return value of scope/claim&#10;&#10;Parameters:&#10;     $key - string;;d21,114;;b0,0;;m $key;;p">
</treenode>
<treenode node="jwt;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\web\oauth2.php;f1;77;2;88;;;;vpos;;varray;;r&#10;Definition&#10;    jwt($token)&#10;&#10;Description&#10;     Parse JSON Web token&#10;&#10;Parameters:&#10;     $token - string;;d22,77;;b0,0;;m $token;;p">
</treenode>
<treenode node="request;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\web\oauth2.php;f1;47;2;70;;;;vpos;;vstring;;r&#10;Definition&#10;    request($uri,$method,$token=NULL)&#10;&#10;Description&#10;     Send request to API/token endpoint&#10;&#10;Parameters:&#10;     $uri - string&#10;     $method - string&#10;     $token - array&#10;&#10;Return:&#10;   |FALSE;;d44,47;;b0,0;;m $uri;;p $method;;p $token;;p">
</treenode>
<treenode node="set;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\web\oauth2.php;f1;105;2;107;;;;vpos;;vstring;;r&#10;Definition&#10;    set($key,$val)&#10;&#10;Description&#10;     Bind value to scope/claim&#10;&#10;Parameters:&#10;     $key - string&#10;     $val - string;;d25,105;;b0,0;;m $key;;p $val;;p">
</treenode>
<treenode node="uri;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\web\oauth2.php;f1;36;2;38;;;;vpos;;vstring;;r&#10;Definition&#10;    uri($endpoint)&#10;&#10;Description&#10;     Return OAuth2 authentication URI&#10;&#10;Parameters:&#10;     $endpoint - string;;d25,36;;b0,0;;m $endpoint;;p">
</treenode>
</treenode>
<treenode node="OpenID;PHP:Class Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\web\openid.php;f0;25;1;247;;;;vpos;;vMagic;;c;;r;;d28,25;;b0,0;;m">
<treenode node="auth;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\web\openid.php;f1;143;2;166;;;;vpos;;vbool;;r&#10;Definition&#10;    auth($proxy=NULL,$attr=[],array $reqd=NULL)&#10;&#10;Description&#10;     Initiate OpenID authentication sequence;s Return FALSE on failure or redirect to OpenID provider URL&#10;&#10;Parameters:&#10;     $proxy - string&#10;     $attr - array&#10;     $reqd - string|array;;d54,143;;b0,0;;m $proxy;;p $attr;;p $reqd;;p">
</treenode>
<treenode node="clear;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\web\openid.php;f1;243;2;245;;;;vpos;;vNULL;;r&#10;Definition&#10;    clear($key)&#10;&#10;Description&#10;     Remove OpenID request parameter&#10;&#10;Parameters:&#10;     $key;;d22,243;;b0,0;;m $key;;p">
</treenode>
<treenode node="discover;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\web\openid.php;f11;38;2;133;;;;vpos;;vstring;;r&#10;Definition&#10;    discover($proxy)&#10;&#10;Description&#10;     Determine OpenID provider&#10;&#10;Parameters:&#10;     $proxy - string&#10;&#10;Return:&#10;   |FALSE;;d37,38;;b2,0;;m $proxy;;p">
</treenode>
<treenode node="exists;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\web\openid.php;f1;211;2;213;;;;vpos;;vbool;;r&#10;Definition&#10;    exists($key)&#10;&#10;Description&#10;     Return TRUE if OpenID request parameter exists&#10;&#10;Parameters:&#10;     $key - string;;d23,211;;b0,0;;m $key;;p">
</treenode>
<treenode node="get;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\web\openid.php;f1;230;2;236;;;;vpos;;vmixed;;r&#10;Definition&#10;    &amp;get($key)&#10;&#10;Description&#10;     Return value of OpenID request parameter&#10;&#10;Parameters:&#10;     $key - string;;d21,230;;b0,0;;m $key;;p">
</treenode>
<treenode node="response;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\web\openid.php;f1;202;2;204;;;;vpos;;varray;;r&#10;Definition&#10;    response()&#10;&#10;Description&#10;     Return OpenID response fields;;d21,202;;b0,0;;m">
</treenode>
<treenode node="set;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\web\openid.php;f1;221;2;223;;;;vpos;;vstring;;r&#10;Definition&#10;    set($key,$val)&#10;&#10;Description&#10;     Bind value to OpenID request parameter&#10;&#10;Parameters:&#10;     $key - string&#10;     $val - string;;d25,221;;b0,0;;m $key;;p $val;;p">
</treenode>
<treenode node="verified;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\web\openid.php;f1;173;2;196;;;;vpos;;vbool;;r&#10;Definition&#10;    verified($proxy=NULL)&#10;&#10;Description&#10;     Return TRUE if OpenID verification was successful&#10;&#10;Parameters:&#10;     $proxy - string;;d32,173;;b0,0;;m $proxy;;p">
</treenode>
</treenode>
<treenode node="Pagination;PHP:Class Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-pagination\lib\pagination.php;f0;16;1;259;;;;vpos;;v;;r&#10;Definition&#10;    class Pagination&#10;&#10;Description&#10;     Pagination class for the PHP Fat-Free Framework The contents of this file are subject to the terms of the GNU General Public License Version 3.0. You may not use this file except in compliance with the license. Any of the license terms and conditions can be waived if you get permission from the copyright holder. Copyright (c) 2012-2017 by ikkez Christian Knuth &lt;mail ikkez.de&gt; version 1.4.4;;d17,16;;b0,0;;m">
<treenode node="TEXT_MissingItemsAttr;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-pagination\lib\pagination.php;f0;29;29;29;;;;vpos;;v;;r&apos;You need to specify items attribute for a pagination.&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-pagination\lib\pagination.php;f11;37;5;42;;;;vpos;;v;;r&#10;Definition&#10;    __construct($items, $limit = 10, $routeKey = &apos;page&apos; )&#10;&#10;Description&#10;     create new pagination&#10;&#10;Parameters:&#10;     $items - array|integer max items or array to count&#10;     $limit - int max items per page&#10;     $routeKey - string the key for pagination in your routing;;d74,37;;b1,0;;m $items;;p $limit;;p $routeKey;;p">
</treenode>
<treenode node="findCurrentPage;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-pagination\lib\pagination.php;f18;112;5;116;;;;vpos;;vint;;r&#10;Definition&#10;    findCurrentPage($key=&apos;page&apos;)&#10;&#10;Description&#10;     extract the current page number from the route parameter token&#10;&#10;Parameters:&#10;    string $key&#10;&#10;Return:&#10;   |mixed;;d56,112;;b1,5;;mstring $key;;p">
</treenode>
<treenode node="getCurrent;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-pagination\lib\pagination.php;f11;122;5;124;;;;vpos;;vint;;r&#10;Definition&#10;    getCurrent()&#10;&#10;Description&#10;     returns the current page number;;d33,122;;b1,0;;m">
</treenode>
<treenode node="getFirst;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-pagination\lib\pagination.php;f11;175;5;177;;;;vpos;;vbool;;r&#10;Definition&#10;    getFirst()&#10;&#10;Description&#10;     return first page number, if current page is not in range&#10;&#10;Return:&#10;   |int;;d31,175;;b1,0;;m">
</treenode>
<treenode node="getInRange;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-pagination\lib\pagination.php;f11;184;5;194;;;;vpos;;varray;;r&#10;Definition&#10;    getInRange($range = null)&#10;&#10;Description&#10;     return all page numbers within the given range&#10;&#10;Parameters:&#10;     $range - int&#10;&#10;Return:&#10;   page numbers in range;;d46,184;;b1,0;;m $range;;p">
</treenode>
<treenode node="getItemCount;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-pagination\lib\pagination.php;f11;130;5;132;;;;vpos;;vint;;r&#10;Definition&#10;    getItemCount()&#10;&#10;Description&#10;     returns the maximum count of items to display in pages;;d35,130;;b1,0;;m">
</treenode>
<treenode node="getItemOffset;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-pagination\lib\pagination.php;f11;200;5;202;;;;vpos;;vint;;r&#10;Definition&#10;    getItemOffset()&#10;&#10;Description&#10;     returns the number of items left behind for current page;;d36,200;;b1,0;;m">
</treenode>
<treenode node="getLast;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-pagination\lib\pagination.php;f11;167;5;169;;;;vpos;;vbool;;r&#10;Definition&#10;    getLast()&#10;&#10;Description&#10;     return last page number, if current page is not in range&#10;&#10;Return:&#10;   |int;;d30,167;;b1,0;;m">
</treenode>
<treenode node="getMax;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-pagination\lib\pagination.php;f11;138;5;140;;;;vpos;;vint;;r&#10;Definition&#10;    getMax()&#10;&#10;Description&#10;     get maximum pages needed to display all items;;d29,138;;b1,0;;m">
</treenode>
<treenode node="getNext;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-pagination\lib\pagination.php;f11;147;5;151;;;;vpos;;vint;;r&#10;Definition&#10;    getNext()&#10;&#10;Description&#10;     get next page number&#10;&#10;Return:&#10;   |bool;;d30,147;;b1,0;;m">
</treenode>
<treenode node="getPrev;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-pagination\lib\pagination.php;f11;157;5;161;;;;vpos;;vint;;r&#10;Definition&#10;    getPrev()&#10;&#10;Description&#10;     get previous page number&#10;&#10;Return:&#10;   |bool;;d30,157;;b1,0;;m">
</treenode>
<treenode node="renderTag;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-pagination\lib\pagination.php;f18;238;5;258;;;;vpos;;vstring;;r&#10;Definition&#10;    renderTag($args)&#10;&#10;Description&#10;     magic render function for custom tags&#10;&#10;Parameters:&#10;     $args;;d43,238;;b1,5;;m $args;;p">
</treenode>
<treenode node="serve;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-pagination\lib\pagination.php;f11;208;5;230;;;;vpos;;vstring;;r&#10;Definition&#10;    serve()&#10;&#10;Description&#10;     generates the pagination output;;d28,208;;b1,0;;m">
</treenode>
<treenode node="setCurrent;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-pagination\lib\pagination.php;f11;90;5;96;;;;vpos;;v;;r&#10;Definition&#10;    setCurrent($current)&#10;&#10;Description&#10;     set the current page number&#10;&#10;Parameters:&#10;     $current - int;;d41,90;;b1,0;;m $current;;p">
</treenode>
<treenode node="setLimit;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-pagination\lib\pagination.php;f11;48;5;52;;;;vpos;;v;;r&#10;Definition&#10;    setLimit($limit)&#10;&#10;Description&#10;     set maximum items shown on one page&#10;&#10;Parameters:&#10;     $limit - int;;d37,48;;b1,0;;m $limit;;p">
</treenode>
<treenode node="setLinkPath;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-pagination\lib\pagination.php;f11;102;5;105;;;;vpos;;v;;r&#10;Definition&#10;    setLinkPath($linkPath)&#10;&#10;Description&#10;     set path to current routing for link building&#10;&#10;Parameters:&#10;     $linkPath;;d43,102;;b1,0;;m $linkPath;;p">
</treenode>
<treenode node="setRange;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-pagination\lib\pagination.php;f11;82;5;84;;;;vpos;;v;;r&#10;Definition&#10;    setRange($range)&#10;&#10;Description&#10;     set the range of pages, that are displayed prev and next to current page&#10;&#10;Parameters:&#10;     $range - int;;d37,82;;b1,0;;m $range;;p">
</treenode>
<treenode node="setRouteKey;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-pagination\lib\pagination.php;f11;58;5;60;;;;vpos;;v;;r&#10;Definition&#10;    setRouteKey($key)&#10;&#10;Description&#10;     set token name used in your route pattern for pagination&#10;&#10;Parameters:&#10;    string $key;;d38,58;;b1,0;;mstring $key;;p">
</treenode>
<treenode node="setRouteKeyPrefix;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-pagination\lib\pagination.php;f11;66;5;68;;;;vpos;;v;;r&#10;Definition&#10;    setRouteKeyPrefix($prefix)&#10;&#10;Description&#10;     set a prefix that is added to your page links&#10;&#10;Parameters:&#10;    string $prefix;;d47,66;;b1,0;;mstring $prefix;;p">
</treenode>
<treenode node="setTemplate;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-pagination\lib\pagination.php;f11;74;5;76;;;;vpos;;v;;r&#10;Definition&#10;    setTemplate($template)&#10;&#10;Description&#10;     set path for the template file&#10;&#10;Parameters:&#10;     $template - string;;d43,74;;b1,0;;m $template;;p">
</treenode>
</treenode>
<treenode node="PaginationTest;PHP:Class Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-pagination\test\paginationtest.php;f0;5;1;60;;;;vpos;;vController;;c;;r&#10;Definition&#10;    class PaginationTest extends \App\Controller&#10;&#10;Description&#10;     Pagination Test;;d45,5;;b0,0;;m">
<treenode node="afterroute;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-pagination\test\paginationtest.php;f1;56;2;58;;;;vpos;;v;;r;;d23,56;;b0,0;;m">
</treenode>
<treenode node="init;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-pagination\test\paginationtest.php;f15;7;2;15;;;;vpos;;v;;r;;d31,7;;b1,5;;m">
</treenode>
<treenode node="run;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-pagination\test\paginationtest.php;f1;17;2;55;;;;vpos;;v;;r;;d25,17;;b0,0;;mf3;;p">
</treenode>
</treenode>
<treenode node="Pingback;PHP:Class Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\web\pingback.php;f0;25;1;175;;;;vpos;;vPrefab;;c;;r;;d31,25;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\web\pingback.php;f1;170;2;173;;;;vpos;;vobject;;r&#10;Definition&#10;    __construct()&#10;&#10;Description&#10;     Instantiate class;;d24,170;;b0,0;;m">
</treenode>
<treenode node="enabled;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\web\pingback.php;f11;36;2;55;;;;vpos;;vbool;;r&#10;Definition&#10;    enabled($url)&#10;&#10;Description&#10;     Return TRUE if URL points to a pingback-enabled resource&#10;&#10;Parameters:&#10;     $url;;d34,36;;b2,0;;m $url;;p">
</treenode>
<treenode node="inspect;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\web\pingback.php;f1;63;2;100;;;;vpos;;vNULL;;r&#10;Definition&#10;    inspect($source)&#10;&#10;Description&#10;     Load local page contents, parse HTML anchor tags, find permalinks, and send XML-RPC calls to corresponding pingback servers&#10;&#10;Parameters:&#10;     $source - string;;d27,63;;b0,0;;m $source;;p">
</treenode>
<treenode node="listen;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\web\pingback.php;f1;109;2;156;;;;vpos;;vstring;;r&#10;Definition&#10;    listen($func,$path=NULL)&#10;&#10;Description&#10;     Receive ping, check if local page is pingback-enabled, verify source contents, and return XML-RPC response&#10;&#10;Parameters:&#10;     $func - callback&#10;     $path - string;;d35,109;;b0,0;;m $func;;p $path;;p">
</treenode>
<treenode node="log;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\web\pingback.php;f1;162;2;164;;;;vpos;;vstring;;r&#10;Definition&#10;    log()&#10;&#10;Description&#10;     Return transaction history;;d16,162;;b0,0;;m">
</treenode>
</treenode>
<treenode node="Post;PHP:Class Name;C:\xampp\htdocs\claims-fab\app\model\post.php;f0;4;1;123;;C:\xampp\htdocs\claims-fab\app\controller\post.php;f0;18;1;201;;;;vpos;;vBase;;c;;r;;d24,4;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\controller\post.php;f8;20;2;29;;;;vpos;;v;;r;;d31,20;;b1,0;;m">
</treenode>
<treenode node="addComment;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\controller\post.php;f8;144;2;180;;;;vpos;;v;;r&#10;Definition&#10;    addComment(\Base $f3, $params)&#10;&#10;Description&#10;     add a comment from POST data to current blog post;;d48,144;;b1,0;;mf3;;pparams;;p">
</treenode>
<treenode node="getList;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\controller\post.php;f8;36;2;55;;;;vpos;;v;;r&#10;Definition&#10;    getList(\Base $f3, $params)&#10;&#10;Description&#10;     display a list of post entries&#10;&#10;Parameters:&#10;    \Base $f3&#10;    array $params;;d45,36;;b1,0;;m\Base $f3;;parray $params;;p">
</treenode>
<treenode node="getListByTag;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\controller\post.php;f8;62;2;67;;;;vpos;;v;;r&#10;Definition&#10;    getListByTag(\Base $f3, $params)&#10;&#10;Description&#10;     display a list of post entries by a specific tag they are attached to&#10;&#10;Parameters:&#10;    \Base $f3&#10;     $params;;d50,62;;b1,0;;m\Base $f3;;p $params;;p">
</treenode>
<treenode node="getSingle;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\controller\post.php;f8;74;2;120;;;;vpos;;v;;r&#10;Definition&#10;    getSingle(\Base $f3, $params)&#10;&#10;Description&#10;     display a single post&#10;&#10;Parameters:&#10;    \Base $f3&#10;    array $params;;d47,74;;b1,0;;m\Base $f3;;parray $params;;p">
</treenode>
<treenode node="hide;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\controller\post.php;f8;192;2;199;;;;vpos;;v;;r;;d36,192;;b1,0;;mf3;;pparams;;p">
</treenode>
<treenode node="initBackend;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\controller\post.php;f8;123;2;128;;;;vpos;;v;;r;;d31,123;;b1,0;;m">
</treenode>
<treenode node="post;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\controller\post.php;f8;135;2;139;;;;vpos;;v;;r&#10;Definition&#10;    post(\Base $f3,$params)&#10;&#10;Description&#10;     update/create post&#10;&#10;Parameters:&#10;    \Base $f3&#10;    array $params;;d41,135;;b1,0;;m\Base $f3;;parray $params;;p">
</treenode>
<treenode node="publish;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\controller\post.php;f8;183;2;190;;;;vpos;;v;;r;;d39,183;;b1,0;;mf3;;pparams;;p">
</treenode>
<treenode node="save;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\model\post.php;f8;113;2;121;;;;vpos;;v;;r;;d24,113;;b1,0;;m">
</treenode>
<treenode node="set_publish_date;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\model\post.php;f8;59;2;62;;;;vpos;;v;;r&#10;Definition&#10;    set_publish_date($val)&#10;&#10;Description&#10;     magic setter for publish_date;;d40,59;;b1,0;;mval;;p">
</treenode>
<treenode node="set_tags;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\model\post.php;f8;86;2;110;;;;vpos;;varray;;r&#10;Definition&#10;    set_tags($val)&#10;&#10;Description&#10;     set and add new tags to the post entity&#10;&#10;Parameters:&#10;    string $val;;d32,86;;b1,0;;mstring $val;;p">
</treenode>
<treenode node="set_title;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\model\post.php;f8;67;2;79;;;;vpos;;v;;r&#10;Definition&#10;    set_title($val)&#10;&#10;Description&#10;     magic setter for title;;d33,67;;b1,0;;mval;;p">
</treenode>
</treenode>
<treenode node="Prefab;PHP:Class Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f9;23;1;39;;;;vpos;;v;;r;;d22,23;;b0,0;;m">
<treenode node="instance;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f8;29;2;37;;;;vpos;;vstatic;;r&#10;Definition&#10;    instance()&#10;&#10;Description&#10;     Return class instance;;d28,29;;b0,5;;m">
</treenode>
</treenode>
<treenode node="Preview;PHP:Class Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;2818;1;3034;;;;vpos;;vView;;c;;r;;d27,2818;;b0,0;;m">
<treenode node="beforerender;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;3030;2;3032;;;;vpos;;v;;r&#10;Definition&#10;    beforerender($func)&#10;&#10;Description&#10;     post rendering handler&#10;&#10;Parameters:&#10;     $func - callback;;d30,3030;;b0,0;;m $func;;p">
</treenode>
<treenode node="build;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f11;2897;2;2919;;;;vpos;;vstring;;r&#10;Definition&#10;    build($node)&#10;&#10;Description&#10;     Assemble markup&#10;&#10;Parameters:&#10;     $node - string;;d33,2897;;b2,0;;m $node;;p">
</treenode>
<treenode node="c;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;2848;2;2854;;;;vpos;;vstring;;r&#10;Definition&#10;    c($val)&#10;&#10;Description&#10;     Return C-locale equivalent of number&#10;&#10;Parameters:&#10;     $val - int|float;;d18,2848;;b0,0;;m $val;;p">
</treenode>
<treenode node="filter;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;2883;2;2890;;;;vpos;;varray;;r&#10;Definition&#10;    filter($key=NULL,$func=NULL)&#10;&#10;Description&#10;     Register or get (a specific one or all) token filters&#10;&#10;Parameters:&#10;    string $key&#10;    string|closure $func&#10;&#10;Return:&#10;   |closure|string;;d39,2883;;b0,0;;mstring $key;;pstring|closure $func;;p">
</treenode>
<treenode node="interpolation;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;2839;2;2841;;;;vpos;;v;;r&#10;Definition&#10;    interpolation($bool)&#10;&#10;Description&#10;     enable/disable markup parsing interpolation mainly used for adding appropriate newlines&#10;&#10;Parameters:&#10;     $bool - bool;;d31,2839;;b0,0;;m $bool;;p">
</treenode>
<treenode node="parse;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;2976;2;2981;;;;vpos;;vstring;;r&#10;Definition&#10;    parse($text)&#10;&#10;Description&#10;     Parse template string&#10;&#10;Parameters:&#10;     $text - string;;d23,2976;;b0,0;;m $text;;p">
</treenode>
<treenode node="render;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;2991;2;3024;;;;vpos;;vstring;;r&#10;Definition&#10;    render($file,$mime=&apos;text/html&apos;,array $hive=NULL,$ttl=0)&#10;&#10;Description&#10;     Render template&#10;&#10;Parameters:&#10;     $file - string&#10;     $mime - string&#10;     $hive - array&#10;     $ttl - int;;d66,2991;;b0,0;;m $file;;p $mime;;p $hive;;p $ttl;;p">
</treenode>
<treenode node="resolve;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;2930;2;2969;;;;vpos;;vstring;;r&#10;Definition&#10;    resolve($node,array $hive=NULL,$ttl=0,$persist=FALSE,$escape=NULL)&#10;&#10;Description&#10;     Render template string&#10;&#10;Parameters:&#10;     $node - string|array&#10;     $hive - array&#10;     $ttl - int&#10;     $persist - bool&#10;     $escape - bool;;d77,2930;;b0,0;;m $node;;p $hive;;p $ttl;;p $persist;;p $escape;;p">
</treenode>
<treenode node="token;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;2861;2;2875;;;;vpos;;vstring;;r&#10;Definition&#10;    token($str)&#10;&#10;Description&#10;     Convert token to variable&#10;&#10;Parameters:&#10;     $str - string;;d22,2861;;b0,0;;m $str;;p">
</treenode>
</treenode>
<treenode node="ProductsModel;PHP:Class Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\test\productsmodel.php;f0;2;1;17;;;;vpos;;vCortex;;c;;r;;d39,2;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\test\productsmodel.php;f11;12;5;15;;;;vpos;;v;;r;;d34,12;;b1,0;;m">
</treenode>
</treenode>
<treenode node="ProfileModel;PHP:Class Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\test\profilemodel.php;f0;2;1;20;;;;vpos;;vCortex;;c;;r;;d38,2;;b0,0;;m">
</treenode>
<treenode node="Query;PHP:Class Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f0;38;1;938;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f0;38;1;938;;;;vpos;;v;;r&#10;Definition&#10;    class Query&#10;&#10;Description&#10;     Perform an individual query on the database.;;d12,38;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f8;52;2;57;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f8;52;2;57;;;;vpos;;v;;r&#10;Definition&#10;    __construct( $db, $type, $table=null )&#10;&#10;Description&#10;     Query instance constructor.&#10;&#10;Parameters:&#10;    Database $db - Database instance&#10;    string $type - Query type - &apos;select&apos;, &apos;insert&apos;, &apos;update&apos; or &apos;delete&apos;&#10;    string|string[] $table - Tables to operate on - see {;;d1,53;;b1,0;;mDatabase $db;;pstring $type;;pstring|string[] $table;;p">
</treenode>
<treenode node="_build_field;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f11;687;2;705;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f11;687;2;705;;;;vpos;;vstring;;r&#10;Definition&#10;    _build_field( $addAlias=false )&#10;&#10;Description&#10;     Create a comma separated field list;;d1,688;;b2,0;;maddAlias;;p">
</treenode>
<treenode node="_build_join;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f11;744;2;747;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f11;744;2;747;;;;vpos;;vstring;;r&#10;Definition&#10;    _build_join()&#10;&#10;Description&#10;     Create a JOIN statement list;;d1,745;;b2,0;;m">
</treenode>
<treenode node="_build_limit;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f11;813;2;826;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f11;813;2;826;;;;vpos;;vstring;;r&#10;Definition&#10;    _build_limit()&#10;&#10;Description&#10;     Create the LIMIT / OFFSET string;;d1,814;;b2,0;;m">
</treenode>
<treenode node="_build_order;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f11;713;2;719;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f11;713;2;719;;;;vpos;;vstring;;r&#10;Definition&#10;    _build_order()&#10;&#10;Description&#10;     Create the ORDER BY string;;d1,714;;b2,0;;m">
</treenode>
<treenode node="_build_set;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f11;755;2;764;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f11;755;2;764;;;;vpos;;vstring;;r&#10;Definition&#10;    _build_set()&#10;&#10;Description&#10;     Create a set list;;d1,756;;b2,0;;m">
</treenode>
<treenode node="_build_table;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f11;676;2;679;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f11;676;2;679;;;;vpos;;vstring;;r&#10;Definition&#10;    _build_table()&#10;&#10;Description&#10;     Create the TABLE list;;d1,677;;b2,0;;m">
</treenode>
<treenode node="_build_value;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f11;727;2;736;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f11;727;2;736;;;;vpos;;vstring;;r&#10;Definition&#10;    _build_value()&#10;&#10;Description&#10;     Create a bind field value list;;d1,728;;b2,0;;m">
</treenode>
<treenode node="_build_where;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f11;772;2;803;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f11;772;2;803;;;;vpos;;vstring;;r&#10;Definition&#10;    _build_where()&#10;&#10;Description&#10;     Create the WHERE statement;;d1,773;;b2,0;;m">
</treenode>
<treenode node="_delete;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f11;643;2;652;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f11;643;2;652;;;;vpos;;vResult;;r&#10;Definition&#10;    _delete()&#10;&#10;Description&#10;     Create a DELETE statement;;d1,644;;b2,0;;m">
</treenode>
<treenode node="_insert;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f11;604;2;617;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f11;604;2;617;;;;vpos;;vResult;;r&#10;Definition&#10;    _insert()&#10;&#10;Description&#10;     Create an INSERT statement;;d1,605;;b2,0;;m">
</treenode>
<treenode node="_protect_identifiers;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f11;891;2;921;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f11;891;2;921;;;;vpos;;vstring;;r&#10;Definition&#10;    _protect_identifiers( $identifier )&#10;&#10;Description&#10;     Protect field names;;d1,892;;b2,0;;midentifier;;p">
</treenode>
<treenode node="_raw;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f11;659;2;664;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f11;659;2;664;;;;vpos;;vResult;;r&#10;Definition&#10;    _raw( $sql )&#10;&#10;Description&#10;     Passed in SQL statement;;d1,660;;b2,0;;msql;;p">
</treenode>
<treenode node="_safe_bind;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f11;931;2;937;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f11;931;2;937;;;;vpos;;vstring;;r&#10;Definition&#10;    _safe_bind ( $name )&#10;&#10;Description&#10;     The characters that can be used for the PDO bindValue name are quite limited (`[a-zA-Z0-9_]+`). We need to abstract this out to allow slightly more complex expressions including dots for easy aliasing;;d1,932;;b2,0;;mname;;p">
</treenode>
<treenode node="_select;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f11;583;2;596;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f11;583;2;596;;;;vpos;;vResult;;r&#10;Definition&#10;    _select()&#10;&#10;Description&#10;     Create a SELECT statement;;d1,584;;b2,0;;m">
</treenode>
<treenode node="_update;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f11;625;2;635;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f11;625;2;635;;;;vpos;;vResult;;r&#10;Definition&#10;    _update()&#10;&#10;Description&#10;     Create an UPDATE statement;;d1,626;;b2,0;;m">
</treenode>
<treenode node="_where;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f11;833;2;868;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f11;833;2;868;;;;vpos;;v;;r&#10;Definition&#10;    _where ( $where, $value=null, $type=&apos;AND &apos;, $op=&quot;=&quot;, $bind=true )&#10;&#10;Description&#10;     Add an individual where condition to the query.;;d1,834;;b2,0;;mwhere;;pvalue;;ptype;;pop;;pbind;;p">
</treenode>
<treenode node="_where_group;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f11;876;2;883;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f11;876;2;883;;;;vpos;;vstring;;r&#10;Definition&#10;    _where_group ( $inOut, $op )&#10;&#10;Description&#10;     Add parentheses to a where condition;;d1,877;;b2,0;;minOut;;pop;;p">
</treenode>
<treenode node="and_where;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f8;506;2;509;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f8;506;2;509;;;;vpos;;vself;;r&#10;Definition&#10;    and_where ( $key, $value=null, $op=&quot;=&quot;, $bind=true )&#10;&#10;Description&#10;     Add addition where conditions to the query with an AND operator. An alias of `where` for naming consistency.&#10;&#10;Parameters:&#10;    string|string[]|function $key - Single field name, or an array of field names&#10;    string|string[] $value - Single field value, or an array of values&#10;    string $op - Condition operator: &lt;, &gt;, = etc&#10;    boolean $bind - Escape the value (true, default) or not (false);;d1,507;;b1,0;;mstring|string[]|function $key;;pstring|string[] $value;;pstring $op;;pboolean $bind;;p">
</treenode>
<treenode node="commit;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f15;152;2;155;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f15;152;2;155;;;;vpos;;v;;r&#10;Definition&#10;    commit ( $dbh )&#10;&#10;Description&#10;     Commit a transaction.&#10;&#10;Parameters:&#10;    ;;d1,153;;b1,5;;m;;p">
</treenode>
<treenode node="connect;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f15;165;2;168;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f15;165;2;168;;;;vpos;;vQuery;;r&#10;Definition&#10;    connect ( $user, $pass=&apos;&apos;, $host=&apos;&apos;, $port=&apos;&apos;, $db=&apos;&apos;, $dsn=&apos;&apos; )&#10;&#10;Description&#10;     Database connection - override by the database driver.&#10;&#10;Parameters:&#10;    string|array $user - User name or all parameters in an array&#10;    string $pass - Password&#10;    string $host - Host name&#10;    string $db - Database name;;d1,166;;b1,5;;muser;;ppass;;phost;;pport;;pdb;;pdsn;;p">
</treenode>
<treenode node="distinct;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f8;224;2;228;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f8;224;2;228;;;;vpos;;vQuery;;r&#10;Definition&#10;    distinct ( $dis )&#10;&#10;Description&#10;     Set a distinct flag for a `select` query. Note that this has no effect on any of the other query types.&#10;&#10;Parameters:&#10;    boolean $dis - Optional;;d1,225;;b1,0;;mboolean $dis;;p">
</treenode>
<treenode node="dsnPostfix;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f8;197;2;209;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f8;197;2;209;;;;vpos;;vQuery;;r&#10;Definition&#10;    dsnPostfix ( $dsn )&#10;&#10;Description&#10;     Common helper for the drivers to handle a PDO DSN postfix&#10;&#10;Parameters:&#10;    string $dsn - DSN postfix to use;;d1,198;;b0,5;;mstring $dsn;;p">
</treenode>
<treenode node="exec;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f8;235;2;256;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f8;235;2;256;;;;vpos;;vResult;;r&#10;Definition&#10;    exec ( $sql=null )&#10;&#10;Description&#10;     Execute the query.&#10;&#10;Parameters:&#10;    string $sql - SQL string to execute (only if _type is &apos;raw&apos;);;d1,236;;b1,0;;mstring $sql;;p">
</treenode>
<treenode node="get;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f8;266;2;283;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f8;266;2;283;;;;vpos;;vself;;r&#10;Definition&#10;    get ( $get )&#10;&#10;Description&#10;     Get fields.&#10;&#10;Parameters:&#10;    string|string[] $get - ,;;d1,267;;b1,0;;mstring|string[] $get;;p">
</treenode>
<treenode node="join;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f8;293;2;318;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f8;293;2;318;;;;vpos;;vself;;r&#10;Definition&#10;    join ( $table, $condition, $type=&apos;&apos; )&#10;&#10;Description&#10;     Perform a JOIN operation&#10;&#10;Parameters:&#10;    sting $table - Table name to do the JOIN on&#10;    string $condition - JOIN condition&#10;    string $type - JOIN type;;d1,294;;b1,0;;msting $table;;pstring $condition;;pstring $type;;p">
</treenode>
<treenode node="limit;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f8;326;2;331;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f8;326;2;331;;;;vpos;;vself;;r&#10;Definition&#10;    limit ( $lim )&#10;&#10;Description&#10;     Limit the result set to a certain size.&#10;&#10;Parameters:&#10;    int $lim - The number of records to limit the result to;;d1,327;;b1,0;;mint $lim;;p">
</treenode>
<treenode node="offset;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f8;364;2;369;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f8;364;2;369;;;;vpos;;vself;;r&#10;Definition&#10;    offset ( $off )&#10;&#10;Description&#10;     Offset the return set by a given number of records (useful for paging).&#10;&#10;Parameters:&#10;    int $off - The number of records to offset the result by;;d1,365;;b1,0;;mint $off;;p">
</treenode>
<treenode node="or_where;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f8;526;2;548;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f8;526;2;548;;;;vpos;;vself;;r&#10;Definition&#10;    or_where ( $key, $value=null, $op=&quot;=&quot;, $bind=true )&#10;&#10;Description&#10;     Add addition where conditions to the query with an OR operator.&#10;&#10;Parameters:&#10;    string|string[]|function $key - Single field name, or an array of field names&#10;    string|string[] $value - Single field value, or an array of values&#10;    string $op - Condition operator: &lt;, &gt;, = etc&#10;    boolean $bind - Escape the value (true, default) or not (false);;d1,527;;b1,0;;mstring|string[]|function $key;;pstring|string[] $value;;pstring $op;;pboolean $bind;;p">
</treenode>
<treenode node="order;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f8;379;2;406;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f8;379;2;406;;;;vpos;;vself;;r&#10;Definition&#10;    order ( $order )&#10;&#10;Description&#10;     Order by&#10;&#10;Parameters:&#10;    string|string[] $order - Columns and direction to order by - can;;d1,380;;b1,0;;mstring|string[] $order;;p">
</treenode>
<treenode node="rollback;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f15;185;2;188;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f15;185;2;188;;;;vpos;;v;;r&#10;Definition&#10;    rollback ( $dbh )&#10;&#10;Description&#10;     Rollback the database state to the start of the transaction.&#10;&#10;Parameters:&#10;    ;;d1,186;;b1,5;;m;;p">
</treenode>
<treenode node="set;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f8;420;2;436;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f8;420;2;436;;;;vpos;;vself;;r&#10;Definition&#10;    set ( $set, $val=null )&#10;&#10;Description&#10;     Set fields to a given value.&#10;&#10;Parameters:&#10;    string|string[] $set - Can be given as a single string, when then $val&#10;    string $val - When $set is given as a simple string, $set is the field;;d1,421;;b1,0;;mstring|string[] $set;;pstring $val;;p">
</treenode>
<treenode node="table;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f8;341;2;356;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f8;341;2;356;;;;vpos;;vself;;r&#10;Definition&#10;    table ( $table )&#10;&#10;Description&#10;     Set table(s) to perform the query on.&#10;&#10;Parameters:&#10;    string|string[] $table - ,;;d1,342;;b1,0;;mstring|string[] $table;;p">
</treenode>
<treenode node="transaction;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f15;175;2;178;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f15;175;2;178;;;;vpos;;v;;r&#10;Definition&#10;    transaction ( $dbh )&#10;&#10;Description&#10;     Start a database transaction&#10;&#10;Parameters:&#10;    ;;d1,176;;b1,5;;m;;p">
</treenode>
<treenode node="where;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f8;466;2;488;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f8;466;2;488;;;;vpos;;vself;;r&#10;Definition&#10;    where ( $key, $value=null, $op=&quot;=&quot;, $bind=true )&#10;&#10;Description&#10;     Where query - multiple conditions are bound as ANDs.&#10;&#10;Parameters:&#10;    string|string[]|function $key - Single field name, or an array of field names&#10;    string|string[] $value - Single field value, or an array of values&#10;    string $op - Condition operator: &lt;, &gt;, = etc&#10;    boolean $bind - Escape the value (true, default) or not (false);;d1,467;;b1,0;;mstring|string[]|function $key;;pstring|string[] $value;;pstring $op;;pboolean $bind;;p">
</treenode>
<treenode node="where_group;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f8;561;2;566;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Query.php;f8;561;2;566;;;;vpos;;vself;;r&#10;Definition&#10;    where_group ( $inOut, $op=&apos;AND&apos; )&#10;&#10;Description&#10;     Provide grouping for WHERE conditions. Calling this function with `true` as the first parameter will open a bracket, and `false` will then close it.&#10;&#10;Parameters:&#10;    boolean $inOut - `true` to open brackets, `false` to close&#10;    string $op - Conditional operator to use to join to the;;d1,562;;b1,0;;mboolean $inOut;;pstring $op;;p">
</treenode>
</treenode>
<treenode node="Recaptcha;PHP:Class Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\web\google\recaptcha.php;f0;25;1;57;;;;vpos;;v;;r;;d16,25;;b0,0;;m">
<treenode node="URL_Recaptcha;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\web\google\recaptcha.php;f0;29;15;29;;;;vpos;;v;;r&apos;https://www.google.com/recaptcha/api/siteverify&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="verify;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\web\google\recaptcha.php;f8;37;2;55;;;;vpos;;vbool;;r&#10;Definition&#10;    verify($secret,$response=NULL)&#10;&#10;Description&#10;     Verify reCAPTCHA response&#10;&#10;Parameters:&#10;    string $secret&#10;    string $response;;d48,37;;b0,5;;mstring $secret;;pstring $response;;p">
</treenode>
</treenode>
<treenode node="Register;PHP:Class Name;C:\xampp\htdocs\claims-fab\app\view\register.php;f0;4;1;38;;;;vpos;;vBase;;c;;r;;d28,4;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\view\register.php;f8;9;2;24;;;;vpos;;v;;r;;d31,9;;b1,0;;m">
</treenode>
<treenode node="render;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\view\register.php;f8;30;2;36;;;;vpos;;v;;r;;d26,30;;b1,0;;m">
</treenode>
<treenode node="setTemplate;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\view\register.php;f8;26;2;28;;;;vpos;;v;;r;;d40,26;;b1,0;;mfilepath;;p">
</treenode>
</treenode>
<treenode node="Resource;PHP:Class Name;C:\xampp\htdocs\claims-fab\app\controller\resource.php;f9;4;1;91;;;;vpos;;vBase;;c;;r;;d37,4;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\controller\resource.php;f8;15;2;17;;;;vpos;;v;;r&#10;Definition&#10;    __construct(\Model\Base $model)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    \Model\Base $model;;d49,15;;b1,0;;m\Model\Base $model;;p">
</treenode>
<treenode node="delete;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\controller\resource.php;f8;76;2;89;;;;vpos;;v;;r&#10;Definition&#10;    delete(\Base $f3, $params)&#10;&#10;Description&#10;     delete a record&#10;&#10;Parameters:&#10;    \Base $f3&#10;    array $params;;d44,76;;b1,0;;m\Base $f3;;parray $params;;p">
</treenode>
<treenode node="edit;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\controller\resource.php;f8;28;2;33;;;;vpos;;v;;r;;d41,28;;b1,0;;mf3;;pparams;;p">
</treenode>
<treenode node="getList;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\controller\resource.php;f8;40;2;42;;;;vpos;;v;;r&#10;Definition&#10;    getList(\Base $f3,$params)&#10;&#10;Description&#10;     get collection of records&#10;&#10;Parameters:&#10;    \Base $f3&#10;    array $params;;d44,40;;b1,0;;m\Base $f3;;parray $params;;p">
</treenode>
<treenode node="getSingle;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\controller\resource.php;f8;24;2;26;;;;vpos;;v;;r&#10;Definition&#10;    getSingle(\Base $f3,$params)&#10;&#10;Description&#10;     get single record&#10;&#10;Parameters:&#10;    \Base $f3&#10;    array $params;;d46,24;;b1,0;;m\Base $f3;;parray $params;;p">
</treenode>
<treenode node="post;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\controller\resource.php;f8;49;2;69;;;;vpos;;v;;r&#10;Definition&#10;    post(\Base $f3, $params)&#10;&#10;Description&#10;     create / update a record&#10;&#10;Parameters:&#10;    \Base $f3&#10;    array $params;;d42,49;;b1,0;;m\Base $f3;;parray $params;;p">
</treenode>
</treenode>
<treenode node="Result;PHP:Class Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Result.php;f0;32;1;75;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Result.php;f0;32;1;75;;;;vpos;;v;;r&#10;Definition&#10;    class Result&#10;&#10;Description&#10;     Result object given by a { link Query} performed on a database.;;d13,32;;b0,0;;m">
<treenode node="count;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Result.php;f8;41;2;44;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Result.php;f8;41;2;44;;;;vpos;;vint;;r&#10;Definition&#10;    count ()&#10;&#10;Description&#10;     Count the number of rows in the result set.;;d1,42;;b1,0;;m">
</treenode>
<treenode node="fetch;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Result.php;f8;51;2;54;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Result.php;f8;51;2;54;;;;vpos;;varray;;r&#10;Definition&#10;    fetch ()&#10;&#10;Description&#10;     Get the new row in a result set;;d1,52;;b1,0;;m">
</treenode>
<treenode node="fetchAll;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Result.php;f8;61;2;64;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Result.php;f8;61;2;64;;;;vpos;;varray;;r&#10;Definition&#10;    fetchAll ()&#10;&#10;Description&#10;     Get all rows in the result set;;d1,62;;b1,0;;m">
</treenode>
<treenode node="insertId;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Database\Result.php;f8;71;2;74;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Database\Result.php;f8;71;2;74;;;;vpos;;vint;;r&#10;Definition&#10;    insertId ()&#10;&#10;Description&#10;     After an INSERT query, get the ID that was inserted.;;d1,72;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Schema;PHP:Class Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\test\schema.php;f0;4;1;675;;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f0;27;1;461;;;;vpos;;vController;;c;;r;;d0,5;;b0,0;;m">
<treenode node="DT_BOOL;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f0;116;15;116;;;;vpos;;v;;r$unique ? &apos;UNIQUE INDEX&apos; : &apos;INDEX&apos;;;d-1,-1;;b0,0;;m">
<treenode node="DT_BOOLEAN;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f0;117;18;117;;;;vpos;;v;;r$this-&gt;db-&gt;quotekey($this-&gt;name);;d-1,-1;;b0,0;;m">
<treenode node="db;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f23;378;25;378;;;;vpos;;v;;r$this-&gt;db-&gt;quotekey($name);;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="DT_INT1;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f0;118;15;118;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="DT_TINYINT;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f0;119;18;119;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="DT_INT2;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f0;120;15;120;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="DB_Utils;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f4;304;13;304;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="DT_SMALLINT;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f0;121;19;121;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="db;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f69;242;71;242;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="dataTypes;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f42;295;51;295;;;;vpos;;v;;r$this-&gt;findQuery($this-&gt;dataTypes[strtoupper($colType)]);;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="db;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f26;243;28;243;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="db;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f52;243;54;243;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TableBuilder;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f48;255;61;255;;;;vpos;;v;;r$this-&gt;findQuery($cmd);;d-1,-1;;b0,0;;m">
<treenode node="db;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f47;259;49;259;;;;vpos;;v;;rarray(&#10;            &apos;mysql|ibm|sqlite2?|pgsql|sybase|dblib&apos; =&gt;&#10;                &apos;DROP TABLE IF EXISTS &apos;.$this-&gt;db-&gt;quotekey($name).&apos;;s&apos;,&#10;            &apos;mssql|sqlsrv|odbc&apos; =&gt;&#10;                &quot;IF OBJECT_ID(&apos;[$name]&apos;, &apos;U&apos;) IS NOT NULL DROP TABLE [$name];s&quot;&#10;        );;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="name;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f27;256;31;256;;;;vpos;;v;;r$name-&gt;name;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
</treenode>
<treenode node="TableBuilder;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f48;274;61;274;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="db;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f41;278;43;278;;;;vpos;;v;;r$this-&gt;findQuery($cmd);;d-1,-1;;b0,0;;m">
<treenode node="db;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f38;280;40;280;;;;vpos;;v;;rarray(&#10;            &apos;mysql|ibm|pgsql|sybase|dblib|mssql|sqlsrv|odbc&apos; =&gt;&#10;                &apos;TRUNCATE TABLE &apos;.$this-&gt;db-&gt;quotekey($name).&apos;;s&apos;,&#10;            &apos;sqlite2?&apos; =&gt; array(&#10;                &apos;DELETE FROM &apos;.$this-&gt;db-&gt;quotekey($name).&apos;;s&apos;,&#10;//                &apos;UPDATE SQLITE_SEQUENCE SET seq = 0 WHERE name = &apos;.$this-&gt;db-&gt;quotekey($name).&apos;;s&apos;,&#10;            ),&#10;        );;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
<treenode node="name;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f27;275;31;275;;;;vpos;;v;;r$name-&gt;name;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
</treenode>
<treenode node="DT_INT4;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f0;122;15;122;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="DT_INT;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f0;123;14;123;;;;vpos;;v;;r$this-&gt;findQuery($cmd);;d-1,-1;;b0,0;;m">
<treenode node="DT_INT8;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f0;124;15;124;;;;vpos;;v;;rarray(&#10;                &apos;sqlite2?|pgsql&apos; =&gt;&#10;                    &quot;ALTER TABLE $name RENAME TO $new_name;s&quot;,&#10;                &apos;mysql|ibm&apos; =&gt;&#10;                    &quot;RENAME TABLE $name TO $new_name;s&quot;,&#10;                &apos;mssql|sqlsrv|sybase|dblib|odbc&apos; =&gt;&#10;                    &quot;sp_rename {$name}, $new_name&quot;&#10;            );;d-1,-1;;b0,0;;m">
<treenode node="db;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f36;230;38;230;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="DT_BIGINT;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f0;125;17;125;;;;vpos;;v;;r$this-&gt;dropTable($name, false);;d-1,-1;;b0,0;;m">
<treenode node="DT_FLOAT;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f0;126;16;126;;;;vpos;;v;;r&quot;SELECT * INTO $new_name FROM $name;s&quot;;;d-1,-1;;b0,0;;m">
<treenode node="db;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f40;226;42;226;;;;vpos;;v;;rarray();;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="DT_DOUBLE;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f0;127;17;127;;;;vpos;;v;;r$this-&gt;db-&gt;quotekey($new_name);;d-1,-1;;b0,0;;m">
<treenode node="db;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f23;224;25;224;;;;vpos;;v;;r$this-&gt;db-&gt;quotekey($name);;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="DT_DECIMAL;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f0;128;18;128;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="DT_VARCHAR128;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f0;129;21;129;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="DT_VARCHAR256;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f0;130;21;130;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="DT_VARCHAR512;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f0;131;21;131;;;;vpos;;v;;rarray_shift($table);;d-1,-1;;b0,0;;m">
<treenode node="db;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f25;188;27;188;;;;vpos;;v;;r$this-&gt;db-&gt;exec($query[0]);;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="DT_TEXT;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f0;132;15;132;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="DT_LONGTEXT;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f0;133;19;133;;;;vpos;;v;;r$this-&gt;findQuery($cmd);;d-1,-1;;b0,0;;m">
<treenode node="DT_DATE;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f0;134;15;134;;;;vpos;;v;;rarray(&#10;            &apos;mysql&apos; =&gt; array(&#10;                &quot;show tables&quot;),&#10;            &apos;sqlite2?&apos; =&gt; array(&#10;                &quot;SELECT name FROM sqlite_master WHERE type=&apos;table&apos; AND name!=&apos;sqlite_sequence&apos;&quot;),&#10;            &apos;pgsql|sybase|dblib&apos; =&gt; array(&#10;                &quot;select table_name from information_schema.tables where table_schema = &apos;public&apos;&quot;),&#10;            &apos;mssql|sqlsrv|odbc&apos; =&gt; array(&#10;                &quot;select table_name from information_schema.tables&quot;),&#10;            &apos;ibm&apos; =&gt; array(&quot;select TABLE_NAME from sysibm.tables&quot;),&#10;        );;d-1,-1;;b0,0;;m">
<treenode node="DT_DATETIME;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f0;135;19;135;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="DT_TIMESTAMP;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f0;136;20;136;;;;vpos;;v;;rarray_shift($db);;d-1,-1;;b0,0;;m">
<treenode node="DT_BLOB;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f0;137;15;137;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="db;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f25;162;27;162;;;;vpos;;v;;r$this-&gt;db-&gt;exec($query);;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="DT_BINARY;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f0;138;17;138;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="DB;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f33;144;35;144;;;;vpos;;v;;r$this-&gt;findQuery($cmd);;d-1,-1;;b0,0;;m">
<treenode node="SQL;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f36;144;39;144;;;;vpos;;v;;rarray(&#10;            &apos;mysql&apos; =&gt; &apos;SHOW DATABASES&apos;,&#10;            &apos;pgsql&apos; =&gt; &apos;SELECT datname FROM pg_catalog.pg_database&apos;,&#10;            &apos;mssql|sybase|dblib|sqlsrv|odbc&apos; =&gt; &apos;EXEC SP_HELPDB&apos;,&#10;        );;d-1,-1;;b0,0;;m">
<treenode node="db;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f15;146;17;146;;;;vpos;;v;;r$db;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
</treenode>
<treenode node="DF_CURRENT_TIMESTAMP;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f0;141;28;141;;;;vpos;;v;;r&apos;CUR_STAMP&apos;;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
<treenode node="name;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f59;377;63;377;;;;vpos;;v;;r$this-&gt;assembleIndexKey($index_cols,$this-&gt;name);;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TEXT_NoDefaultForTEXT;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f0;312;29;312;;;;vpos;;v;;rimplode(&apos;,&apos;, $quotedCols);;d-1,-1;;b0,0;;m">
<treenode node="columns;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f41;348;48;348;;;;vpos;;v;;r&apos;(&apos;.$length.&apos;)&apos;;;d-1,-1;;b0,0;;m">
<treenode node="db;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f45;371;47;371;;;;vpos;;v;;rarray_map(array($this-&gt;db, &apos;quotekey&apos;), $index_cols);;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="pkeys;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f25;355;30;355;;;;vpos;;v;;rarray($index_cols);;d-1,-1;;b0,0;;m">
<treenode node="columns;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f22;357;29;357;;;;vpos;;v;;r&amp; $column;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="pkeys;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f61;355;66;355;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
<treenode node="self;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f34;349;38;349;;;;vpos;;v;;r$val;;d-1,-1;;b0,0;;m">
<treenode node="TEXT_ColumnExists;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f40;349;57;349;;;;vpos;;v;;rnew Column($key, $this);;d-1,-1;;b0,0;;m">
<treenode node="E_USER_ERROR;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f64;349;76;349;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
</treenode>
</treenode>
<treenode node="Schema;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f38;319;45;319;;;;vpos;;v;;r$key-&gt;name;;d-1,-1;;b0,0;;m">
<treenode node="Column;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f27;344;34;344;;;;vpos;;v;;r$key-&gt;getColumnArray();;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="columns;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f15;323;22;323;;;;vpos;;v;;rarray();;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="db;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f15;327;17;327;;;;vpos;;v;;rTRUE);;d-1,-1;;b0,0;;m">
<treenode node="db;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f29;327;31;327;;;;vpos;;v;;r$schema-&gt;db;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
<treenode node="increments;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f15;326;25;326;;;;vpos;;v;;r&apos;id&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="name;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f15;321;19;321;;;;vpos;;v;;r$name;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="pkeys;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f15;325;20;325;;;;vpos;;v;;rarray(&apos;id&apos;);;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="queries;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f15;324;22;324;;;;vpos;;v;;rarray();;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="schema;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f15;322;21;322;;;;vpos;;v;;r$schema;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
<treenode node="TEXT_ColumnExists;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f0;313;25;313;;;;vpos;;v;;r&quot;Cannot add the column `%s`. It already exists.&quot;;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
</treenode>
</treenode>
<treenode node="assembleIndexKey;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f11;396;2;405;;;;vpos;;vstring;;r&#10;Definition&#10;    assembleIndexKey($index_cols,$table_name)&#10;&#10;Description&#10;     create index name from one or more given column names, max. 64 char lengths&#10;&#10;Parameters:&#10;    string|array $index_cols;;d62,396;;b2,0;;mindex_cols;;ptable_name;;p">
</treenode>
<treenode node="get;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\test\schema.php;f4;34;5;70;;;;vpos;;v;;r;;d4,35;;b0,0;;m">
</treenode>
<treenode node="getTestDesc;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\test\schema.php;f12;29;5;32;;;;vpos;;v;;r;;d4,30;;b3,0;;mtext;;p">
</treenode>
<treenode node="getTime;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\test\schema.php;f12;22;5;27;;;;vpos;;v;;r;;d4,23;;b3,0;;m">
</treenode>
<treenode node="init;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\test\schema.php;f8;15;2;20;;;;vpos;;v;;r;;d24,15;;b0,5;;m">
</treenode>
<treenode node="primary;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f11;412;5;459;;;;vpos;;vbool;;r&#10;Definition&#10;    primary($pkeys)&#10;&#10;Description&#10;     set primary / composite key to table&#10;&#10;Parameters:&#10;    string|array $pkeys;;d36,412;;b1,0;;mstring|array $pkeys;;p">
</treenode>
<treenode node="runTestSuite;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\test\schema.php;f12;72;5;673;;;;vpos;;v;;r;;d4,73;;b3,0;;mdb;;p">
</treenode>
</treenode>
<treenode node="Select;PHP:Class Name;C:\xampp\htdocs\claims-fab\app\inc\template\tags\select.php;f0;19;1;59;;;;vpos;;vTagHandler;;c;;r&#10;Definition&#10;    class Select extends \Template\TagHandler&#10;&#10;Description&#10;     Select TagHandler;;d42,19;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\inc\template\tags\select.php;f1;21;2;27;;;;vpos;;v;;r;;d24,21;;b0,0;;m">
</treenode>
<treenode node="build;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\inc\template\tags\select.php;f1;35;2;58;;;;vpos;;vstring;;r&#10;Definition&#10;    build($attr, $content)&#10;&#10;Description&#10;     build tag string&#10;&#10;Parameters:&#10;     $attr&#10;     $content;;d33,35;;b0,0;;m $attr;;p $content;;p">
</treenode>
</treenode>
<treenode node="Session;PHP:Class Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\sql\session.php;f0;25;1;216;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\mongo\session.php;f0;25;1;189;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\jig\session.php;f0;25;1;189;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\session.php;f0;23;1;191;;;;vpos;;vMapper;;c;;r;;d29,25;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\sql\session.php;f1;168;2;214;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\mongo\session.php;f1;168;2;187;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\jig\session.php;f1;168;2;187;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\session.php;f1;170;2;189;;;;vpos;;v;;r&#10;Definition&#10;    __construct(\DB\SQL $db,$table=&apos;sessions&apos;,$force=TRUE,$onsuspect=NULL,$key=NULL)&#10;&#10;Description&#10;     Instantiate class&#10;&#10;Parameters:&#10;     $db - \DB\SQL&#10;     $table - string&#10;     $force - bool&#10;     $onsuspect - callback&#10;     $key - string;;d91,168;;b0,0;;m $db;;p $table;;p $force;;p $onsuspect;;p $key;;p">
</treenode>
<treenode node="agent;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\sql\session.php;f1;156;2;158;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\mongo\session.php;f1;157;2;159;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\jig\session.php;f1;157;2;159;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\session.php;f1;161;2;163;;;;vpos;;vstring;;r&#10;Definition&#10;    agent()&#10;&#10;Description&#10;     Return HTTP user agent;;d18,156;;b0,0;;m">
</treenode>
<treenode node="cleanup;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\sql\session.php;f1;113;2;116;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\mongo\session.php;f1;114;2;117;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\jig\session.php;f1;114;2;117;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\session.php;f1;117;2;120;;;;vpos;;vTRUE;;r&#10;Definition&#10;    cleanup($max)&#10;&#10;Description&#10;     Garbage collector&#10;&#10;Parameters:&#10;     $max - int;;d24,113;;b0,0;;m $max;;p">
</treenode>
<treenode node="close;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\sql\session.php;f1;53;2;57;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\mongo\session.php;f1;53;2;57;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\jig\session.php;f1;53;2;57;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\session.php;f1;53;2;56;;;;vpos;;vTRUE;;r&#10;Definition&#10;    close()&#10;&#10;Description&#10;     Close session;;d18,53;;b0,0;;m">
</treenode>
<treenode node="csrf;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\sql\session.php;f1;130;2;132;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\mongo\session.php;f1;131;2;133;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\jig\session.php;f1;131;2;133;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\session.php;f1;134;2;136;;;;vpos;;vstring;;r&#10;Definition&#10;    csrf()&#10;&#10;Description&#10;     Return anti-CSRF token;;d17,130;;b0,0;;m">
</treenode>
<treenode node="destroy;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\sql\session.php;f1;103;2;106;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\mongo\session.php;f1;104;2;107;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\jig\session.php;f1;104;2;107;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\session.php;f1;107;2;110;;;;vpos;;vTRUE;;r&#10;Definition&#10;    destroy($id)&#10;&#10;Description&#10;     Destroy session&#10;&#10;Parameters:&#10;     $id - string;;d23,103;;b0,0;;m $id;;p">
</treenode>
<treenode node="ip;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\sql\session.php;f1;138;2;140;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\mongo\session.php;f1;139;2;141;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\jig\session.php;f1;139;2;141;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\session.php;f1;142;2;144;;;;vpos;;vstring;;r&#10;Definition&#10;    ip()&#10;&#10;Description&#10;     Return IP address;;d15,138;;b0,0;;m">
</treenode>
<treenode node="open;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\sql\session.php;f1;45;2;47;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\mongo\session.php;f1;45;2;47;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\jig\session.php;f1;45;2;47;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\session.php;f1;45;2;47;;;;vpos;;vTRUE;;r&#10;Definition&#10;    open($path,$name)&#10;&#10;Description&#10;     Open session&#10;&#10;Parameters:&#10;     $path - string&#10;     $name - string;;d28,45;;b0,0;;m $path;;p $name;;p">
</treenode>
<treenode node="read;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\sql\session.php;f1;64;2;80;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\mongo\session.php;f1;64;2;81;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\jig\session.php;f1;64;2;81;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\session.php;f1;63;2;79;;;;vpos;;vstring;;r&#10;Definition&#10;    read($id)&#10;&#10;Description&#10;     Return session data in serialized format&#10;&#10;Parameters:&#10;     $id - string;;d20,64;;b0,0;;m $id;;p">
</treenode>
<treenode node="sid;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\sql\session.php;f1;122;2;124;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\mongo\session.php;f1;123;2;125;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\jig\session.php;f1;123;2;125;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\session.php;f1;126;2;128;;;;vpos;;vstring;;r&#10;Definition&#10;    sid()&#10;&#10;Description&#10;     Return session id (if session has started)&#10;&#10;Return:&#10;   |NULL;;d16,122;;b0,0;;m">
</treenode>
<treenode node="stamp;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\sql\session.php;f1;146;2;150;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\mongo\session.php;f1;147;2;151;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\jig\session.php;f1;147;2;151;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\session.php;f1;150;2;155;;;;vpos;;vstring;;r&#10;Definition&#10;    stamp()&#10;&#10;Description&#10;     Return Unix timestamp&#10;&#10;Return:&#10;   |FALSE;;d18,146;;b0,0;;m">
</treenode>
<treenode node="write;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\sql\session.php;f1;88;2;96;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\mongo\session.php;f1;89;2;97;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\jig\session.php;f1;89;2;97;;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\session.php;f1;87;2;100;;;;vpos;;vTRUE;;r&#10;Definition&#10;    write($id,$data)&#10;&#10;Description&#10;     Write session data&#10;&#10;Parameters:&#10;     $id - string&#10;     $data - string;;d27,88;;b0,0;;m $id;;p $data;;p">
</treenode>
</treenode>
<treenode node="Settings;PHP:Class Name;C:\xampp\htdocs\claims-fab\app\controller\settings.php;f0;5;1;61;;;;vpos;;vBase;;c;;r;;d28,5;;b0,0;;m">
<treenode node="beforeroute;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\controller\settings.php;f8;8;2;11;;;;vpos;;v;;r;;d34,8;;b1,0;;mf3;;p">
</treenode>
<treenode node="database;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\controller\settings.php;f8;39;2;59;;;;vpos;;v;;r;;d39,39;;b1,0;;mf3;;p">
</treenode>
<treenode node="general;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\controller\settings.php;f8;13;2;37;;;;vpos;;v;;r;;d38,13;;b1,0;;mf3;;p">
</treenode>
</treenode>
<treenode node="Setup;PHP:Class Name;C:\xampp\htdocs\claims-fab\app\inc\setup.php;f0;15;1;105;;;;vpos;;vPrefab;;c;;r&#10;Definition&#10;    class Setup extends \Prefab&#10;&#10;Description&#10;     Setup Helper;;d28,15;;b0,0;;m">
<treenode node="install;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\inc\setup.php;f8;59;2;85;;;;vpos;;v;;r&#10;Definition&#10;    install($db_type)&#10;&#10;Description&#10;     install database&#10;&#10;Parameters:&#10;     $db_type;;d35,59;;b1,0;;m $db_type;;p">
</treenode>
<treenode node="preflight;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\inc\setup.php;f8;21;2;53;;;;vpos;;varray;;r&#10;Definition&#10;    preflight()&#10;&#10;Description&#10;     check environment for requirements;;d29,21;;b1,0;;m">
</treenode>
<treenode node="uninstall;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\inc\setup.php;f8;90;2;103;;;;vpos;;v;;r&#10;Definition&#10;    uninstall()&#10;&#10;Description&#10;     uninstall database;;d1,91;;b1,0;;m">
</treenode>
</treenode>
<treenode node="SMTP;PHP:Class Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\smtp.php;f0;23;1;352;;;;vpos;;vMagic;;c;;r;;d25,23;;b0,0;;m">
<treenode node="E_Header;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\smtp.php;f0;27;10;27;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="E_Blank;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\smtp.php;f0;28;9;28;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="E_Attach;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\smtp.php;f0;29;10;29;;;;vpos;;v;;r&apos;Attachment %s not found&apos;;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
</treenode>
<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\smtp.php;f1;337;2;350;;;;vpos;;v;;r&#10;Definition&#10;    __construct(&#10;		$host=&apos;localhost&apos;,$port=25,$scheme=NULL,$user=NULL,$pw=NULL,$ctx=NULL)&#10;&#10;Description&#10;     Instantiate class&#10;&#10;Parameters:&#10;     $host - string&#10;     $port - int&#10;     $scheme - string&#10;     $user - string&#10;     $pw - string&#10;     $ctx - resource;;d73,338;;b0,0;;m $host;;p $port;;p $scheme;;p $user;;p $pw;;p $ctx;;p">
</treenode>
<treenode node="attach;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\smtp.php;f1;169;2;175;;;;vpos;;vNULL;;r&#10;Definition&#10;    attach($file,$alias=NULL,$cid=NULL)&#10;&#10;Description&#10;     Add e-mail attachment&#10;&#10;Parameters:&#10;     $file - string&#10;     $alias - string&#10;     $cid - string;;d46,169;;b0,0;;m $file;;p $alias;;p $cid;;p">
</treenode>
<treenode node="clear;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\smtp.php;f1;104;2;107;;;;vpos;;vNULL;;r&#10;Definition&#10;    clear($key)&#10;&#10;Description&#10;     Remove header&#10;&#10;Parameters:&#10;     $key - string;;d22,104;;b0,0;;m $key;;p">
</treenode>
<treenode node="dialog;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\smtp.php;f11;124;2;160;;;;vpos;;vstring;;r&#10;Definition&#10;    dialog($cmd=NULL,$log=TRUE,$mock=FALSE)&#10;&#10;Description&#10;     Send SMTP command and record server response&#10;&#10;Parameters:&#10;     $cmd - string&#10;     $log - bool|string&#10;     $mock - bool;;d60,124;;b2,0;;m $cmd;;p $log;;p $mock;;p">
</treenode>
<treenode node="exists;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\smtp.php;f1;69;2;72;;;;vpos;;vbool;;r&#10;Definition&#10;    exists($key)&#10;&#10;Description&#10;     Return TRUE if header exists&#10;&#10;Parameters:&#10;     $key;;d23,69;;b0,0;;m $key;;p">
</treenode>
<treenode node="get;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\smtp.php;f1;90;2;97;;;;vpos;;vstring;;r&#10;Definition&#10;    &amp;get($key)&#10;&#10;Description&#10;     Return value of e-mail header&#10;&#10;Parameters:&#10;     $key - string&#10;&#10;Return:&#10;   |NULL;;d21,90;;b0,0;;m $key;;p">
</treenode>
<treenode node="log;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\smtp.php;f1;113;2;115;;;;vpos;;vstring;;r&#10;Definition&#10;    log()&#10;&#10;Description&#10;     Return client-server conversation history;;d16,113;;b0,0;;m">
</treenode>
<treenode node="send;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\smtp.php;f1;184;2;326;;;;vpos;;vbool;;r&#10;Definition&#10;    send($message,$log=TRUE,$mock=FALSE)&#10;&#10;Description&#10;     Transmit message&#10;&#10;Parameters:&#10;     $message - string&#10;     $log - bool|string&#10;     $mock - bool;;d47,184;;b0,0;;m $message;;p $log;;p $mock;;p">
</treenode>
<treenode node="set;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\smtp.php;f1;80;2;83;;;;vpos;;vstring;;r&#10;Definition&#10;    set($key,$val)&#10;&#10;Description&#10;     Bind value to e-mail header&#10;&#10;Parameters:&#10;     $key - string&#10;     $val - string;;d25,80;;b0,0;;m $key;;p $val;;p">
</treenode>
</treenode>
<treenode node="SQL;PHP:Class Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\sql.php;f0;25;1;522;;;;vpos;;v;;r;;d10,25;;b0,0;;m">
<treenode node="E_PKey;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\sql.php;f0;29;8;29;;;;vpos;;v;;r&apos;Table %s does not have a primary key&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PARAM_FLOAT;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\sql.php;f0;33;13;33;;;;vpos;;v;;r&apos;float&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__call;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\sql.php;f1;493;2;495;;;;vpos;;vmixed;;r&#10;Definition&#10;    __call($func,array $args)&#10;&#10;Description&#10;     Redirect call to PDO object&#10;&#10;Parameters:&#10;     $func - string&#10;     $args - array;;d36,493;;b0,0;;m $func;;p $args;;p">
</treenode>
<treenode node="__clone;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\sql.php;f9;498;2;499;;;;vpos;;v;;r;;d28,498;;b3,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\sql.php;f1;508;2;520;;;;vpos;;v;;r&#10;Definition&#10;    __construct($dsn,$user=NULL,$pw=NULL,array $options=NULL)&#10;&#10;Description&#10;     Instantiate class&#10;&#10;Parameters:&#10;     $dsn - string&#10;     $user - string&#10;     $pw - string&#10;     $options - array;;d68,508;;b0,0;;m $dsn;;p $user;;p $pw;;p $options;;p">
</treenode>
<treenode node="begin;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\sql.php;f1;57;2;61;;;;vpos;;vbool;;r&#10;Definition&#10;    begin()&#10;&#10;Description&#10;     Begin SQL transaction;;d18,57;;b0,0;;m">
</treenode>
<treenode node="commit;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\sql.php;f1;77;2;81;;;;vpos;;vbool;;r&#10;Definition&#10;    commit()&#10;&#10;Description&#10;     Commit SQL transaction;;d19,77;;b0,0;;m">
</treenode>
<treenode node="count;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\sql.php;f1;276;2;278;;;;vpos;;vint;;r&#10;Definition&#10;    count()&#10;&#10;Description&#10;     Return number of rows affected by last query;;d18,276;;b0,0;;m">
</treenode>
<treenode node="driver;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\sql.php;f1;445;2;447;;;;vpos;;vstring;;r&#10;Definition&#10;    driver()&#10;&#10;Description&#10;     Return database engine;;d19,445;;b0,0;;m">
</treenode>
<treenode node="exec;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\sql.php;f1;147;2;270;;;;vpos;;varray;;r&#10;Definition&#10;    exec($cmds,$args=NULL,$ttl=0,$log=TRUE,$stamp=FALSE)&#10;&#10;Description&#10;     Execute SQL statement(s)&#10;&#10;Parameters:&#10;     $cmds - string|array&#10;     $args - string|array&#10;     $ttl - int|array&#10;     $log - bool&#10;     $stamp - bool&#10;&#10;Return:&#10;   |int|FALSE;;d63,147;;b0,0;;m $cmds;;p $args;;p $ttl;;p $log;;p $stamp;;p">
</treenode>
<treenode node="exists;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\sql.php;f1;296;2;303;;;;vpos;;vbool;;r&#10;Definition&#10;    exists($table)&#10;&#10;Description&#10;     Return TRUE if table exists&#10;&#10;Parameters:&#10;     $table - string;;d25,296;;b0,0;;m $table;;p">
</treenode>
<treenode node="log;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\sql.php;f1;285;2;289;;;;vpos;;vstring;;r&#10;Definition&#10;    log($flag=TRUE)&#10;&#10;Description&#10;     Return SQL profiler results (or disable logging)&#10;&#10;Parameters:&#10;     $flag - bool;;d26,285;;b0,0;;m $flag;;p">
</treenode>
<treenode node="name;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\sql.php;f1;461;2;463;;;;vpos;;vstring;;r&#10;Definition&#10;    name()&#10;&#10;Description&#10;     Return database name;;d17,461;;b0,0;;m">
</treenode>
<treenode node="pdo;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\sql.php;f1;437;2;439;;;;vpos;;v;;r&#10;Definition&#10;    pdo()&#10;&#10;Description&#10;     Return parent object;;d16,437;;b0,0;;m">
</treenode>
<treenode node="quote;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\sql.php;f1;417;2;423;;;;vpos;;vstring;;r&#10;Definition&#10;    quote($val,$type=\PDO::PARAM_STR)&#10;&#10;Description&#10;     Quote string&#10;&#10;Parameters:&#10;     $val - mixed&#10;     $type - int;;d44,417;;b0,0;;m $val;;p $type;;p">
</treenode>
<treenode node="quotekey;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\sql.php;f1;471;2;485;;;;vpos;;vstring;;r&#10;Definition&#10;    quotekey($key, $split=TRUE)&#10;&#10;Description&#10;     Return quoted identifier name&#10;&#10;Parameters:&#10;     $key&#10;    bool $split;;d38,471;;b0,0;;m $key;;pbool $split;;p">
</treenode>
<treenode node="rollback;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\sql.php;f1;67;2;71;;;;vpos;;vbool;;r&#10;Definition&#10;    rollback()&#10;&#10;Description&#10;     Rollback SQL transaction;;d21,67;;b0,0;;m">
</treenode>
<treenode node="schema;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\sql.php;f1;312;2;409;;;;vpos;;varray;;r&#10;Definition&#10;    schema($table,$fields=NULL,$ttl=0)&#10;&#10;Description&#10;     Retrieve schema of SQL table&#10;&#10;Parameters:&#10;     $table - string&#10;     $fields - array|string&#10;     $ttl - int|array&#10;&#10;Return:&#10;   |FALSE;;d45,312;;b0,0;;m $table;;p $fields;;p $ttl;;p">
</treenode>
<treenode node="trans;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\sql.php;f1;87;2;89;;;;vpos;;vbool;;r&#10;Definition&#10;    trans()&#10;&#10;Description&#10;     Return transaction flag;;d18,87;;b0,0;;m">
</treenode>
<treenode node="type;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\sql.php;f1;96;2;111;;;;vpos;;vint;;r&#10;Definition&#10;    type($val)&#10;&#10;Description&#10;     Map data type of argument to a PDO constant&#10;&#10;Parameters:&#10;     $val - scalar;;d21,96;;b0,0;;m $val;;p">
</treenode>
<treenode node="uuid;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\sql.php;f1;429;2;431;;;;vpos;;vstring;;r&#10;Definition&#10;    uuid()&#10;&#10;Description&#10;     Return UUID;;d17,429;;b0,0;;m">
</treenode>
<treenode node="value;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\sql.php;f1;119;2;136;;;;vpos;;vmixed;;r&#10;Definition&#10;    value($type,$val)&#10;&#10;Description&#10;     Cast value to PHP type&#10;&#10;Parameters:&#10;     $type - string&#10;     $val - mixed;;d28,119;;b0,0;;m $type;;p $val;;p">
</treenode>
<treenode node="version;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\db\sql.php;f1;453;2;455;;;;vpos;;vstring;;r&#10;Definition&#10;    version()&#10;&#10;Description&#10;     Return server version;;d20,453;;b0,0;;m">
</treenode>
</treenode>
<treenode node="SSP;PHP:Class Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\examples\server_side\scripts\ssp.class.php;f0;25;1;388;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\examples\server_side\scripts\ssp.class.php;f0;25;1;388;;;;vpos;;v;;r;;d10,25;;b0,0;;m">
<treenode node="bind;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\examples\server_side\scripts\ssp.class.php;f8;356;2;367;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\examples\server_side\scripts\ssp.class.php;f8;356;2;367;;;;vpos;;vstring;;r&#10;Definition&#10;    bind ( &amp;$a, $val, $type )&#10;&#10;Description&#10;     Create a PDO binding key which can be used for escaping variables safely when executing a query with sql_exec()&#10;&#10;Parameters:&#10;    array - &amp;$a    Array of bindings&#10;    &#10;    int $type - PDO field type&#10;&#10;Return:&#10;   Bound key to be used in the SQL where this parameter;;d1,357;;b0,5;;marray;;p;;pint $type;;p">
</treenode>
<treenode node="data_output;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\examples\server_side\scripts\ssp.class.php;f8;33;2;56;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\examples\server_side\scripts\ssp.class.php;f8;33;2;56;;;;vpos;;varray;;r&#10;Definition&#10;    data_output ( $columns, $data )&#10;&#10;Description&#10;     Create the data output array for the DataTables rows&#10;&#10;Parameters:&#10;    array $columns - Column information array&#10;    array $data - Data from the SQL get&#10;&#10;Return:&#10;   Formatted data in a row based format;;d1,34;;b0,5;;marray $columns;;parray $data;;p">
</treenode>
<treenode node="fatal;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\examples\server_side\scripts\ssp.class.php;f8;337;2;344;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\examples\server_side\scripts\ssp.class.php;f8;337;2;344;;;;vpos;;v;;r&#10;Definition&#10;    fatal ( $msg )&#10;&#10;Description&#10;     Throw a fatal error.&#10;&#10;Parameters:&#10;    string $msg - Message to send to the client;;d1,338;;b0,5;;mstring $msg;;p">
</treenode>
<treenode node="filter;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\examples\server_side\scripts\ssp.class.php;f8;136;2;190;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\examples\server_side\scripts\ssp.class.php;f8;136;2;190;;;;vpos;;vstring;;r&#10;Definition&#10;    filter ( $request, $columns, &amp;$bindings )&#10;&#10;Description&#10;     Searching / Filtering&#10;&#10;Parameters:&#10;    array $request - Data sent to server by DataTables&#10;    array $columns - Column information array&#10;    array $bindings - Array of values for PDO bindings, used in the&#10;&#10;Return:&#10;   SQL where clause;;d1,137;;b0,5;;marray $request;;parray $columns;;parray $bindings;;p">
</treenode>
<treenode node="limit;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\examples\server_side\scripts\ssp.class.php;f8;68;2;77;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\examples\server_side\scripts\ssp.class.php;f8;68;2;77;;;;vpos;;vstring;;r&#10;Definition&#10;    limit ( $request, $columns )&#10;&#10;Description&#10;     Paging&#10;&#10;Parameters:&#10;    array $request - Data sent to server by DataTables&#10;    array $columns - Column information array&#10;&#10;Return:&#10;   SQL limit clause;;d1,69;;b0,5;;marray $request;;parray $columns;;p">
</treenode>
<treenode node="order;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\examples\server_side\scripts\ssp.class.php;f8;89;2;118;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\examples\server_side\scripts\ssp.class.php;f8;89;2;118;;;;vpos;;vstring;;r&#10;Definition&#10;    order ( $request, $columns )&#10;&#10;Description&#10;     Ordering&#10;&#10;Parameters:&#10;    array $request - Data sent to server by DataTables&#10;    array $columns - Column information array&#10;&#10;Return:&#10;   SQL order by clause;;d1,90;;b0,5;;marray $request;;parray $columns;;p">
</treenode>
<treenode node="pluck;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\examples\server_side\scripts\ssp.class.php;f8;378;2;387;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\examples\server_side\scripts\ssp.class.php;f8;378;2;387;;;;vpos;;varray;;r&#10;Definition&#10;    pluck ( $a, $prop )&#10;&#10;Description&#10;     Pull a particular property from each assoc. array in a numeric array, returning and array of the property values from each item.&#10;&#10;Parameters:&#10;    array $a - Array to get data from&#10;    string $prop - Property to read&#10;&#10;Return:&#10;   Array of property values;;d1,379;;b0,5;;marray $a;;pstring $prop;;p">
</treenode>
<treenode node="simple;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\examples\server_side\scripts\ssp.class.php;f8;207;2;249;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\examples\server_side\scripts\ssp.class.php;f8;207;2;249;;;;vpos;;varray;;r&#10;Definition&#10;    simple ( $request, $sql_details, $table, $primaryKey, $columns )&#10;&#10;Description&#10;     Perform the SQL queries needed for an server-side processing requested, utilising the helper functions of this class, limit(), order() and filter() among others. The returned array is ready to be encoded as JSON in response to an SSP request, or can be modified if needed before sending back to the client.&#10;&#10;Parameters:&#10;    array $request - Data sent to server by DataTables&#10;    array $sql_details - SQL connection details - see sql_connect()&#10;    string $table - SQL table to query&#10;    string $primaryKey - Primary key of the table&#10;    array $columns - Column information array&#10;&#10;Return:&#10;   Server-side processing response array;;d1,208;;b0,5;;marray $request;;parray $sql_details;;pstring $table;;pstring $primaryKey;;parray $columns;;p">
</treenode>
<treenode node="sql_connect;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\examples\server_side\scripts\ssp.class.php;f8;263;2;281;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\examples\server_side\scripts\ssp.class.php;f8;263;2;281;;;;vpos;;vresource;;r&#10;Definition&#10;    sql_connect ( $sql_details )&#10;&#10;Description&#10;     Connect to the database&#10;&#10;Parameters:&#10;    array $sql_details - SQL server connection details array, with the&#10;&#10;Return:&#10;   Database connection handle;;d1,264;;b0,5;;marray $sql_details;;p">
</treenode>
<treenode node="sql_exec;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\examples\server_side\scripts\ssp.class.php;f8;294;2;322;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\examples\server_side\scripts\ssp.class.php;f8;294;2;322;;;;vpos;;varray;;r&#10;Definition&#10;    sql_exec ( $db, $bindings, $sql=null )&#10;&#10;Description&#10;     Execute an SQL query on the database&#10;&#10;Parameters:&#10;    resource $db - Database handler&#10;    array $bindings - Array of PDO binding values from bind() to be&#10;    string $sql - SQL query to execute&#10;&#10;Return:&#10;   Result from the query (all rows);;d1,295;;b0,5;;mresource $db;;parray $bindings;;pstring $sql;;p">
</treenode>
</treenode>
<treenode node="StaticMap;PHP:Class Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\web\google\staticmap.php;f0;25;1;64;;;;vpos;;v;;r;;d16,25;;b0,0;;m">
<treenode node="URL_Static;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\web\google\staticmap.php;f0;29;12;29;;;;vpos;;v;;r&apos;http://maps.googleapis.com/maps/api/staticmap&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__call;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\web\google\staticmap.php;f1;41;2;44;;;;vpos;;vobject;;r&#10;Definition&#10;    __call($func,array $args)&#10;&#10;Description&#10;     Specify API key-value pair via magic call&#10;&#10;Parameters:&#10;     $func - string&#10;     $args - array;;d36,41;;b0,0;;m $func;;p $args;;p">
</treenode>
<treenode node="dump;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\web\google\staticmap.php;f1;50;2;62;;;;vpos;;vstring;;r&#10;Definition&#10;    dump()&#10;&#10;Description&#10;     Generate map;;d17,50;;b0,0;;m">
</treenode>
</treenode>
<treenode node="Storage;PHP:Class Name;C:\xampp\htdocs\claims-fab\app\inc\storage.php;f0;16;1;57;;;;vpos;;vPrefab;;c;;r&#10;Definition&#10;    class Storage extends Prefab&#10;&#10;Description&#10;     storage.php - just a little DB Object creator The contents of this file are subject to the terms of the GNU General Public License Version 3.0. You may not use this file except in compliance with the license. Any of the license terms and conditions can be waived if you get permission from the copyright holder. Copyright (c) 2013 ~ ikkez Christian Knuth &lt;ikkez0n3 gmail.com&gt; version 0.2.0 date: 31.10.13;;d29,16;;b0,0;;m">
<treenode node="get;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\inc\storage.php;f8;18;2;49;;;;vpos;;v;;r;;d28,18;;b1,0;;mtype;;p">
</treenode>
<treenode node="update;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\inc\storage.php;f8;51;2;55;;;;vpos;;v;;r;;d37,51;;b1,0;;mtype;;pconf;;p">
</treenode>
</treenode>
<treenode node="TableCreator;PHP:Class Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f0;463;1;548;;;;vpos;;vTableBuilder;;c;;r;;d40,463;;b0,0;;m">
<treenode node="TEXT_TableAlreadyExists;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f0;466;31;466;;;;vpos;;v;;r&quot;Table `%s` already exists. Cannot create it.&quot;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="addIndex;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f11;538;5;546;;;;vpos;;v;;r&#10;Definition&#10;    addIndex($columns, $unique = FALSE, $length = 20)&#10;&#10;Description&#10;     create index on one or more columns&#10;&#10;Parameters:&#10;    string|array $columns - Column(s) to be indexed&#10;    bool $unique - Unique index&#10;    int $length - index length for text fields in mysql;;d4,539;;b1,0;;mstring|array $columns;;pbool $unique;;pint $length;;p">
</treenode>
<treenode node="build;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f11;480;5;530;;;;vpos;;vbool;;r&#10;Definition&#10;    build($exec = TRUE)&#10;&#10;Description&#10;     generate SQL query for creating a basic table, containing an ID serial field and execute it if $exec is true, otherwise just return the generated query string&#10;&#10;Parameters:&#10;    bool $exec&#10;&#10;Return:&#10;   |TableModifier|string;;d4,481;;b1,0;;mbool $exec;;p">
</treenode>
<treenode node="setCharset;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f11;470;5;472;;;;vpos;;v;;r;;d37,470;;b1,0;;mstr;;p">
</treenode>
</treenode>
<treenode node="TableModifier;PHP:Class Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f0;551;1;1037;;;;vpos;;vTableBuilder;;c;;r;;d41,551;;b0,0;;m">
<treenode node="TEXT_TableNotExisting;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f0;558;29;558;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="schema;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f28;721;34;721;;;;vpos;;v;;r$this-&gt;schema-&gt;alterTable($oname);;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TEXT_NotNullFieldNeedsDefault;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f0;559;37;559;;;;vpos;;v;;rexplode(&apos;__&apos;, $name);;d-1,-1;;b0,0;;m">
<treenode node="name;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f29;571;33;571;;;;vpos;;v;;rexplode(&apos;___&apos;, $name);;d-1,-1;;b0,0;;m">
<treenode node="schema;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f42;571;48;571;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="self;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f34;572;38;572;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="columns;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f24;581;31;581;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="nullable;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f55;584;63;584;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="rebuild_cmd;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f49;694;60;694;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="rebuild_cmd;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f52;695;63;695;;;;vpos;;v;;r$cdat;;d-1,-1;;b0,0;;m">
<treenode node="Column;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f36;697;43;697;;;;vpos;;v;;r$cdat-&gt;getColumnArray();;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="rebuild_cmd;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f31;696;42;696;;;;vpos;;v;;r$this-&gt;rebuild_cmd[&apos;update&apos;][$name];;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
</treenode>
<treenode node="self;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f38;585;42;585;;;;vpos;;v;;rarray_key_exists($name, $rename) ? $rename[$name] : $name;;d-1,-1;;b0,0;;m">
<treenode node="name;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f24;687;28;687;;;;vpos;;v;;r$this-&gt;name;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="queries;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f15;688;22;688;;;;vpos;;v;;r$this-&gt;rename($oname.&apos;_temp&apos;, false);;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="schema;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f27;689;33;689;;;;vpos;;v;;r$this-&gt;schema-&gt;createTable($oname);;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TEXT_NotNullFieldNeedsDefault;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f44;585;73;585;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="name;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f84;585;88;585;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="E_USER_ERROR;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f90;585;102;585;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
<treenode node="queries;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f15;615;22;615;;;;vpos;;v;;rimplode(&apos;___&apos;,$col);;d-1,-1;;b0,0;;m">
<treenode node="columns;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f24;617;31;617;;;;vpos;;v;;rexplode(&apos;__&apos;, $col[1]);;d-1,-1;;b0,0;;m">
<treenode node="index;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f25;618;30;618;;;;vpos;;v;;r$this-&gt;queries[0];;d-1,-1;;b0,0;;m">
<treenode node="queries;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f25;620;32;620;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="unique;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f49;619;55;619;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
<treenode node="name;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f43;671;47;671;;;;vpos;;v;;rexplode(&apos;___&apos;, $col);;d-1,-1;;b0,0;;m">
<treenode node="name;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f50;672;54;672;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
<treenode node="queries;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f34;624;41;624;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="suppress;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f26;625;34;625;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="after;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f31;641;36;641;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="after;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f32;642;37;642;;;;vpos;;v;;r$cname;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="rebuild_cmd;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f33;644;44;644;;;;vpos;;v;;r$this-&gt;listIndex();;d-1,-1;;b0,0;;m">
<treenode node="pkey;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f22;651;26;651;;;;vpos;;v;;r$col;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="rebuild_cmd;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f82;644;93;644;;;;vpos;;v;;r$col;;d-1,-1;;b0,0;;m">
<treenode node="rebuild_cmd;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f27;645;38;645;;;;vpos;;v;;r(!empty($this-&gt;rebuild_cmd) &amp;&amp; array_key_exists(&apos;rename&apos;,$this-&gt;rebuild_cmd))&#10;                  ? $this-&gt;rebuild_cmd[&apos;rename&apos;] : array();;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
</treenode>
</treenode>
<treenode node="db;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f22;626;24;626;;;;vpos;;v;;rarray();;d-1,-1;;b0,0;;m">
<treenode node="queries;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f38;626;45;626;;;;vpos;;v;;r$this-&gt;getCols(true);;d-1,-1;;b0,0;;m">
<treenode node="db;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f56;626;58;626;;;;vpos;;v;;r$this-&gt;columns;;d-1,-1;;b0,0;;m">
<treenode node="columns;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f32;627;39;627;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="rebuild_cmd;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f49;627;60;627;;;;vpos;;v;;rarray();;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
<treenode node="queries;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f72;626;79;626;;;;vpos;;v;;r($this-&gt;suppress)&#10;            ? @$this-&gt;db-&gt;exec($this-&gt;queries) : $this-&gt;db-&gt;exec($this-&gt;queries);;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
</treenode>
</treenode>
<treenode node="name;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f75;663;79;663;;;;vpos;;v;;r$this-&gt;db-&gt;quotekey($this-&gt;name.&apos;_insert&apos;);;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="queries;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f35;664;42;664;;;;vpos;;v;;r&apos;DROP TRIGGER IF EXISTS &apos;.$incrementTrigger;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
</treenode>
<treenode node="queries;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f44;615;51;615;;;;vpos;;v;;rarray_merge($this-&gt;queries,$additional_queries);;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
<treenode node="type;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f79;589;83;589;;;;vpos;;v;;r$sqlite_queries;;d-1,-1;;b0,0;;m">
<treenode node="queries;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f23;609;30;609;;;;vpos;;v;;r$this-&gt;findQuery($cmd);;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="rebuild_cmd;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f42;613;53;613;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="self;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f38;590;42;590;;;;vpos;;v;;rarray(&#10;                    &apos;mysql|pgsql|mssql|sybase|dblib|odbc|sqlsrv&apos; =&gt;&#10;                        &quot;ALTER TABLE $table ADD $col_query;s&quot;,&#10;                    &apos;ibm&apos; =&gt;&#10;                        &quot;ALTER TABLE $table ADD COLUMN $col_query;s&quot;,&#10;                );;d-1,-1;;b0,0;;m">
<treenode node="TEXT_NoDefaultForTEXT;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f44;590;65;590;;;;vpos;;v;;r&quot;ALTER TABLE $table ADD $col_query;s&quot;;;d-1,-1;;b0,0;;m">
<treenode node="db;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f28;593;30;593;;;;vpos;;v;;r$column-&gt;getColumnQuery();;d-1,-1;;b0,0;;m">
<treenode node="name;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f48;593;52;593;;;;vpos;;v;;r$this-&gt;db-&gt;quotekey($this-&gt;name);;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
<treenode node="name;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f76;590;80;590;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="E_USER_ERROR;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f82;590;94;590;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
<treenode node="Schema;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f39;597;46;597;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="DF_CURRENT_TIMESTAMP;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f48;597;68;597;;;;vpos;;v;;rtrue;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
<treenode node="TEXT_TableNotExisting;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f40;572;61;572;;;;vpos;;v;;rarray();;d-1,-1;;b0,0;;m">
<treenode node="name;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f70;572;74;572;;;;vpos;;v;;rfalse;;d-1,-1;;b0,0;;m">
<treenode node="db;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f54;574;56;574;;;;vpos;;v;;rarray();;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="E_USER_ERROR;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f76;572;88;572;;;;vpos;;v;;rTRUE)&#10;    {&#10;        // check if table exists&#10;        if (!in_array($this-&gt;name, $this-&gt;schema-&gt;getTables()))&#10;            trigger_error(sprintf(self::TEXT_TableNotExisting, $this-&gt;name),E_USER_ERROR);;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
<treenode node="queries;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f37;578;44;578;;;;vpos;;v;;r$this-&gt;queries;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
<treenode node="TEXT_ENGINE_NOT_SUPPORTED;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f0;560;33;560;;;;vpos;;v;;r&apos;DB Engine `%s` is not supported for this action.&apos;;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
</treenode>
<treenode node="_sqlite_increment_trigger;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f11;750;5;762;;;;vpos;;varray;;r&#10;Definition&#10;    _sqlite_increment_trigger($pkey)&#10;&#10;Description&#10;     create an insert trigger to work-a-round auto-incrementation in composite primary keys&#10;&#10;Parameters:&#10;     $pkey;;d53,750;;b1,0;;m $pkey;;p">
</treenode>
<treenode node="addIndex;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f11;943;5;952;;;;vpos;;v;;r&#10;Definition&#10;    addIndex($columns, $unique = FALSE, $length = 20)&#10;&#10;Description&#10;     create index on one or more columns&#10;&#10;Parameters:&#10;    string|array $columns - Column(s) to be indexed&#10;    bool $unique - Unique index&#10;    int $length - index length for text fields in mysql;;d4,944;;b1,0;;mstring|array $columns;;pbool $unique;;pint $length;;p">
</treenode>
<treenode node="drop;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f11;1033;5;1035;;;;vpos;;vmixed;;r&#10;Definition&#10;    drop($exec = true)&#10;&#10;Description&#10;     drop this table&#10;&#10;Parameters:&#10;    bool $exec;;d39,1033;;b1,0;;mbool $exec;;p">
</treenode>
<treenode node="dropColumn;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f11;818;5;839;;;;vpos;;vbool;;r&#10;Definition&#10;    dropColumn($name)&#10;&#10;Description&#10;     removes a column from a table&#10;&#10;Parameters:&#10;    string $name;;d4,819;;b1,0;;mstring $name;;p">
</treenode>
<treenode node="dropIndex;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f11;958;5;976;;;;vpos;;v;;r&#10;Definition&#10;    dropIndex($name)&#10;&#10;Description&#10;     drop a column index&#10;&#10;Parameters:&#10;    string|array $name;;d4,959;;b1,0;;mstring|array $name;;p">
</treenode>
<treenode node="getCols;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f11;769;5;800;;;;vpos;;varray;;r&#10;Definition&#10;    getCols($types = false)&#10;&#10;Description&#10;     get columns of a table&#10;&#10;Parameters:&#10;    bool $types;;d4,770;;b1,0;;mbool $types;;p">
</treenode>
<treenode node="isCompatible;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f11;808;5;811;;;;vpos;;vbool;;r&#10;Definition&#10;    isCompatible($colType,$column)&#10;&#10;Description&#10;     check if a data type is compatible with an existing column type&#10;&#10;Parameters:&#10;    string $colType - (i&#10;    string $column - (i;;d51,808;;b1,0;;mstring $colType;;pstring $column;;p">
</treenode>
<treenode node="listIndex;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f11;982;5;1014;;;;vpos;;varray;;r&#10;Definition&#10;    listIndex()&#10;&#10;Description&#10;     returns table indexes as assoc array;;d4,983;;b1,0;;m">
</treenode>
<treenode node="rename;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f11;1022;5;1026;;;;vpos;;v;;r&#10;Definition&#10;    rename($new_name, $exec = true)&#10;&#10;Description&#10;     rename this table&#10;&#10;Parameters:&#10;    string $new_name&#10;    bool $exec;;d52,1022;;b1,0;;mstring $new_name;;pbool $exec;;p">
</treenode>
<treenode node="renameColumn;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f11;847;5;881;;;;vpos;;vvoid;;r&#10;Definition&#10;    renameColumn($name, $new_name)&#10;&#10;Description&#10;     rename a column&#10;&#10;Parameters:&#10;     $name&#10;     $new_name;;d4,848;;b1,0;;m $name;;p $new_name;;p">
</treenode>
<treenode node="updateColumn;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-schema-builder\lib\db\sql\schema.php;f11;889;5;935;;;;vpos;;v;;r&#10;Definition&#10;    updateColumn($name, $datatype, $force = false)&#10;&#10;Description&#10;     modifies column datatype&#10;&#10;Parameters:&#10;    string $name&#10;    string|Column $datatype&#10;    bool $force;;d4,890;;b1,0;;mstring $name;;pstring|Column $datatype;;pbool $force;;p">
</treenode>
</treenode>
<treenode node="Tag;PHP:Class Name;C:\xampp\htdocs\claims-fab\app\model\tag.php;f0;4;1;32;;C:\xampp\htdocs\claims-fab\app\controller\tag.php;f0;4;1;40;;;;vpos;;vBase;;c;;r;;d23,4;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\controller\tag.php;f8;6;2;9;;;;vpos;;v;;r;;d31,6;;b1,0;;m">
</treenode>
<treenode node="getList;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\controller\tag.php;f8;16;2;32;;;;vpos;;v;;r&#10;Definition&#10;    getList(\Base $f3, $params)&#10;&#10;Description&#10;     get a list of tags&#10;&#10;Parameters:&#10;    \Base $f3&#10;    array $params;;d45,16;;b1,0;;m\Base $f3;;parray $params;;p">
</treenode>
<treenode node="set_title;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\model\tag.php;f11;25;5;30;;;;vpos;;v;;r&#10;Definition&#10;    set_title($val)&#10;&#10;Description&#10;     magic setter for title;;d4,26;;b1,0;;mval;;p">
</treenode>
<treenode node="tagCloud;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\controller\tag.php;f8;34;2;39;;;;vpos;;v;;r;;d28,34;;b1,0;;m">
</treenode>
</treenode>
<treenode node="TagHandler;PHP:Class Name;C:\xampp\htdocs\claims-fab\app\inc\template\taghandler.php;f9;19;1;136;;;;vpos;;vPrefab;;c;;r&#10;Definition&#10;    class TagHandler extends \Prefab&#10;&#10;Description&#10;     Abstract TagHandler for creating own Tag-Element-Renderer;;d42,19;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\inc\template\taghandler.php;f1;24;2;26;;;;vpos;;v;;r;;d24,24;;b0,0;;m">
</treenode>
<treenode node="attrExport;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\inc\template\taghandler.php;f11;118;2;135;;;;vpos;;vmixed;;r&#10;Definition&#10;    attrExport($attr)&#10;&#10;Description&#10;     export resolved attribute values for further processing samples: value			=&gt; [&apos;value&apos;] {{ foo}}			=&gt; [$foo] value-{{ foo}}	=&gt; [&apos;value-&apos;.$foo] foo[bar][]		=&gt; [&apos;foo&apos;][&apos;bar&apos;][] foo[{{ bar}}][]	=&gt; [&apos;foo&apos;][$bar][]&#10;&#10;Parameters:&#10;     $attr&#10;&#10;Return:&#10;   |string;;d38,118;;b2,0;;m $attr;;p">
</treenode>
<treenode node="build;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\inc\template\taghandler.php;f10;34;40;34;;;;vpos;;vstring;;r&#10;Description&#10;     build tag string&#10;&#10;Parameters:&#10;     $attr&#10;     $content;;d-1,-1;;b0,0;;m $attr;;p $content;;p">
</treenode>
<treenode node="render;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\inc\template\taghandler.php;f15;41;2;48;;;;vpos;;vstring;;r&#10;Definition&#10;    render($node)&#10;&#10;Description&#10;     incoming call to render the given node&#10;&#10;Parameters:&#10;     $node;;d38,41;;b1,5;;m $node;;p">
</treenode>
<treenode node="resolveContent;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\inc\template\taghandler.php;f11;56;2;58;;;;vpos;;vstring;;r&#10;Definition&#10;    resolveContent($node, $attr)&#10;&#10;Description&#10;     render the inner content&#10;&#10;Parameters:&#10;    array $node&#10;    array $node;;d49,56;;b2,0;;marray $node;;parray $node;;p">
</treenode>
<treenode node="resolveParams;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\inc\template\taghandler.php;f11;65;2;84;;;;vpos;;vstring;;r&#10;Definition&#10;    resolveParams(array $params)&#10;&#10;Description&#10;     general bypass for unhandled tag attributes&#10;&#10;Parameters:&#10;    array $params;;d49,65;;b2,0;;marray $params;;p">
</treenode>
<treenode node="tokenExport;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\inc\template\taghandler.php;f11;92;2;104;;;;vpos;;vstring;;r&#10;Definition&#10;    tokenExport($val)&#10;&#10;Description&#10;     export a stringified token variable to handle mixed attribute values correctly&#10;&#10;Parameters:&#10;     $val;;d38,92;;b2,0;;m $val;;p">
</treenode>
</treenode>
<treenode node="TagModel;PHP:Class Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\test\tagmodel.php;f0;2;1;18;;;;vpos;;vCortex;;c;;r;;d34,2;;b0,0;;m">
</treenode>
<treenode node="Template;PHP:Class Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\template.php;f0;23;1;352;;;;vpos;;vPreview;;c;;r;;d31,23;;b0,0;;m">
<treenode node="E_Method;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\template.php;f0;27;10;27;;;;vpos;;v;;r&apos;Call to undefined method %s()&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__call;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\template.php;f1;257;2;263;;;;vpos;;vstring;;r&#10;Definition&#10;    __call($func,array $args)&#10;&#10;Description&#10;     Call custom tag handler&#10;&#10;Parameters:&#10;     $func - string&#10;     $args - array&#10;&#10;Return:&#10;   |FALSE;;d36,257;;b0,0;;m $func;;p $args;;p">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\template.php;f1;342;2;350;;;;vpos;;v;;r&#10;Definition&#10;    __construct()&#10;&#10;Description&#10;     Class constructor return object;;d24,342;;b0,0;;m">
</treenode>
<treenode node="_case;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\template.php;f11;201;2;212;;;;vpos;;vstring;;r&#10;Definition&#10;    _case(array $node)&#10;&#10;Description&#10;     Template -case- tag handler&#10;&#10;Parameters:&#10;     $node - array;;d39,201;;b2,0;;m $node;;p">
</treenode>
<treenode node="_check;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\template.php;f11;143;2;159;;;;vpos;;vstring;;r&#10;Definition&#10;    _check(array $node)&#10;&#10;Description&#10;     Template -check- tag handler&#10;&#10;Parameters:&#10;     $node - array;;d40,143;;b2,0;;m $node;;p">
</treenode>
<treenode node="_default;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\template.php;f11;219;2;224;;;;vpos;;vstring;;r&#10;Definition&#10;    _default(array $node)&#10;&#10;Description&#10;     Template -default- tag handler&#10;&#10;Parameters:&#10;     $node - array;;d42,219;;b2,0;;m $node;;p">
</treenode>
<treenode node="_exclude;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\template.php;f11;86;2;88;;;;vpos;;vstring;;r&#10;Definition&#10;    _exclude()&#10;&#10;Description&#10;     Template -exclude- tag handler;;d31,86;;b2,0;;m">
</treenode>
<treenode node="_false;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\template.php;f11;175;2;177;;;;vpos;;vstring;;r&#10;Definition&#10;    _false(array $node)&#10;&#10;Description&#10;     Template -false- tag handler&#10;&#10;Parameters:&#10;     $node - array;;d40,175;;b2,0;;m $node;;p">
</treenode>
<treenode node="_ignore;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\template.php;f11;95;2;97;;;;vpos;;vstring;;r&#10;Definition&#10;    _ignore(array $node)&#10;&#10;Description&#10;     Template -ignore- tag handler&#10;&#10;Parameters:&#10;     $node - array;;d41,95;;b2,0;;m $node;;p">
</treenode>
<treenode node="_include;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\template.php;f11;56;2;80;;;;vpos;;vstring;;r&#10;Definition&#10;    _include(array $node)&#10;&#10;Description&#10;     Template -include- tag handler&#10;&#10;Parameters:&#10;     $node - array;;d42,56;;b2,0;;m $node;;p">
</treenode>
<treenode node="_loop;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\template.php;f11;104;2;114;;;;vpos;;vstring;;r&#10;Definition&#10;    _loop(array $node)&#10;&#10;Description&#10;     Template -loop- tag handler&#10;&#10;Parameters:&#10;     $node - array;;d39,104;;b2,0;;m $node;;p">
</treenode>
<treenode node="_repeat;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\template.php;f11;121;2;136;;;;vpos;;vstring;;r&#10;Definition&#10;    _repeat(array $node)&#10;&#10;Description&#10;     Template -repeat- tag handler&#10;&#10;Parameters:&#10;     $node - array;;d41,121;;b2,0;;m $node;;p">
</treenode>
<treenode node="_set;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\template.php;f11;41;2;49;;;;vpos;;vstring;;r&#10;Definition&#10;    _set(array $node)&#10;&#10;Description&#10;     Template -set- tag handler&#10;&#10;Parameters:&#10;     $node - array;;d38,41;;b2,0;;m $node;;p">
</treenode>
<treenode node="_switch;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\template.php;f11;184;2;194;;;;vpos;;vstring;;r&#10;Definition&#10;    _switch(array $node)&#10;&#10;Description&#10;     Template -switch- tag handler&#10;&#10;Parameters:&#10;     $node - array;;d41,184;;b2,0;;m $node;;p">
</treenode>
<treenode node="_true;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\template.php;f11;166;2;168;;;;vpos;;vstring;;r&#10;Definition&#10;    _true(array $node)&#10;&#10;Description&#10;     Template -true- tag handler&#10;&#10;Parameters:&#10;     $node - array;;d39,166;;b2,0;;m $node;;p">
</treenode>
<treenode node="build;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\template.php;f1;231;2;238;;;;vpos;;vstring;;r&#10;Definition&#10;    build($node)&#10;&#10;Description&#10;     Assemble markup&#10;&#10;Parameters:&#10;     $node - array|string;;d23,231;;b0,0;;m $node;;p">
</treenode>
<treenode node="extend;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\template.php;f1;246;2;249;;;;vpos;;vNULL;;r&#10;Definition&#10;    extend($tag,$func)&#10;&#10;Description&#10;     Extend template with custom tag&#10;&#10;Parameters:&#10;     $tag - string&#10;     $func - callback;;d29,246;;b0,0;;m $tag;;p $func;;p">
</treenode>
<treenode node="parse;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\template.php;f1;270;2;336;;;;vpos;;varray;;r&#10;Definition&#10;    parse($text)&#10;&#10;Description&#10;     Parse string for template directives and tokens&#10;&#10;Parameters:&#10;     $text - string;;d23,270;;b0,0;;m $text;;p">
</treenode>
</treenode>
<treenode node="Test;PHP:Class Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\test.php;f0;23;1;95;;;;vpos;;v;;r;;d11,23;;b0,0;;m">
<treenode node="FLAG_False;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\test.php;f0;27;12;27;;;;vpos;;v;;r(bool)$cond;;d-1,-1;;b0,0;;m">
<treenode node="data;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\test.php;f16;43;20;43;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="FLAG_True;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\test.php;f0;28;11;28;;;;vpos;;v;;rTRUE;;d-1,-1;;b0,0;;m">
<treenode node="FLAG_Both;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\test.php;f0;29;11;29;;;;vpos;;v;;r2;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
<treenode node="passed;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\test.php;f16;51;22;51;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\test.php;f1;91;2;93;;;;vpos;;vNULL;;r&#10;Definition&#10;    __construct($level=self::FLAG_Both)&#10;&#10;Description&#10;     Class constructor&#10;&#10;Parameters:&#10;     $level - int;;d46,91;;b0,0;;m $level;;p">
</treenode>
<treenode node="message;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\test.php;f1;82;2;84;;;;vpos;;vNULL;;r&#10;Definition&#10;    message($text)&#10;&#10;Description&#10;     Append message to test results&#10;&#10;Parameters:&#10;     $text - string;;d25,82;;b0,0;;m $text;;p">
</treenode>
</treenode>
<treenode node="Test_Common;PHP:Class Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\test\test_common.php;f0;4;1;191;;;;vpos;;v;;r;;d18,4;;b0,0;;m">
<treenode node="run;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\test\test_common.php;f1;6;2;190;;;;vpos;;v;;r;;d1,7;;b0,0;;m">
</treenode>
</treenode>
<treenode node="Test_Filter;PHP:Class Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\test\test_filter.php;f0;4;1;355;;;;vpos;;v;;r;;d18,4;;b0,0;;m">
<treenode node="run;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\test\test_filter.php;f1;6;2;353;;;;vpos;;v;;r;;d1,7;;b0,0;;mdb;;ptype;;p">
</treenode>
</treenode>
<treenode node="Test_Relation;PHP:Class Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\test\test_relation.php;f0;4;1;437;;;;vpos;;v;;r;;d20,4;;b0,0;;m">
<treenode node="getResult;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\test\test_relation.php;f9;9;2;30;;;;vpos;;v;;r&#10;Definition&#10;    getResult($result)&#10;&#10;Description&#10;     unify results for better comparison;;d1,10;;b3,0;;mresult;;p">
</treenode>
<treenode node="run;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\test\test_relation.php;f1;32;2;436;;;;vpos;;v;;r;;d1,33;;b0,0;;mdb;;ptype;;p">
</treenode>
</treenode>
<treenode node="Test_Syntax;PHP:Class Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\test\test_syntax.php;f0;4;1;374;;;;vpos;;v;;r;;d18,4;;b0,0;;m">
<treenode node="getResult;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\test\test_syntax.php;f9;358;2;373;;;;vpos;;v;;r&#10;Definition&#10;    getResult($result)&#10;&#10;Description&#10;     unify results for better comparison;;d1,359;;b3,0;;mresult;;p">
</treenode>
<treenode node="run;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\ikkez\f3-cortex\test\test_syntax.php;f1;6;2;353;;;;vpos;;v;;r;;d1,7;;b0,0;;mdb;;ptype;;p">
</treenode>
</treenode>
<treenode node="User;PHP:Class Name;C:\xampp\htdocs\claims-fab\app\controller\user.php;f0;4;1;59;;C:\xampp\htdocs\claims-fab\app\model\user.php;f0;4;1;48;;;;vpos;;vBase;;c;;r;;d24,4;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\controller\user.php;f8;7;2;10;;;;vpos;;v;;r;;d31,7;;b1,0;;m">
</treenode>
<treenode node="delete;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\controller\user.php;f8;43;2;57;;;;vpos;;v;;r;;d44,43;;b1,0;;mf3;;pparams;;p">
</treenode>
<treenode node="getList;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\controller\user.php;f8;22;2;25;;;;vpos;;v;;r;;d43,22;;b1,0;;mf3;;pparam;;p">
</treenode>
<treenode node="getSingle;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\controller\user.php;f8;12;2;20;;;;vpos;;v;;r;;d47,12;;b1,0;;mf3;;pparams;;p">
</treenode>
<treenode node="post;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\controller\user.php;f8;27;2;41;;;;vpos;;v;;r;;d42,27;;b1,0;;mf3;;pparams;;p">
</treenode>
<treenode node="set_mail;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\model\user.php;f11;43;5;46;;;;vpos;;vnull;;r&#10;Definition&#10;    set_mail($val)&#10;&#10;Description&#10;     validate email address&#10;&#10;Parameters:&#10;     $val;;d35,43;;b1,0;;m $val;;p">
</treenode>
<treenode node="set_password;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\model\user.php;f11;18;5;36;;;;vpos;;vstring;;r&#10;Definition&#10;    set_password($val)&#10;&#10;Description&#10;     crypt password&#10;&#10;Parameters:&#10;     $val;;d39,18;;b1,0;;m $val;;p">
</treenode>
</treenode>
<treenode node="UserType;PHP:Class Name;C:\xampp\htdocs\claims-fab\app\model\usertype.php;f0;4;1;27;;;;vpos;;vBase;;c;;r;;d28,4;;b0,0;;m">
</treenode>
<treenode node="UTF;PHP:Class Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\utf.php;f0;23;1;198;;;;vpos;;vPrefab;;c;;r;;d25,23;;b0,0;;m">
<treenode node="bom;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\utf.php;f1;162;2;164;;;;vpos;;vstring;;r&#10;Definition&#10;    bom()&#10;&#10;Description&#10;     Return UTF-8 byte order mark;;d16,162;;b0,0;;m">
</treenode>
<treenode node="emojify;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\utf.php;f1;181;2;196;;;;vpos;;vstring;;r&#10;Definition&#10;    emojify($str)&#10;&#10;Description&#10;     Translate emoji tokens to Unicode font-supported symbols&#10;&#10;Parameters:&#10;     $str - string;;d24,181;;b0,0;;m $str;;p">
</treenode>
<treenode node="ltrim;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\utf.php;f1;136;2;138;;;;vpos;;vstring;;r&#10;Definition&#10;    ltrim($str)&#10;&#10;Description&#10;     Strip whitespaces from the beginning of a string&#10;&#10;Parameters:&#10;     $str - string;;d22,136;;b0,0;;m $str;;p">
</treenode>
<treenode node="rtrim;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\utf.php;f1;145;2;147;;;;vpos;;vstring;;r&#10;Definition&#10;    rtrim($str)&#10;&#10;Description&#10;     Strip whitespaces from the end of a string&#10;&#10;Parameters:&#10;     $str - string;;d22,145;;b0,0;;m $str;;p">
</treenode>
<treenode node="stripos;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\utf.php;f1;52;2;54;;;;vpos;;vint;;r&#10;Definition&#10;    stripos($stack,$needle,$ofs=0)&#10;&#10;Description&#10;     Find position of first occurrence of a string (case-insensitive)&#10;&#10;Parameters:&#10;     $stack - string&#10;     $needle - string&#10;     $ofs - int&#10;&#10;Return:&#10;   |FALSE;;d41,52;;b0,0;;m $stack;;p $needle;;p $ofs;;p">
</treenode>
<treenode node="stristr;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\utf.php;f1;78;2;80;;;;vpos;;vstring;;r&#10;Definition&#10;    stristr($stack,$needle,$before=FALSE)&#10;&#10;Description&#10;     Returns part of haystack string from the first occurrence of needle to the end of haystack (case-insensitive)&#10;&#10;Parameters:&#10;     $stack - string&#10;     $needle - string&#10;     $before - bool&#10;&#10;Return:&#10;   |FALSE;;d48,78;;b0,0;;m $stack;;p $needle;;p $before;;p">
</treenode>
<treenode node="strlen;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\utf.php;f1;30;2;33;;;;vpos;;vint;;r&#10;Definition&#10;    strlen($str)&#10;&#10;Description&#10;     Get string length&#10;&#10;Parameters:&#10;     $str - string;;d23,30;;b0,0;;m $str;;p">
</treenode>
<treenode node="strpos;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\utf.php;f1;64;2;68;;;;vpos;;vint;;r&#10;Definition&#10;    strpos($stack,$needle,$ofs=0,$case=FALSE)&#10;&#10;Description&#10;     Find position of first occurrence of a string&#10;&#10;Parameters:&#10;     $stack - string&#10;     $needle - string&#10;     $ofs - int&#10;     $case - bool&#10;&#10;Return:&#10;   |FALSE;;d52,64;;b0,0;;m $stack;;p $needle;;p $ofs;;p $case;;p">
</treenode>
<treenode node="strrev;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\utf.php;f1;40;2;43;;;;vpos;;vstring;;r&#10;Definition&#10;    strrev($str)&#10;&#10;Description&#10;     Reverse a string&#10;&#10;Parameters:&#10;     $str - string;;d23,40;;b0,0;;m $str;;p">
</treenode>
<treenode node="strstr;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\utf.php;f1;91;2;101;;;;vpos;;vstring;;r&#10;Definition&#10;    strstr($stack,$needle,$before=FALSE,$case=FALSE)&#10;&#10;Description&#10;     Returns part of haystack string from the first occurrence of needle to the end of haystack&#10;&#10;Parameters:&#10;     $stack - string&#10;     $needle - string&#10;     $before - bool&#10;     $case - bool&#10;&#10;Return:&#10;   |FALSE;;d59,91;;b0,0;;m $stack;;p $needle;;p $before;;p $case;;p">
</treenode>
<treenode node="substr;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\utf.php;f1;110;2;117;;;;vpos;;vstring;;r&#10;Definition&#10;    substr($str,$start,$len=0)&#10;&#10;Description&#10;     Return part of a string&#10;&#10;Parameters:&#10;     $str - string&#10;     $start - int&#10;     $len - int&#10;&#10;Return:&#10;   |FALSE;;d37,110;;b0,0;;m $str;;p $start;;p $len;;p">
</treenode>
<treenode node="substr_count;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\utf.php;f1;125;2;129;;;;vpos;;vint;;r&#10;Definition&#10;    substr_count($stack,$needle)&#10;&#10;Description&#10;     Count the number of substring occurrences&#10;&#10;Parameters:&#10;     $stack - string&#10;     $needle - string;;d39,125;;b0,0;;m $stack;;p $needle;;p">
</treenode>
<treenode node="translate;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\utf.php;f1;171;2;174;;;;vpos;;vstring;;r&#10;Definition&#10;    translate($str)&#10;&#10;Description&#10;     Convert code points to Unicode symbols&#10;&#10;Parameters:&#10;     $str - string;;d26,171;;b0,0;;m $str;;p">
</treenode>
<treenode node="trim;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\utf.php;f1;154;2;156;;;;vpos;;vstring;;r&#10;Definition&#10;    trim($str)&#10;&#10;Description&#10;     Strip whitespaces from the beginning and end of a string&#10;&#10;Parameters:&#10;     $str - string;;d21,154;;b0,0;;m $str;;p">
</treenode>
</treenode>
<treenode node="Validate;PHP:Class Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Validate.php;f0;110;1;735;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Validate.php;f0;110;1;735;;;;vpos;;v;;r&#10;Definition&#10;    class Validate&#10;&#10;Description&#10;     Validation methods for DataTables Editor fields.;;d15,110;;b0,0;;m">
<treenode node="__callStatic;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Validate.php;f15;125;2;136;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Validate.php;f15;125;2;136;;;;vpos;;v;;r&#10;Definition&#10;    __callStatic( $name, $arguments )&#10;&#10;Description&#10;     &quot;Magic&quot; method to automatically apply the required check to any of the static methods simply by adding &apos;_required&apos; or &apos;_empty&apos; to the end of the method&apos;s name, depending on if you need the field to be submitted or not.;;d58,125;;b1,5;;mname;;parguments;;p">
</treenode>
<treenode node="_common;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Validate.php;f15;177;2;202;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Validate.php;f15;177;2;202;;;;vpos;;v;;r&#10;Definition&#10;    _common( $val, $cfg )&#10;&#10;Description&#10;     Perform common validation using the configuration parameters;;d46,177;;b1,5;;mval;;pcfg;;p">
</treenode>
<treenode node="_extend;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Validate.php;f15;145;2;169;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Validate.php;f15;145;2;169;;;;vpos;;v;;r&#10;Definition&#10;    _extend( $userOpts, $prop, $fnOpts )&#10;&#10;Description&#10;     Extend the options from the user function and the validation function with core defaults.;;d61,145;;b1,5;;muserOpts;;pprop;;pfnOpts;;p">
</treenode>
<treenode node="basic;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Validate.php;f8;259;2;269;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Validate.php;f8;259;2;269;;;;vpos;;vstring;;r&#10;Definition&#10;    basic( $val, $data, $opts, $host )&#10;&#10;Description&#10;     Basic validation - this is used to perform the validation provided by the validation options only. If the validation options pass (e.g. `required`, `empty` and `optional`) then the validation will pass regardless of the actual value.&#10;&#10;Parameters:&#10;    string $val - The value to check for validity&#10;    string[] $data - The full data set submitted&#10;    array $opts - Validation options&#10;&#10;Return:&#10;   |true true if the value is valid, a string with an error;;d52,259;;b0,5;;mval;;pdata;;popts;;phost;;p">
</treenode>
<treenode node="boolean;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Validate.php;f15;347;2;361;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Validate.php;f15;347;2;361;;;;vpos;;vstring;;r&#10;Definition&#10;    boolean( $val, $data, $opts, $host )&#10;&#10;Description&#10;     Validate an input as a boolean value.&#10;&#10;Parameters:&#10;    string $val - The value to check for validity&#10;    string[] $data - The full data set submitted&#10;    array $opts - Validation options&#10;&#10;Return:&#10;   |true true if the value is valid, a string with an error;;d61,347;;b1,5;;mval;;pdata;;popts;;phost;;p">
</treenode>
<treenode node="dateFormat;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Validate.php;f15;660;2;675;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Validate.php;f15;660;2;675;;;;vpos;;vstring;;r&#10;Definition&#10;    dateFormat( $val, $data, $opts, $host )&#10;&#10;Description&#10;     Check that a valid date input is given&#10;&#10;Parameters:&#10;    string $val - The value to check for validity&#10;    string[] $data - The full data set submitted&#10;    array|string $opts - If given as a string, then $opts is the date&#10;&#10;Return:&#10;   |true true if the value is valid, a string with an error;;d64,660;;b1,5;;mval;;pdata;;popts;;phost;;p">
</treenode>
<treenode node="email;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Validate.php;f15;495;2;508;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Validate.php;f15;495;2;508;;;;vpos;;vstring;;r&#10;Definition&#10;    email( $val, $data, $opts, $host )&#10;&#10;Description&#10;     Validate an input as an e-mail address.&#10;&#10;Parameters:&#10;    string $val - The value to check for validity&#10;    string[] $data - The full data set submitted&#10;    array $opts - Validation options&#10;&#10;Return:&#10;   |true true if the value is valid, a string with an error;;d59,495;;b1,5;;mval;;pdata;;popts;;phost;;p">
</treenode>
<treenode node="ip;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Validate.php;f15;601;2;614;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Validate.php;f15;601;2;614;;;;vpos;;vstring;;r&#10;Definition&#10;    ip( $val, $data, $opts, $host )&#10;&#10;Description&#10;     Validate as an IP address.&#10;&#10;Parameters:&#10;    string $val - The value to check for validity&#10;    string[] $data - The full data set submitted&#10;    array $opts - Validation options&#10;&#10;Return:&#10;   |true true if the value is valid, a string with an error;;d56,601;;b1,5;;mval;;pdata;;popts;;phost;;p">
</treenode>
<treenode node="maxLen;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Validate.php;f15;554;2;568;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Validate.php;f15;554;2;568;;;;vpos;;vstring;;r&#10;Definition&#10;    maxLen( $val, $data, $opts, $host )&#10;&#10;Description&#10;     Validate a string does not exceed a maximum length.&#10;&#10;Parameters:&#10;    string $val - The value to check for validity&#10;    string[] $data - The full data set submitted&#10;    int|array $opts - Validation options&#10;&#10;Return:&#10;   |true true if the value is valid, a string with an error;;d60,554;;b1,5;;mval;;pdata;;popts;;phost;;p">
</treenode>
<treenode node="maxNum;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Validate.php;f15;435;2;450;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Validate.php;f15;435;2;450;;;;vpos;;vstring;;r&#10;Definition&#10;    maxNum ( $val, $data, $opts, $host )&#10;&#10;Description&#10;     Check for a numeric input and that it is less than a given value.&#10;&#10;Parameters:&#10;    string $val - The value to check for validity&#10;    string[] $data - The full data set submitted&#10;    int|array $opts - Validation options&#10;&#10;Return:&#10;   |true true if the value is valid, a string with an error;;d61,435;;b1,5;;mval;;pdata;;popts;;phost;;p">
</treenode>
<treenode node="minLen;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Validate.php;f15;524;2;538;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Validate.php;f15;524;2;538;;;;vpos;;vstring;;r&#10;Definition&#10;    minLen( $val, $data, $opts, $host )&#10;&#10;Description&#10;     Validate a string has a minimum length.&#10;&#10;Parameters:&#10;    string $val - The value to check for validity&#10;    string[] $data - The full data set submitted&#10;    int|array $opts - Validation options&#10;&#10;Return:&#10;   |true true if the value is valid, a string with an error;;d60,524;;b1,5;;mval;;pdata;;popts;;phost;;p">
</treenode>
<treenode node="minMaxLen;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Validate.php;f15;581;2;588;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Validate.php;f15;581;2;588;;;;vpos;;vstring;;r&#10;Definition&#10;    minMaxLen( $val, $data, $opts, $host )&#10;&#10;Description&#10;     Require a string with a certain minimum or maximum number of characters.&#10;&#10;Parameters:&#10;    string $val - The value to check for validity&#10;    string[] $data - The full data set submitted&#10;    int|array $opts - Validation options&#10;&#10;Return:&#10;   |true true if the value is valid, a string with an error;;d63,581;;b1,5;;mval;;pdata;;popts;;phost;;p">
</treenode>
<treenode node="minMaxNum;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Validate.php;f15;465;2;477;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Validate.php;f15;465;2;477;;;;vpos;;vstring;;r&#10;Definition&#10;    minMaxNum ( $val, $data, $opts, $host )&#10;&#10;Description&#10;     Check for a numeric input and that it is both greater and smaller than given numbers.&#10;&#10;Parameters:&#10;    string $val - The value to check for validity&#10;    string[] $data - The full data set submitted&#10;    int|array $opts - Validation options&#10;&#10;Return:&#10;   |true true if the value is valid, a string with an error;;d64,465;;b1,5;;mval;;pdata;;popts;;phost;;p">
</treenode>
<treenode node="minNum;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Validate.php;f15;406;2;421;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Validate.php;f15;406;2;421;;;;vpos;;vstring;;r&#10;Definition&#10;    minNum ( $val, $data, $opts, $host )&#10;&#10;Description&#10;     Check for a numeric input and that it is greater than a given value.&#10;&#10;Parameters:&#10;    string $val - The value to check for validity&#10;    string[] $data - The full data set submitted&#10;    int|array $opts - Validation options&#10;&#10;Return:&#10;   |true true if the value is valid, a string with an error;;d61,406;;b1,5;;mval;;pdata;;popts;;phost;;p">
</treenode>
<treenode node="none;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Validate.php;f15;218;2;220;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Validate.php;f15;218;2;220;;;;vpos;;vtrue;;r&#10;Definition&#10;    none( $val, $data, $opts, $host )&#10;&#10;Description&#10;     No validation - all inputs are valid.&#10;&#10;Parameters:&#10;    string $val - The value to check for validity&#10;    string[] $data - The full data set submitted&#10;    array $opts - Validation options;;d58,218;;b1,5;;mval;;pdata;;popts;;phost;;p">
</treenode>
<treenode node="notEmpty;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Validate.php;f8;321;2;334;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Validate.php;f8;321;2;334;;;;vpos;;vstring;;r&#10;Definition&#10;    notEmpty( $val, $data, $opts, $host )&#10;&#10;Description&#10;     Optional field, but if given there must be a non-empty value&#10;&#10;Parameters:&#10;    string $val - The value to check for validity&#10;    string[] $data - The full data set submitted&#10;    array $opts - Validation options&#10;&#10;Return:&#10;   |true true if the value is valid, a string with an error;;d55,321;;b0,5;;mval;;pdata;;popts;;phost;;p">
</treenode>
<treenode node="numeric;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Validate.php;f15;379;2;392;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Validate.php;f15;379;2;392;;;;vpos;;vstring;;r&#10;Definition&#10;    numeric ( $val, $data, $opts, $host )&#10;&#10;Description&#10;     Check that any input is numeric.&#10;&#10;Parameters:&#10;    string $val - The value to check for validity&#10;    string[] $data - The full data set submitted&#10;    array $opts - Validation options&#10;&#10;Return:&#10;   |true true if the value is valid, a string with an error;;d62,379;;b1,5;;mval;;pdata;;popts;;phost;;p">
</treenode>
<treenode node="required;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Validate.php;f8;290;2;300;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Validate.php;f8;290;2;300;;;;vpos;;vstring;;r&#10;Definition&#10;    required( $val, $data, $opts, $host )&#10;&#10;Description&#10;     Required field - there must be a value and it must be a non-empty value&#10;&#10;Parameters:&#10;    string $val - The value to check for validity&#10;    string[] $data - The full data set submitted&#10;    array $opts - Validation options&#10;&#10;Return:&#10;   |true true if the value is valid, a string with an error;;d55,290;;b0,5;;mval;;pdata;;popts;;phost;;p">
</treenode>
<treenode node="unique;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Validate.php;f15;695;2;734;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Validate.php;f15;695;2;734;;;;vpos;;vstring;;r&#10;Definition&#10;    unique( $val, $data, $opts, $host )&#10;&#10;Description&#10;     Check that the given value is unique in the database&#10;&#10;Parameters:&#10;    string $val - The value to check for validity&#10;    string[] $data - The full data set submitted&#10;    int|array $opts - Validation options&#10;&#10;Return:&#10;   |true true if the value is valid, a string with an error;;d60,695;;b1,5;;mval;;pdata;;popts;;phost;;p">
</treenode>
<treenode node="url;PHP:Function Name;C:\xampp\htdocs\claims-fab\ui\former\vendor\plugins\datatables\extensions\Editor\php\Editor\Validate.php;f15;627;2;640;;C:\xampp\htdocs\claims-fab\app\ui\vendor\plugins\datatables\extensions\Editor\php\Editor\Validate.php;f15;627;2;640;;;;vpos;;vstring;;r&#10;Definition&#10;    url( $val, $data, $opts, $host )&#10;&#10;Description&#10;     Validate as an URL address.&#10;&#10;Parameters:&#10;    string $val - The value to check for validity&#10;    string[] $data - The full data set submitted&#10;    array $opts - Validation options&#10;&#10;Return:&#10;   |true true if the value is valid, a string with an error;;d57,627;;b1,5;;mval;;pdata;;popts;;phost;;p">
</treenode>
</treenode>
<treenode node="Validation;PHP:Class Name;C:\xampp\htdocs\claims-fab\app\inc\validation.php;f0;3;1;88;;;;vpos;;vPrefab;;c;;r;;d33,3;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\inc\validation.php;f1;7;2;9;;;;vpos;;v;;r;;d24,7;;b0,0;;m">
</treenode>
<treenode node="email;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\inc\validation.php;f1;63;2;86;;;;vpos;;vbool;;r&#10;Definition&#10;    email($val, $context=null, $mx=true)&#10;&#10;Description&#10;     validate email address&#10;&#10;Parameters:&#10;    string $val&#10;    string $context&#10;    bool $mx;;d47,63;;b0,0;;mstring $val;;pstring $context;;pbool $mx;;p">
</treenode>
<treenode node="required;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\inc\validation.php;f1;18;2;27;;;;vpos;;vbool;;r&#10;Definition&#10;    required($val, $field, $context=null)&#10;&#10;Description&#10;     check if a model field is empty, but required&#10;&#10;Parameters:&#10;    mixed $val&#10;    string $field&#10;    string $context;;d48,18;;b0,0;;mmixed $val;;pstring $field;;pstring $context;;p">
</treenode>
<treenode node="unique;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\inc\validation.php;f1;37;2;54;;;;vpos;;vbool;;r&#10;Definition&#10;    unique($model, $val, $field, $context=null)&#10;&#10;Description&#10;     check if a model field value is unique&#10;&#10;Parameters:&#10;    \DB\Cortex $model&#10;    mixed $val&#10;    string $field&#10;    string $context;;d54,37;;b0,0;;m\DB\Cortex $model;;pmixed $val;;pstring $field;;pstring $context;;p">
</treenode>
</treenode>
<treenode node="Verification;PHP:Class Name;C:\xampp\htdocs\claims-fab\app\view\verification.php;f0;4;1;38;;;;vpos;;vBase;;c;;r;;d32,4;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\view\verification.php;f8;9;2;24;;;;vpos;;v;;r;;d31,9;;b1,0;;m">
</treenode>
<treenode node="render;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\view\verification.php;f8;30;2;36;;;;vpos;;v;;r;;d26,30;;b1,0;;m">
</treenode>
<treenode node="setTemplate;PHP:Function Name;C:\xampp\htdocs\claims-fab\app\view\verification.php;f8;26;2;28;;;;vpos;;v;;r;;d40,26;;b1,0;;mfilepath;;p">
</treenode>
</treenode>
<treenode node="View;PHP:Class Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f0;2695;1;2815;;;;vpos;;vPrefab;;c;;r;;d26,2695;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;2712;2;2714;;;;vpos;;v;;r;;d24,2712;;b0,0;;m">
</treenode>
<treenode node="afterrender;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;2811;2;2813;;;;vpos;;v;;r&#10;Definition&#10;    afterrender($func)&#10;&#10;Description&#10;     post rendering handler&#10;&#10;Parameters:&#10;     $func - callback;;d29,2811;;b0,0;;m $func;;p">
</treenode>
<treenode node="esc;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;2721;2;2727;;;;vpos;;vstring;;r&#10;Definition&#10;    esc($arg)&#10;&#10;Description&#10;     Encode characters to equivalent HTML entities&#10;&#10;Parameters:&#10;     $arg - mixed;;d20,2721;;b0,0;;m $arg;;p">
</treenode>
<treenode node="raw;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;2734;2;2740;;;;vpos;;vstring;;r&#10;Definition&#10;    raw($arg)&#10;&#10;Description&#10;     Decode HTML entities to equivalent characters&#10;&#10;Parameters:&#10;     $arg - mixed;;d20,2734;;b0,0;;m $arg;;p">
</treenode>
<treenode node="render;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f1;2784;2;2805;;;;vpos;;vstring;;r&#10;Definition&#10;    render($file,$mime=&apos;text/html&apos;,array $hive=NULL,$ttl=0)&#10;&#10;Description&#10;     Render template&#10;&#10;Parameters:&#10;     $file - string&#10;     $mime - string&#10;     $hive - array&#10;     $ttl - int;;d66,2784;;b0,0;;m $file;;p $mime;;p $hive;;p $ttl;;p">
</treenode>
<treenode node="sandbox;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\base.php;f11;2748;2;2774;;;;vpos;;vstring;;r&#10;Definition&#10;    sandbox(array $hive=NULL,$mime=NULL)&#10;&#10;Description&#10;     Create sandbox for template execution&#10;&#10;Parameters:&#10;     $hive - array&#10;     $mime - string;;d57,2748;;b2,0;;m $hive;;p $mime;;p">
</treenode>
</treenode>
<treenode node="Web;PHP:Class Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\web.php;f0;23;1;910;;;;vpos;;vPrefab;;c;;r;;d25,23;;b0,0;;m">
<treenode node="E_Request;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\web.php;f0;27;11;27;;;;vpos;;v;;r&apos;No suitable HTTP request engine found&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="_curl;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\web.php;f11;269;2;327;;;;vpos;;varray;;r&#10;Definition&#10;    _curl($url,$options)&#10;&#10;Description&#10;     HTTP request via cURL&#10;&#10;Parameters:&#10;     $url - string&#10;     $options - array;;d41,269;;b2,0;;m $url;;p $options;;p">
</treenode>
<treenode node="_socket;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\web.php;f11;383;2;470;;;;vpos;;varray;;r&#10;Definition&#10;    _socket($url,$options)&#10;&#10;Description&#10;     HTTP request via low-level TCP/IP socket&#10;&#10;Parameters:&#10;     $url - string&#10;     $options - array;;d43,383;;b2,0;;m $url;;p $options;;p">
</treenode>
<treenode node="_stream;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\web.php;f11;335;2;375;;;;vpos;;varray;;r&#10;Definition&#10;    _stream($url,$options)&#10;&#10;Description&#10;     HTTP request via PHP stream wrapper&#10;&#10;Parameters:&#10;     $url - string&#10;     $options - array;;d43,335;;b2,0;;m $url;;p $options;;p">
</treenode>
<treenode node="acceptable;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\web.php;f1;94;2;116;;;;vpos;;varray;;r&#10;Definition&#10;    acceptable($list=NULL)&#10;&#10;Description&#10;     Return the MIME types stated in the HTTP Accept header as an array;s If a list of MIME types is specified, return the best match;s or FALSE if none found&#10;&#10;Parameters:&#10;     $list - string|array&#10;&#10;Return:&#10;   |string|FALSE;;d33,94;;b0,0;;m $list;;p">
</treenode>
<treenode node="diacritics;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\web.php;f1;808;2;859;;;;vpos;;varray;;r&#10;Definition&#10;    diacritics()&#10;&#10;Description&#10;     Return preset diacritics translation table;;d23,808;;b0,0;;m">
</treenode>
<treenode node="engine;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\web.php;f1;478;2;491;;;;vpos;;vstring;;r&#10;Definition&#10;    engine($arg=&apos;curl&apos;)&#10;&#10;Description&#10;     Specify the HTTP request engine to use;s If not available, fall back to an applicable substitute&#10;&#10;Parameters:&#10;     $arg - string;;d30,478;;b0,0;;m $arg;;p">
</treenode>
<treenode node="filler;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\web.php;f1;878;2;908;;;;vpos;;vstring;;r&#10;Definition&#10;    filler($count=1,$max=20,$std=TRUE)&#10;&#10;Description&#10;     Return chunk of text from standard Lorem Ipsum passage&#10;&#10;Parameters:&#10;     $count - int&#10;     $max - int&#10;     $std - bool;;d45,878;;b0,0;;m $count;;p $max;;p $std;;p">
</treenode>
<treenode node="mime;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\web.php;f1;39;2;85;;;;vpos;;vstring;;r&#10;Definition&#10;    mime($file)&#10;&#10;Description&#10;     Detect MIME type using file extension&#10;&#10;Parameters:&#10;     $file - string;;d22,39;;b0,0;;m $file;;p">
</treenode>
<treenode node="minify;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\web.php;f1;608;2;739;;;;vpos;;vstring;;r&#10;Definition&#10;    minify($files,$mime=NULL,$header=TRUE,$path=NULL)&#10;&#10;Description&#10;     Strip Javascript/CSS files of extraneous whitespaces and comments;s Return combined output as a minified string&#10;&#10;Parameters:&#10;     $files - string|array&#10;     $mime - string&#10;     $header - bool&#10;     $path - string;;d60,608;;b0,0;;m $files;;p $mime;;p $header;;p $path;;p">
</treenode>
<treenode node="progress;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\web.php;f1;256;2;261;;;;vpos;;vint;;r&#10;Definition&#10;    progress($id)&#10;&#10;Description&#10;     Return upload progress in bytes, FALSE on failure&#10;&#10;Parameters:&#10;     $id - string&#10;&#10;Return:&#10;   |FALSE;;d24,256;;b0,0;;m $id;;p">
</treenode>
<treenode node="receive;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\web.php;f1;179;2;249;;;;vpos;;varray;;r&#10;Definition&#10;    receive($func=NULL,$overwrite=FALSE,$slug=TRUE)&#10;&#10;Description&#10;     Receive file(s) from HTTP client&#10;&#10;Parameters:&#10;     $func - callback&#10;     $overwrite - bool&#10;     $slug - callback|bool&#10;&#10;Return:&#10;   |bool;;d58,179;;b0,0;;m $func;;p $overwrite;;p $slug;;p">
</treenode>
<treenode node="request;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\web.php;f1;517;2;597;;;;vpos;;varray;;r&#10;Definition&#10;    request($url,array $options=NULL)&#10;&#10;Description&#10;     Submit HTTP request;s Use HTTP context options (described in http://www.php.net/manual/en/context.http.php) if specified;s Cache the page as instructed by remote server&#10;&#10;Parameters:&#10;     $url - string&#10;     $options - array&#10;&#10;Return:&#10;   |FALSE;;d44,517;;b0,0;;m $url;;p $options;;p">
</treenode>
<treenode node="rss;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\web.php;f1;748;2;775;;;;vpos;;varray;;r&#10;Definition&#10;    rss($url,$max=10,$tags=NULL)&#10;&#10;Description&#10;     Retrieve RSS feed and return as an array&#10;&#10;Parameters:&#10;     $url - string&#10;     $max - int&#10;     $tags - string&#10;&#10;Return:&#10;   |FALSE;;d39,748;;b0,0;;m $url;;p $max;;p $tags;;p">
</treenode>
<treenode node="send;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\web.php;f1;129;2;170;;;;vpos;;vint;;r&#10;Definition&#10;    send($file,$mime=NULL,$kbps=0,$force=TRUE,$name=NULL,$flush=TRUE)&#10;&#10;Description&#10;     Transmit file to HTTP client;s Return file size if successful, FALSE otherwise&#10;&#10;Parameters:&#10;     $file - string&#10;     $mime - string&#10;     $kbps - int&#10;     $force - bool&#10;     $name - string&#10;     $flush - bool&#10;&#10;Return:&#10;   |FALSE;;d76,129;;b0,0;;m $file;;p $mime;;p $kbps;;p $force;;p $name;;p $flush;;p">
</treenode>
<treenode node="slug;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\web.php;f1;866;2;869;;;;vpos;;vstring;;r&#10;Definition&#10;    slug($text)&#10;&#10;Description&#10;     Return a URL/filesystem-friendly version of string&#10;&#10;Parameters:&#10;     $text - string;;d22,866;;b0,0;;m $text;;p">
</treenode>
<treenode node="subst;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\web.php;f1;499;2;507;;;;vpos;;vNULL;;r&#10;Definition&#10;    subst(array &amp;$old,$new)&#10;&#10;Description&#10;     Replace old headers with new elements&#10;&#10;Parameters:&#10;     $old - array&#10;     $new - string|array;;d34,499;;b0,0;;m $old;;p $new;;p">
</treenode>
<treenode node="whois;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\web.php;f1;783;2;802;;;;vpos;;vstring;;r&#10;Definition&#10;    whois($addr,$server=&apos;whois.internic.net&apos;)&#10;&#10;Description&#10;     Retrieve information from whois server&#10;&#10;Parameters:&#10;     $addr - string&#10;     $server - string&#10;&#10;Return:&#10;   |FALSE;;d52,783;;b0,0;;m $addr;;p $server;;p">
</treenode>
</treenode>
<treenode node="WS;PHP:Class Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\cli\ws.php;f0;25;1;351;;;;vpos;;v;;r;;d9,25;;b0,0;;m">
<treenode node="Magic;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\cli\ws.php;f0;29;7;29;;;;vpos;;v;;rNULL;;d-1,-1;;b0,0;;m">
<treenode node="Packet;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\cli\ws.php;f0;31;8;31;;;;vpos;;v;;r65536;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="Text;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\cli\ws.php;f0;35;6;35;;;;vpos;;v;;rNULL;;d-1,-1;;b0,0;;m">
<treenode node="Binary;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\cli\ws.php;f0;36;8;36;;;;vpos;;v;;r&quot;\r\n&quot;;;d-1,-1;;b0,0;;m">
<treenode node="Close;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\cli\ws.php;f0;37;7;37;;;;vpos;;v;;r[];;d-1,-1;;b0,0;;m">
<treenode node="Ping;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\cli\ws.php;f0;38;6;38;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
<treenode node="Pong;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\cli\ws.php;f0;39;6;39;;;;vpos;;v;;r$this-&gt;read($socket))) {&#10;			$this-&gt;close($socket);;d-1,-1;;b0,0;;m">
<treenode node="OpCode;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\cli\ws.php;f0;40;8;40;;;;vpos;;v;;r[];;d-1,-1;;b0,0;;m">
<treenode node="Finale;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\cli\ws.php;f0;41;8;41;;;;vpos;;v;;r0x80;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="Length;PHP:PHP Word;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\cli\ws.php;f0;46;8;46;;;;vpos;;v;;r0x7f;;d-1,-1;;b0,0;;m">
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
</treenode>
<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\cli\ws.php;f1;344;2;349;;;;vpos;;vobject;;r&#10;Definition&#10;    __construct($addr,$ctx=NULL,$wait=60)&#10;&#10;Description&#10;     Instantiate object&#10;&#10;Parameters:&#10;     $addr - string&#10;     $ctx - resource&#10;     $wait - int;;d48,344;;b0,0;;m $addr;;p $ctx;;p $wait;;p">
</treenode>
<treenode node="agents;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\cli\ws.php;f1;192;2;199;;;;vpos;;varray;;r&#10;Definition&#10;    agents($uri=NULL)&#10;&#10;Description&#10;     Return socket agents&#10;&#10;Parameters:&#10;     $uri - string;;d28,192;;b0,0;;m $uri;;p">
</treenode>
<treenode node="close;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\cli\ws.php;f1;136;2;139;;;;vpos;;vNULL;;r&#10;Definition&#10;    close($socket)&#10;&#10;Description&#10;     Close stream socket&#10;&#10;Parameters:&#10;     $socket - resource;;d25,136;;b0,0;;m $socket;;p">
</treenode>
<treenode node="events;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\cli\ws.php;f1;205;2;207;;;;vpos;;varray;;r&#10;Definition&#10;    events()&#10;&#10;Description&#10;     Return event handlers;;d19,205;;b0,0;;m">
</treenode>
<treenode node="free;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\cli\ws.php;f1;146;2;150;;;;vpos;;vbool;;r&#10;Definition&#10;    free($socket)&#10;&#10;Description&#10;     Free stream socket&#10;&#10;Parameters:&#10;     $socket - resource;;d24,146;;b0,0;;m $socket;;p">
</treenode>
<treenode node="kill;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\cli\ws.php;f1;225;2;227;;;;vpos;;vNULL;;r&#10;Definition&#10;    kill($signal)&#10;&#10;Description&#10;     Terminate server&#10;&#10;Parameters:&#10;     $signal - int;;d24,225;;b0,0;;m $signal;;p">
</treenode>
<treenode node="on;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\cli\ws.php;f1;215;2;218;;;;vpos;;vobject;;r&#10;Definition&#10;    on($event,$func)&#10;&#10;Description&#10;     Bind function to event handler&#10;&#10;Parameters:&#10;     $event - string&#10;     $func - callable;;d27,215;;b0,0;;m $event;;p $func;;p">
</treenode>
<treenode node="read;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\cli\ws.php;f1;157;2;166;;;;vpos;;vstring;;r&#10;Definition&#10;    read($socket)&#10;&#10;Description&#10;     Read from stream socket&#10;&#10;Parameters:&#10;     $socket - resource&#10;&#10;Return:&#10;   |FALSE;;d24,157;;b0,0;;m $socket;;p">
</treenode>
<treenode node="run;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\cli\ws.php;f1;233;2;335;;;;vpos;;vobject;;r&#10;Definition&#10;    run()&#10;&#10;Description&#10;     Execute the server process;;d16,233;;b0,0;;m">
</treenode>
<treenode node="write;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\cli\ws.php;f1;174;2;185;;;;vpos;;vint;;r&#10;Definition&#10;    write($socket,$str)&#10;&#10;Description&#10;     Write to stream socket&#10;&#10;Parameters:&#10;     $socket - resource&#10;     $str - string&#10;&#10;Return:&#10;   |FALSE;;d30,174;;b0,0;;m $socket;;p $str;;p">
</treenode>
</treenode>
<treenode node="gzdecode;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\bcosca\fatfree-core\web.php;f1;918;2;929;;;;vpos;;v;;r&#10;Definition&#10;    gzdecode($str)&#10;&#10;Description&#10;     Decode gzip-compressed string&#10;&#10;Parameters:&#10;     $str - string;;d25,918;;b0,0;;m $str;;p">
</treenode>
<treenode node="includeFile;PHP:Function Name;C:\xampp\htdocs\claims-fab\vendor\composer\ClassLoader.php;f0;441;1;444;;;;vpos;;v;;r&#10;Definition&#10;    includeFile($file)&#10;&#10;Description&#10;     Scope isolated include.;;d0,442;;b0,0;;mfile;;p">
</treenode>
</phptree>
</codestructure>